import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as a,b as e}from"./app-CftAOn4p.js";const n={},r=e("h1",{id:"哈希表理论基础",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#哈希表理论基础"},[e("span",null,"哈希表理论基础")])],-1),s=e("blockquote",null,[e("p",null,"哈希表是根据关键码的值而直接进行访问的数据结构。")],-1),i=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结"},[e("span",null,"总结")])],-1),c=e("p",null,"当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法。",-1),l=e("p",null,"但是哈希法也是牺牲了空间换取了时间，因为我们要使用额外的数组，set或者是map来存放数据，才能实现快速的查找。",-1),p=[r,s,i,c,l];function h(m,d){return o(),a("div",null,p)}const g=t(n,[["render",h],["__file","hashtable01.html.vue"]]),b=JSON.parse('{"path":"/ComputerBasics/Algorithm/03HashTable/hashtable01.html","title":"哈希表理论基础","lang":"zh-CN","frontmatter":{"order":1,"date":"2024-03-01T00:00:00.000Z","category":["算法","哈希表"],"description":"哈希表理论基础 哈希表是根据关键码的值而直接进行访问的数据结构。 总结 当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法。 但是哈希法也是牺牲了空间换取了时间，因为我们要使用额外的数组，set或者是map来存放数据，才能实现快速的查找。","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/ComputerBasics/Algorithm/03HashTable/hashtable01.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"哈希表理论基础"}],["meta",{"property":"og:description","content":"哈希表理论基础 哈希表是根据关键码的值而直接进行访问的数据结构。 总结 当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法。 但是哈希法也是牺牲了空间换取了时间，因为我们要使用额外的数组，set或者是map来存放数据，才能实现快速的查找。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T02:37:49.000Z"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2024-03-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-01T02:37:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"哈希表理论基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-01T02:37:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1709260669000,"updatedTime":1709260669000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":1}]},"readingTime":{"minutes":0.41,"words":124},"filePathRelative":"ComputerBasics/Algorithm/03HashTable/hashtable01.md","localizedDate":"2024年3月1日","excerpt":"\\n<blockquote>\\n<p>哈希表是根据关键码的值而直接进行访问的数据结构。</p>\\n</blockquote>\\n<h2>总结</h2>\\n<p>当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法。</p>\\n<p>但是哈希法也是牺牲了空间换取了时间，因为我们要使用额外的数组，set或者是map来存放数据，才能实现快速的查找。</p>\\n","autoDesc":true}');export{g as comp,b as data};

const __vite__fileDeps=["assets/index.html-VbZzXoY6.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/intro.html-1wbLrhmO.js","assets/slides.html-BA3PibH8.js","assets/index.html-lLQmhyo6.js","assets/README01.html-DDGTKKDP.js","assets/Javase01.html-DEXkqO7P.js","assets/Javase02.html-BrHsdbkD.js","assets/Javase03.html-BJmPIoCd.js","assets/Javase04.html-BQJon20A.js","assets/Javase05.html-DML8G81I.js","assets/Javase06.html-HbEpb5uv.js","assets/Javase07.html-BJ4pWL2f.js","assets/Javase08.html-DS5YNsGX.js","assets/Javase09.html-BhGrPsgQ.js","assets/Javase10.html-Bl-dLxiD.js","assets/Javase11.html-B1MPIjNM.js","assets/Javase12.html-DANfPVbf.js","assets/index.html-CzhnfE9C.js","assets/index.html-hPfAd6bK.js","assets/javaweb01.html-CZvrkAqo.js","assets/javaweb02.html-CkqmMcpo.js","assets/javaweb03.html-CUdIIzwj.js","assets/index.html-BBlPaKGn.js","assets/mybatis01.html-aeueQ6WM.js","assets/mybatis02.html-pIVH2Wp-.js","assets/mybatis03.html-DejquJBX.js","assets/mybatis04.html-Bc5V8SKl.js","assets/mybatis05.html-Dp-k6n19.js","assets/mybatis06.html-DFLT3NwJ.js","assets/mybatis07.html-C8idQyS8.js","assets/index.html-CUbMr845.js","assets/mybatisplus01.html-CSJANeGP.js","assets/mybatisplus02.html-B2isg6R_.js","assets/index.html-dbw584pL.js","assets/spring01.html-DAr4VTKW.js","assets/spring02.html-CBU6x6OK.js","assets/spring03.html-DjanAkvJ.js","assets/index.html-DTZ_V735.js","assets/springboot01.html-CYYLa55Z.js","assets/springboot02.html-GP0DT3ZF.js","assets/springboot03.html-BuZHDo7R.js","assets/springboot04.html-DBYoGefY.js","assets/springboot05.html-DFb8DE-r.js","assets/springboot06.html-CmYI00tu.js","assets/springboot07.html-vs1FvAYY.js","assets/springboot08.html-BbxexLQy.js","assets/index.html-CqrXam7G.js","assets/springcloud01.html-jBjQ-E4V.js","assets/springcloud02.html-DKW0h21x.js","assets/springcloud03.html-CWmetkgA.js","assets/springcloud04.html-dOkGGeMV.js","assets/springcloud05.html-Cm4ANgt0.js","assets/springcloud06.html-B59krwS6.js","assets/springcloud07.html-CWtwNfn7.js","assets/springcloud08.html-B_Fz0DA3.js","assets/springcloud09.html-JL0dQ2ls.js","assets/springcloud10.html-BaBrfOdl.js","assets/springcloud11.html-uhoEvxsM.js","assets/springcloud12.html-WM2GOrgY.js","assets/springcloud13.html-BOmcHyEv.js","assets/springcloud14.html-CUEV5OP5.js","assets/springcloud15.html-DNzc2NSf.js","assets/springcloud16.html-CnP0wLFy.js","assets/springcloud17.html-DaFUfwIm.js","assets/index.html-CG3DlwCO.js","assets/springmvc01.html-iHu1MP88.js","assets/springmvc02.html-CDYwbqoH.js","assets/index.html-Bnim2fhs.js","assets/index.html-BVp6l1RA.js","assets/computernetword01.html-NC6AVBYc.js","assets/computernetwork02.html-3UhR5Fib.js","assets/index.html-DKvQx400.js","assets/index.html-MDPexzhZ.js","assets/index.html-CgmyK0hB.js","assets/index.html-Jumlnymh.js","assets/index.html-D4uYkHWa.js","assets/css01.html-BV2Vsf3k.js","assets/css02.html-yexinm2j.js","assets/css03.html-C-nhXIDl.js","assets/index.html-Q_o8WT1M.js","assets/html01.html-Cx_f4Mnq.js","assets/html02.html-CANfDf-H.js","assets/html03.html-CEivzo0g.js","assets/index.html-DqAuFKqU.js","assets/javascript01.html-PcChg7O9.js","assets/javascript02.html-DHiYq2xH.js","assets/javascript03.html-RtaVRK41.js","assets/javascript04.html-DjijrcOT.js","assets/javascript05.html-C7u59WxZ.js","assets/index.html-85Cs5fP0.js","assets/vue01.html-IgVQlu59.js","assets/vue02.html-BUNyE5sq.js","assets/vue03.html-BqPZqMjn.js","assets/vue04.html-k1aMf95g.js","assets/vue05.html-DKMs3N26.js","assets/vue06.html-B7qD6MiH.js","assets/vue07.html-BJSaXVon.js","assets/index.html-D17yGUkc.js","assets/index.html-DAF6fSi5.js","assets/disable.html-BCLyqaDY.js","assets/page.html-NOS_2mB_.js","assets/index.html-CZKmGFUy.js","assets/computer.html-Dr1HxI8D.js","assets/screen.html-DZH7bnnM.js","assets/index.html-CIdf63wM.js","assets/huike01.html-DBtxSMia.js","assets/huike02.html-CluWQFRP.js","assets/index.html-KSW028QG.js","assets/index.html-CSsEZVXO.js","assets/skytakeout01.html-CAjXvkEX.js","assets/skytakeout02.html-DOP_VW14.js","assets/skytakeout03.html-BxUml5GX.js","assets/skytakeout04.html-CLPBbEx1.js","assets/skytakeout05.html-2EXuoGOt.js","assets/skytakeout06.html-23c1Z_9j.js","assets/skytakeout07.html-Dx7CwO4l.js","assets/skytakeout08.html-vaemdt3y.js","assets/skytakeout09.html-CV9ry5NZ.js","assets/skytakeout10.html-Cme8wOhi.js","assets/skytakeout11.html-DMPMk-OG.js","assets/skytakeout12.html-CupgTclC.js","assets/index.html-YBgSJOee.js","assets/tjxt01.html-Chdk6mlN.js","assets/index.html-f4rklSr7.js","assets/index.html-DoLWIwSt.js","assets/markdown01.html-BfWo3y9J.js","assets/index.html-CX1etEhl.js","assets/index.html-D0sTUyk0.js","assets/arrays01.html-DbzvuSJa.js","assets/arrays02.html-Dvjiy2lA.js","assets/arrays03.html-3ks9qFkO.js","assets/arrays04.html-wwWa9g4g.js","assets/arrays05.html-FMkLu23N.js","assets/index.html-6aeIMPUN.js","assets/linkedlist01.html-BS9r7FZc.js","assets/linkedlist02.html-BSN3GsJS.js","assets/linkedlist03.html-BxBJ7Ink.js","assets/linkedlist04.html-Bg0gxBTU.js","assets/linkedlist05.html-HE33HRCl.js","assets/linkedlist06.html-Dbd4-zFH.js","assets/linkedlist07.html-BYW3910E.js","assets/linkedlist08.html-hESHbwgD.js","assets/index.html-JDPSVqNQ.js","assets/hashtable01.html-C_CXd64Q.js","assets/hashtable02.html-8pbS065n.js","assets/hashtable03.html-CbzQAq-4.js","assets/hashtable04.html-Dr3RF76N.js","assets/hashtable05.html-DfLH_2fw.js","assets/hashtable06.html-D31MGquM.js","assets/hashtable07.html-CZlJHQHS.js","assets/hashtable08.html-rIC0gUzX.js","assets/hashtable09.html-CfMBqrDk.js","assets/index.html-Dr5ax0cF.js","assets/String01.html-hq4JeTnN.js","assets/String02.html-q6YIHjSD.js","assets/String03.html-D_4a4BWs.js","assets/String04.html-CBMnBLXx.js","assets/String05.html-D9q1Koe8.js","assets/String06.html-ByTE_qrN.js","assets/String07.html-BlUGPVZm.js","assets/index.html-6GG36VRl.js","assets/doublePointer01.html-ClnDph_W.js","assets/doublePointer02.html-BUlc2Jqz.js","assets/doublePointer03.html-BuceQznF.js","assets/doublePointer04.html-BX9fuRiE.js","assets/doublePointer05.html-BI5msC1U.js","assets/doublePointer06.html-aOF3p1Zh.js","assets/doublePointer07.html-CGbaLmsu.js","assets/doublePointer08.html-CxZUdwhR.js","assets/doublePointer09.html-OuxU4iW6.js","assets/doublePointer10.html-DVuzpDSC.js","assets/index.html-CTff6vIe.js","assets/stacksAndQueues01.html-S2F81C8r.js","assets/stacksAndQueues02.html-5vs6K0Ex.js","assets/stacksAndQueues03.html-DBjRv8cl.js","assets/stacksAndQueues04.html-BjFAObs9.js","assets/stacksAndQueues05.html-BcRQ6fJQ.js","assets/stacksAndQueues06.html-DPraJmDm.js","assets/stacksAndQueues07.html-CEYCRy0h.js","assets/index.html-Be9bVd1w.js","assets/index.html-DToUPnxF.js","assets/index.html-Ckpt_gWt.js","assets/index.html-DRVzXEtT.js","assets/index.html-DOkJ1b_d.js","assets/index.html-CO0keFzc.js","assets/summary01.html-DRqgijWy.js","assets/index.html-P8PjADB9.js","assets/cn01.html-DSibKUVD.js","assets/cn02.html-BhLgef6E.js","assets/cn03.html-STEk-ged.js","assets/index.html-BvxklgnO.js","assets/ds01.html-NOQ7yFtG.js","assets/ds02_.html-BS343ZhP.js","assets/ds03.html-UaWeVrzB.js","assets/index.html-BZ8Q-7wY.js","assets/mo01.html-DAmAKyEw.js","assets/mo02.html-CPqdkFDN.js","assets/mo03.html-E1Js4usx.js","assets/index.html-DJIZXCwb.js","assets/osi01.html-cRABMthP.js","assets/osi02.html-Cr_-vxja.js","assets/osi03.html-Bh6kZ3UV.js","assets/index.html-riBoyrbA.js","assets/index.html-BFQH5LJF.js","assets/index.html-C6da71DG.js","assets/sql01.html-DZGhvL5y.js","assets/sql02.html-BSuLsu8z.js","assets/sql03.html-BA5dg6b_.js","assets/sql04.html-C0mK7xCd.js","assets/index.html-Dw3Lwdu9.js","assets/advanced01.html-CjPiGXxG.js","assets/index.html-DCp9tkiJ.js","assets/oam01.html-oLoRFy0y.js","assets/index.html-vcFZg0EJ.js","assets/day01.html-BqCoIctN.js","assets/day02.html-BiI0gD-G.js","assets/day03.html-F88VqzQQ.js","assets/day04.html-BEW8_IJV.js","assets/day05.html-DB6kg-D8.js","assets/day06.html-CPbk_9gs.js","assets/index.html-DAA_srm6.js","assets/git01.html-nsNVW8JQ.js","assets/index.html-3cgzB9uB.js","assets/day01.html-BLRlWhx6.js","assets/day02.html-ClBMgQe2.js","assets/index.html-Cx4Rfm_Z.js","assets/redis01.html-B4DtKT7n.js","assets/index.html-CE4Wqq_x.js","assets/manual01.html-BmLb20xv.js","assets/manual02.html-CvudO1XN.js","assets/manual03.html-Cc0IpqlH.js","assets/index.html-CWJsqdVW.js","assets/documentnotes01.html-vmcUuVLn.js","assets/documentnotes02.html-BkHIZ_Pi.js","assets/documentnotes03.html-Djztxwr5.js","assets/documentnotes04.html-5fBeGwsu.js","assets/documentnotes05.html-CmxPPhiB.js","assets/documentnotes06.html-et8Vm_T8.js","assets/documentnotes07.html-Dgo-4eZ2.js","assets/documentnotes08.html-CPzQpGF0.js","assets/documentnotes09.html-D82NeklJ.js","assets/documentnotes10.html-Yfdan08v.js","assets/documentnotes11.html-BY56x5-S.js","assets/index.html-DqVRhM5q.js","assets/dbi01.html-CoOgYZGS.js","assets/dbi02.html-DQNbP0vC.js","assets/dbi03.html-DRCVHyqU.js","assets/404.html-DydzzYiX.js","assets/index.html-C5uv90cu.js","assets/index.html-C4h7CRIP.js","assets/index.html-DdbMxofd.js","assets/index.html-DHvGxK5Q.js","assets/index.html-BYZ8Rgoo.js","assets/index.html-BhvKuIrt.js","assets/index.html-D45-8j5x.js","assets/index.html-BcEVAmGE.js","assets/index.html-CrYRrAbQ.js","assets/index.html-BV74a2wL.js","assets/index.html-DwTtcnq-.js","assets/index.html-DT13nA-q.js","assets/index.html-CbZZxvQi.js","assets/index.html-BsPJDoxh.js","assets/index.html-D1_kZriU.js","assets/index.html-DG7RtT85.js","assets/index.html-BSKLdqtg.js","assets/index.html-DX5gWcmo.js","assets/index.html-0lMwa-yY.js","assets/index.html-BbZcQSLa.js","assets/index.html-BoJQX7ES.js","assets/index.html-UZga_1yq.js","assets/index.html-Bx9krroT.js","assets/index.html-CqT1HgL7.js","assets/index.html-DVOLmt5r.js","assets/index.html-aC0OSlG_.js","assets/index.html-Bbe8KNfJ.js","assets/index.html-CSQ2aWE4.js","assets/index.html-D994XBqK.js","assets/index.html-DlWK_8Yd.js","assets/index.html-DAmkVlxP.js","assets/index.html-Cc02_Ids.js","assets/index.html-D8MyjzeX.js","assets/index.html-arCX56TI.js","assets/index.html-DpZwi3Fq.js","assets/index.html-wOXgXDiK.js","assets/index.html-DwHRQb9z.js","assets/index.html-BCegwl-d.js","assets/index.html-DT9Mou88.js","assets/index.html-C7a3joKS.js","assets/index.html-Dv7LR3ZY.js","assets/index.html-CxE2wrRc.js","assets/index.html-B7dPKI9P.js","assets/index.html-DCSTNmlU.js","assets/index.html-Cejj1j9L.js","assets/index.html-DHQAEvga.js","assets/index.html-DFvcBqd5.js","assets/index.html-CRCxEXLU.js","assets/index.html-CZdbMq1g.js","assets/index.html-JGjsUnA2.js","assets/index.html-DAXvy0ko.js","assets/index.html-C231TxT9.js","assets/index.html-ClAa1RLt.js","assets/index.html-4BshNhkH.js","assets/index.html-DEig30ps.js","assets/index.html-CJk1MOQh.js","assets/index.html-JnQTlnM8.js","assets/index.html-gOABCAqB.js","assets/index.html-DcNpoqZA.js","assets/index.html-BadU7Iii.js","assets/index.html-DvsUq7fG.js","assets/index.html-BllgKmwA.js","assets/index.html-CDMcEuvk.js","assets/index.html-CdSCu9X7.js","assets/index.html-CzQU24pq.js","assets/index.html-0cHf2kwS.js","assets/index.html-BwZS1dRT.js","assets/index.html-Ba6y8zaD.js","assets/index.html-VzxLAqRZ.js","assets/index.html-D5arooag.js","assets/index.html-DA_p439G.js","assets/index.html-B0uXckbF.js","assets/index.html-B3vNR-Om.js","assets/index.html-BvM4yeAk.js","assets/index.html-CsB4Iw-q.js","assets/index.html-CDy05Ly4.js","assets/index.html-D5Ju04Ie.js","assets/index.html-BGbKkSwC.js","assets/index.html-BCx_3m1K.js","assets/index.html-BsRBgHLZ.js","assets/index.html-DLT37-Py.js","assets/index.html-N_s1fqxN.js","assets/index.html-Dbj-LoCu.js","assets/index.html-CHte0ihd.js","assets/index.html-Ca25tD9s.js","assets/index.html-Ct6yjA5U.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
var wu=Object.defineProperty;var Eu=(n,s,a)=>s in n?wu(n,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[s]=a;var Oe=(n,s,a)=>(Eu(n,typeof s!="symbol"?s+"":s,a),a);/**
* @vue/shared v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function To(n,s){const a=new Set(n.split(","));return t=>a.has(t)}const Ln={},Oa=[],rs=()=>{},Su=()=>!1,_t=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),Po=n=>n.startsWith("onUpdate:"),In=Object.assign,Do=(n,s)=>{const a=n.indexOf(s);a>-1&&n.splice(a,1)},Au=Object.prototype.hasOwnProperty,kn=(n,s)=>Au.call(n,s),Z=Array.isArray,Ba=n=>me(n)==="[object Map]",Yc=n=>me(n)==="[object Set]",tn=n=>typeof n=="function",Mn=n=>typeof n=="string",ya=n=>typeof n=="symbol",En=n=>n!==null&&typeof n=="object",Xc=n=>(En(n)||tn(n))&&tn(n.then)&&tn(n.catch),Zc=Object.prototype.toString,me=n=>Zc.call(n),Lu=n=>me(n).slice(8,-1),nl=n=>me(n)==="[object Object]",Ro=n=>Mn(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,Ia=To(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),he=n=>{const s=Object.create(null);return a=>s[a]||(s[a]=n(a))},xu=/-(\w)/g,ms=he(n=>n.replace(xu,(s,a)=>a?a.toUpperCase():"")),Cu=/\B([A-Z])/g,Ha=he(n=>n.replace(Cu,"-$1").toLowerCase()),wt=he(n=>n.charAt(0).toUpperCase()+n.slice(1)),Be=he(n=>n?`on${wt(n)}`:""),ta=(n,s)=>!Object.is(n,s),Ie=(n,s)=>{for(let a=0;a<n.length;a++)n[a](s)},sl=(n,s,a,t=!1)=>{Object.defineProperty(n,s,{configurable:!0,enumerable:!1,writable:t,value:a})},Ou=n=>{const s=parseFloat(n);return isNaN(s)?n:s},Bu=n=>{const s=Mn(n)?Number(n):NaN;return isNaN(s)?n:s};let Bp;const al=()=>Bp||(Bp=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Mo(n){if(Z(n)){const s={};for(let a=0;a<n.length;a++){const t=n[a],e=Mn(t)?Du(t):Mo(t);if(e)for(const o in e)s[o]=e[o]}return s}else if(Mn(n)||En(n))return n}const Iu=/;(?![^(]*\))/g,Tu=/:([^]+)/,Pu=/\/\*[^]*?\*\//g;function Du(n){const s={};return n.replace(Pu,"").split(Iu).forEach(a=>{if(a){const t=a.split(Tu);t.length>1&&(s[t[0].trim()]=t[1].trim())}}),s}function jo(n){let s="";if(Mn(n))s=n;else if(Z(n))for(let a=0;a<n.length;a++){const t=jo(n[a]);t&&(s+=t+" ")}else if(En(n))for(const a in n)n[a]&&(s+=a+" ");return s.trim()}const Ru="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Mu=To(Ru);function tl(n){return!!n||n===""}const Ng=n=>Mn(n)?n:n==null?"":Z(n)||En(n)&&(n.toString===Zc||!tn(n.toString))?JSON.stringify(n,el,2):String(n),el=(n,s)=>s&&s.__v_isRef?el(n,s.value):Ba(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((a,[t,e],o)=>(a[Te(t,o)+" =>"]=e,a),{})}:Yc(s)?{[`Set(${s.size})`]:[...s.values()].map(a=>Te(a))}:ya(s)?Te(s):En(s)&&!Z(s)&&!nl(s)?String(s):s,Te=(n,s="")=>{var a;return ya(n)?`Symbol(${(a=n.description)!=null?a:s})`:n};/**
* @vue/reactivity v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let ns;class ju{constructor(s=!1){this.detached=s,this._active=!0,this.effects=[],this.cleanups=[],this.parent=ns,!s&&ns&&(this.index=(ns.scopes||(ns.scopes=[])).push(this)-1)}get active(){return this._active}run(s){if(this._active){const a=ns;try{return ns=this,s()}finally{ns=a}}}on(){ns=this}off(){ns=this.parent}stop(s){if(this._active){let a,t;for(a=0,t=this.effects.length;a<t;a++)this.effects[a].stop();for(a=0,t=this.cleanups.length;a<t;a++)this.cleanups[a]();if(this.scopes)for(a=0,t=this.scopes.length;a<t;a++)this.scopes[a].stop(!0);if(!this.detached&&this.parent&&!s){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function Vu(n,s=ns){s&&s.active&&s.effects.push(n)}function ol(){return ns}function Nu(n){ns&&ns.cleanups.push(n)}let ha;class Vo{constructor(s,a,t,e){this.fn=s,this.trigger=a,this.scheduler=t,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,Vu(this,e)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,pa();for(let s=0;s<this._depsLength;s++){const a=this.deps[s];if(a.computed&&($u(a.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),ca()}return this._dirtyLevel>=4}set dirty(s){this._dirtyLevel=s?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let s=sa,a=ha;try{return sa=!0,ha=this,this._runnings++,Ip(this),this.fn()}finally{Tp(this),this._runnings--,ha=a,sa=s}}stop(){this.active&&(Ip(this),Tp(this),this.onStop&&this.onStop(),this.active=!1)}}function $u(n){return n.value}function Ip(n){n._trackId++,n._depsLength=0}function Tp(n){if(n.deps.length>n._depsLength){for(let s=n._depsLength;s<n.deps.length;s++)pl(n.deps[s],n);n.deps.length=n._depsLength}}function pl(n,s){const a=n.get(s);a!==void 0&&s._trackId!==a&&(n.delete(s),n.size===0&&n.cleanup())}let sa=!0,to=0;const cl=[];function pa(){cl.push(sa),sa=!1}function ca(){const n=cl.pop();sa=n===void 0?!0:n}function No(){to++}function $o(){for(to--;!to&&eo.length;)eo.shift()()}function ll(n,s,a){if(s.get(n)!==n._trackId){s.set(n,n._trackId);const t=n.deps[n._depsLength];t!==s?(t&&pl(t,n),n.deps[n._depsLength++]=s):n._depsLength++}}const eo=[];function rl(n,s,a){No();for(const t of n.keys()){let e;t._dirtyLevel<s&&(e??(e=n.get(t)===t._trackId))&&(t._shouldSchedule||(t._shouldSchedule=t._dirtyLevel===0),t._dirtyLevel=s),t._shouldSchedule&&(e??(e=n.get(t)===t._trackId))&&(t.trigger(),(!t._runnings||t.allowRecurse)&&t._dirtyLevel!==2&&(t._shouldSchedule=!1,t.scheduler&&eo.push(t.scheduler)))}$o()}const il=(n,s)=>{const a=new Map;return a.cleanup=n,a.computed=s,a},oe=new WeakMap,fa=Symbol(""),oo=Symbol("");function Kn(n,s,a){if(sa&&ha){let t=oe.get(n);t||oe.set(n,t=new Map);let e=t.get(a);e||t.set(a,e=il(()=>t.delete(a))),ll(ha,e)}}function Vs(n,s,a,t,e,o){const c=oe.get(n);if(!c)return;let l=[];if(s==="clear")l=[...c.values()];else if(a==="length"&&Z(n)){const r=Number(t);c.forEach((i,u)=>{(u==="length"||!ya(u)&&u>=r)&&l.push(i)})}else switch(a!==void 0&&l.push(c.get(a)),s){case"add":Z(n)?Ro(a)&&l.push(c.get("length")):(l.push(c.get(fa)),Ba(n)&&l.push(c.get(oo)));break;case"delete":Z(n)||(l.push(c.get(fa)),Ba(n)&&l.push(c.get(oo)));break;case"set":Ba(n)&&l.push(c.get(fa));break}No();for(const r of l)r&&rl(r,4);$o()}function Hu(n,s){const a=oe.get(n);return a&&a.get(s)}const Fu=To("__proto__,__v_isRef,__isVue"),ul=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(ya)),Pp=qu();function qu(){const n={};return["includes","indexOf","lastIndexOf"].forEach(s=>{n[s]=function(...a){const t=dn(this);for(let o=0,c=this.length;o<c;o++)Kn(t,"get",o+"");const e=t[s](...a);return e===-1||e===!1?t[s](...a.map(dn)):e}}),["push","pop","shift","unshift","splice"].forEach(s=>{n[s]=function(...a){pa(),No();const t=dn(this)[s].apply(this,a);return $o(),ca(),t}}),n}function zu(n){ya(n)||(n=String(n));const s=dn(this);return Kn(s,"has",n),s.hasOwnProperty(n)}class kl{constructor(s=!1,a=!1){this._isReadonly=s,this._isShallow=a}get(s,a,t){const e=this._isReadonly,o=this._isShallow;if(a==="__v_isReactive")return!e;if(a==="__v_isReadonly")return e;if(a==="__v_isShallow")return o;if(a==="__v_raw")return t===(e?o?tk:fl:o?hl:ml).get(s)||Object.getPrototypeOf(s)===Object.getPrototypeOf(t)?s:void 0;const c=Z(s);if(!e){if(c&&kn(Pp,a))return Reflect.get(Pp,a,t);if(a==="hasOwnProperty")return zu}const l=Reflect.get(s,a,t);return(ya(a)?ul.has(a):Fu(a))||(e||Kn(s,"get",a),o)?l:jn(l)?c&&Ro(a)?l:l.value:En(l)?e?$s(l):Et(l):l}}class dl extends kl{constructor(s=!1){super(!1,s)}set(s,a,t,e){let o=s[a];if(!this._isShallow){const r=ct(o);if(!pe(t)&&!ct(t)&&(o=dn(o),t=dn(t)),!Z(s)&&jn(o)&&!jn(t))return r?!1:(o.value=t,!0)}const c=Z(s)&&Ro(a)?Number(a)<s.length:kn(s,a),l=Reflect.set(s,a,t,e);return s===dn(e)&&(c?ta(t,o)&&Vs(s,"set",a,t):Vs(s,"add",a,t)),l}deleteProperty(s,a){const t=kn(s,a);s[a];const e=Reflect.deleteProperty(s,a);return e&&t&&Vs(s,"delete",a,void 0),e}has(s,a){const t=Reflect.has(s,a);return(!ya(a)||!ul.has(a))&&Kn(s,"has",a),t}ownKeys(s){return Kn(s,"iterate",Z(s)?"length":fa),Reflect.ownKeys(s)}}class Gu extends kl{constructor(s=!1){super(!0,s)}set(s,a){return!0}deleteProperty(s,a){return!0}}const Ju=new dl,Uu=new Gu,Wu=new dl(!0);const Ho=n=>n,fe=n=>Reflect.getPrototypeOf(n);function Ht(n,s,a=!1,t=!1){n=n.__v_raw;const e=dn(n),o=dn(s);a||(ta(s,o)&&Kn(e,"get",s),Kn(e,"get",o));const{has:c}=fe(e),l=t?Ho:a?zo:lt;if(c.call(e,s))return l(n.get(s));if(c.call(e,o))return l(n.get(o));n!==e&&n.get(s)}function Ft(n,s=!1){const a=this.__v_raw,t=dn(a),e=dn(n);return s||(ta(n,e)&&Kn(t,"has",n),Kn(t,"has",e)),n===e?a.has(n):a.has(n)||a.has(e)}function qt(n,s=!1){return n=n.__v_raw,!s&&Kn(dn(n),"iterate",fa),Reflect.get(n,"size",n)}function Dp(n){n=dn(n);const s=dn(this);return fe(s).has.call(s,n)||(s.add(n),Vs(s,"add",n,n)),this}function Rp(n,s){s=dn(s);const a=dn(this),{has:t,get:e}=fe(a);let o=t.call(a,n);o||(n=dn(n),o=t.call(a,n));const c=e.call(a,n);return a.set(n,s),o?ta(s,c)&&Vs(a,"set",n,s):Vs(a,"add",n,s),this}function Mp(n){const s=dn(this),{has:a,get:t}=fe(s);let e=a.call(s,n);e||(n=dn(n),e=a.call(s,n)),t&&t.call(s,n);const o=s.delete(n);return e&&Vs(s,"delete",n,void 0),o}function jp(){const n=dn(this),s=n.size!==0,a=n.clear();return s&&Vs(n,"clear",void 0,void 0),a}function zt(n,s){return function(t,e){const o=this,c=o.__v_raw,l=dn(c),r=s?Ho:n?zo:lt;return!n&&Kn(l,"iterate",fa),c.forEach((i,u)=>t.call(e,r(i),r(u),o))}}function Gt(n,s,a){return function(...t){const e=this.__v_raw,o=dn(e),c=Ba(o),l=n==="entries"||n===Symbol.iterator&&c,r=n==="keys"&&c,i=e[n](...t),u=a?Ho:s?zo:lt;return!s&&Kn(o,"iterate",r?oo:fa),{next(){const{value:k,done:d}=i.next();return d?{value:k,done:d}:{value:l?[u(k[0]),u(k[1])]:u(k),done:d}},[Symbol.iterator](){return this}}}}function Gs(n){return function(...s){return n==="delete"?!1:n==="clear"?void 0:this}}function Qu(){const n={get(o){return Ht(this,o)},get size(){return qt(this)},has:Ft,add:Dp,set:Rp,delete:Mp,clear:jp,forEach:zt(!1,!1)},s={get(o){return Ht(this,o,!1,!0)},get size(){return qt(this)},has:Ft,add:Dp,set:Rp,delete:Mp,clear:jp,forEach:zt(!1,!0)},a={get(o){return Ht(this,o,!0)},get size(){return qt(this,!0)},has(o){return Ft.call(this,o,!0)},add:Gs("add"),set:Gs("set"),delete:Gs("delete"),clear:Gs("clear"),forEach:zt(!0,!1)},t={get(o){return Ht(this,o,!0,!0)},get size(){return qt(this,!0)},has(o){return Ft.call(this,o,!0)},add:Gs("add"),set:Gs("set"),delete:Gs("delete"),clear:Gs("clear"),forEach:zt(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{n[o]=Gt(o,!1,!1),a[o]=Gt(o,!0,!1),s[o]=Gt(o,!1,!0),t[o]=Gt(o,!0,!0)}),[n,a,s,t]}const[Ku,Yu,Xu,Zu]=Qu();function Fo(n,s){const a=s?n?Zu:Xu:n?Yu:Ku;return(t,e,o)=>e==="__v_isReactive"?!n:e==="__v_isReadonly"?n:e==="__v_raw"?t:Reflect.get(kn(a,e)&&e in t?a:t,e,o)}const nk={get:Fo(!1,!1)},sk={get:Fo(!1,!0)},ak={get:Fo(!0,!1)};const ml=new WeakMap,hl=new WeakMap,fl=new WeakMap,tk=new WeakMap;function ek(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ok(n){return n.__v_skip||!Object.isExtensible(n)?0:ek(Lu(n))}function Et(n){return ct(n)?n:qo(n,!1,Ju,nk,ml)}function gl(n){return qo(n,!1,Wu,sk,hl)}function $s(n){return qo(n,!0,Uu,ak,fl)}function qo(n,s,a,t,e){if(!En(n)||n.__v_raw&&!(s&&n.__v_isReactive))return n;const o=e.get(n);if(o)return o;const c=ok(n);if(c===0)return n;const l=new Proxy(n,c===2?t:a);return e.set(n,l),l}function Ya(n){return ct(n)?Ya(n.__v_raw):!!(n&&n.__v_isReactive)}function ct(n){return!!(n&&n.__v_isReadonly)}function pe(n){return!!(n&&n.__v_isShallow)}function vl(n){return n?!!n.__v_raw:!1}function dn(n){const s=n&&n.__v_raw;return s?dn(s):n}function pk(n){return Object.isExtensible(n)&&sl(n,"__v_skip",!0),n}const lt=n=>En(n)?Et(n):n,zo=n=>En(n)?$s(n):n;class yl{constructor(s,a,t,e){this.getter=s,this._setter=a,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Vo(()=>s(this._value),()=>Xa(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!e,this.__v_isReadonly=t}get value(){const s=dn(this);return(!s._cacheable||s.effect.dirty)&&ta(s._value,s._value=s.effect.run())&&Xa(s,4),Go(s),s.effect._dirtyLevel>=2&&Xa(s,2),s._value}set value(s){this._setter(s)}get _dirty(){return this.effect.dirty}set _dirty(s){this.effect.dirty=s}}function ck(n,s,a=!1){let t,e;const o=tn(n);return o?(t=n,e=rs):(t=n.get,e=n.set),new yl(t,e,o||!e,a)}function Go(n){var s;sa&&ha&&(n=dn(n),ll(ha,(s=n.dep)!=null?s:n.dep=il(()=>n.dep=void 0,n instanceof yl?n:void 0)))}function Xa(n,s=4,a){n=dn(n);const t=n.dep;t&&rl(t,s)}function jn(n){return!!(n&&n.__v_isRef===!0)}function J(n){return bl(n,!1)}function Bn(n){return bl(n,!0)}function bl(n,s){return jn(n)?n:new lk(n,s)}class lk{constructor(s,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?s:dn(s),this._value=a?s:lt(s)}get value(){return Go(this),this._value}set value(s){const a=this.__v_isShallow||pe(s)||ct(s);s=a?s:dn(s),ta(s,this._rawValue)&&(this._rawValue=s,this._value=a?s:lt(s),Xa(this,4))}}function ga(n){return jn(n)?n.value:n}const rk={get:(n,s,a)=>ga(Reflect.get(n,s,a)),set:(n,s,a,t)=>{const e=n[s];return jn(e)&&!jn(a)?(e.value=a,!0):Reflect.set(n,s,a,t)}};function _l(n){return Ya(n)?n:new Proxy(n,rk)}class ik{constructor(s){this.dep=void 0,this.__v_isRef=!0;const{get:a,set:t}=s(()=>Go(this),()=>Xa(this));this._get=a,this._set=t}get value(){return this._get()}set value(s){this._set(s)}}function wl(n){return new ik(n)}class uk{constructor(s,a,t){this._object=s,this._key=a,this._defaultValue=t,this.__v_isRef=!0}get value(){const s=this._object[this._key];return s===void 0?this._defaultValue:s}set value(s){this._object[this._key]=s}get dep(){return Hu(dn(this._object),this._key)}}class kk{constructor(s){this._getter=s,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function Fa(n,s,a){return jn(n)?n:tn(n)?new kk(n):En(n)&&arguments.length>1?dk(n,s,a):J(n)}function dk(n,s,a){const t=n[s];return jn(t)?t:new uk(n,s,a)}/**
* @vue/runtime-core v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function aa(n,s,a,t){try{return t?n(...t):n()}catch(e){St(e,s,a)}}function us(n,s,a,t){if(tn(n)){const e=aa(n,s,a,t);return e&&Xc(e)&&e.catch(o=>{St(o,s,a)}),e}if(Z(n)){const e=[];for(let o=0;o<n.length;o++)e.push(us(n[o],s,a,t));return e}}function St(n,s,a,t=!0){const e=s?s.vnode:null;if(s){let o=s.parent;const c=s.proxy,l=`https://vuejs.org/error-reference/#runtime-${a}`;for(;o;){const i=o.ec;if(i){for(let u=0;u<i.length;u++)if(i[u](n,c,l)===!1)return}o=o.parent}const r=s.appContext.config.errorHandler;if(r){pa(),aa(r,null,10,[n,c,l]),ca();return}}mk(n,a,e,t)}function mk(n,s,a,t=!0){console.error(n)}let rt=!1,po=!1;const Fn=[];let Os=0;const Ta=[];let Ks=null,ka=0;const El=Promise.resolve();let Jo=null;function Hs(n){const s=Jo||El;return n?s.then(this?n.bind(this):n):s}function hk(n){let s=Os+1,a=Fn.length;for(;s<a;){const t=s+a>>>1,e=Fn[t],o=it(e);o<n||o===n&&e.pre?s=t+1:a=t}return s}function ge(n){(!Fn.length||!Fn.includes(n,rt&&n.allowRecurse?Os+1:Os))&&(n.id==null?Fn.push(n):Fn.splice(hk(n.id),0,n),Sl())}function Sl(){!rt&&!po&&(po=!0,Jo=El.then(Al))}function fk(n){const s=Fn.indexOf(n);s>Os&&Fn.splice(s,1)}function gk(n){Z(n)?Ta.push(...n):(!Ks||!Ks.includes(n,n.allowRecurse?ka+1:ka))&&Ta.push(n),Sl()}function Vp(n,s,a=rt?Os+1:0){for(;a<Fn.length;a++){const t=Fn[a];if(t&&t.pre){if(n&&t.id!==n.uid)continue;Fn.splice(a,1),a--,t()}}}function ce(n){if(Ta.length){const s=[...new Set(Ta)].sort((a,t)=>it(a)-it(t));if(Ta.length=0,Ks){Ks.push(...s);return}for(Ks=s,ka=0;ka<Ks.length;ka++)Ks[ka]();Ks=null,ka=0}}const it=n=>n.id==null?1/0:n.id,vk=(n,s)=>{const a=it(n)-it(s);if(a===0){if(n.pre&&!s.pre)return-1;if(s.pre&&!n.pre)return 1}return a};function Al(n){po=!1,rt=!0,Fn.sort(vk);try{for(Os=0;Os<Fn.length;Os++){const s=Fn[Os];s&&s.active!==!1&&aa(s,null,14)}}finally{Os=0,Fn.length=0,ce(),rt=!1,Jo=null,(Fn.length||Ta.length)&&Al()}}function yk(n,s,...a){if(n.isUnmounted)return;const t=n.vnode.props||Ln;let e=a;const o=s.startsWith("update:"),c=o&&s.slice(7);if(c&&c in t){const u=`${c==="modelValue"?"model":c}Modifiers`,{number:k,trim:d}=t[u]||Ln;d&&(e=a.map(h=>Mn(h)?h.trim():h)),k&&(e=a.map(Ou))}let l,r=t[l=Be(s)]||t[l=Be(ms(s))];!r&&o&&(r=t[l=Be(Ha(s))]),r&&us(r,n,6,e);const i=t[l+"Once"];if(i){if(!n.emitted)n.emitted={};else if(n.emitted[l])return;n.emitted[l]=!0,us(i,n,6,e)}}function Ll(n,s,a=!1){const t=s.emitsCache,e=t.get(n);if(e!==void 0)return e;const o=n.emits;let c={},l=!1;if(!tn(n)){const r=i=>{const u=Ll(i,s,!0);u&&(l=!0,In(c,u))};!a&&s.mixins.length&&s.mixins.forEach(r),n.extends&&r(n.extends),n.mixins&&n.mixins.forEach(r)}return!o&&!l?(En(n)&&t.set(n,null),null):(Z(o)?o.forEach(r=>c[r]=null):In(c,o),En(n)&&t.set(n,c),c)}function ve(n,s){return!n||!_t(s)?!1:(s=s.slice(2).replace(/Once$/,""),kn(n,s[0].toLowerCase()+s.slice(1))||kn(n,Ha(s))||kn(n,s))}let is=null,xl=null;function le(n){const s=is;return is=n,xl=n&&n.type.__scopeId||null,s}function bk(n,s=is,a){if(!s||n._n)return n;const t=(...e)=>{t._d&&Kp(-1);const o=le(s);let c;try{c=n(...e)}finally{le(o),t._d&&Kp(1)}return c};return t._n=!0,t._c=!0,t._d=!0,t}function Pe(n){const{type:s,vnode:a,proxy:t,withProxy:e,propsOptions:[o],slots:c,attrs:l,emit:r,render:i,renderCache:u,props:k,data:d,setupState:h,ctx:g,inheritAttrs:w}=n,E=le(n);let b,S;try{if(a.shapeFlag&4){const L=e||t,V=L;b=vs(i.call(V,L,u,k,h,d,g)),S=l}else{const L=s;b=vs(L.length>1?L(k,{attrs:l,slots:c,emit:r}):L(k,null)),S=s.props?l:_k(l)}}catch(L){tt.length=0,St(L,n,1),b=Rn(ys)}let y=b;if(S&&w!==!1){const L=Object.keys(S),{shapeFlag:V}=y;L.length&&V&7&&(o&&L.some(Po)&&(S=wk(S,o)),y=ea(y,S,!1,!0))}return a.dirs&&(y=ea(y,null,!1,!0),y.dirs=y.dirs?y.dirs.concat(a.dirs):a.dirs),a.transition&&(y.transition=a.transition),b=y,le(E),b}const _k=n=>{let s;for(const a in n)(a==="class"||a==="style"||_t(a))&&((s||(s={}))[a]=n[a]);return s},wk=(n,s)=>{const a={};for(const t in n)(!Po(t)||!(t.slice(9)in s))&&(a[t]=n[t]);return a};function Ek(n,s,a){const{props:t,children:e,component:o}=n,{props:c,children:l,patchFlag:r}=s,i=o.emitsOptions;if(s.dirs||s.transition)return!0;if(a&&r>=0){if(r&1024)return!0;if(r&16)return t?Np(t,c,i):!!c;if(r&8){const u=s.dynamicProps;for(let k=0;k<u.length;k++){const d=u[k];if(c[d]!==t[d]&&!ve(i,d))return!0}}}else return(e||l)&&(!l||!l.$stable)?!0:t===c?!1:t?c?Np(t,c,i):!0:!!c;return!1}function Np(n,s,a){const t=Object.keys(s);if(t.length!==Object.keys(n).length)return!0;for(let e=0;e<t.length;e++){const o=t[e];if(s[o]!==n[o]&&!ve(a,o))return!0}return!1}function Sk({vnode:n,parent:s},a){for(;s;){const t=s.subTree;if(t.suspense&&t.suspense.activeBranch===n&&(t.el=n.el),t===n)(n=s.vnode).el=a,s=s.parent;else break}}const Cl="components";function ks(n,s){return Lk(Cl,n,!0,s)||n}const Ak=Symbol.for("v-ndc");function Lk(n,s,a=!0,t=!1){const e=is||$n;if(e){const o=e.type;if(n===Cl){const l=bd(o,!1);if(l&&(l===s||l===ms(s)||l===wt(ms(s))))return o}const c=$p(e[n]||o[n],s)||$p(e.appContext[n],s);return!c&&t?o:c}}function $p(n,s){return n&&(n[s]||n[ms(s)]||n[wt(ms(s))])}const xk=n=>n.__isSuspense;function Ol(n,s){s&&s.pendingBranch?Z(n)?s.effects.push(...n):s.effects.push(n):gk(n)}const Ck=Symbol.for("v-scx"),Ok=()=>yn(Ck);function Bl(n,s){return Uo(n,null,s)}const Jt={};function en(n,s,a){return Uo(n,s,a)}function Uo(n,s,{immediate:a,deep:t,flush:e,once:o,onTrack:c,onTrigger:l}=Ln){if(s&&o){const T=s;s=(...H)=>{T(...H),V()}}const r=$n,i=T=>t===!0?T:xa(T,t===!1?1:void 0);let u,k=!1,d=!1;if(jn(n)?(u=()=>n.value,k=pe(n)):Ya(n)?(u=()=>i(n),k=!0):Z(n)?(d=!0,k=n.some(T=>Ya(T)||pe(T)),u=()=>n.map(T=>{if(jn(T))return T.value;if(Ya(T))return i(T);if(tn(T))return aa(T,r,2)})):tn(n)?s?u=()=>aa(n,r,2):u=()=>(h&&h(),us(n,r,3,[g])):u=rs,s&&t){const T=u;u=()=>xa(T())}let h,g=T=>{h=y.onStop=()=>{aa(T,r,4),h=y.onStop=void 0}},w;if(xt)if(g=rs,s?a&&us(s,r,3,[u(),d?[]:void 0,g]):u(),e==="sync"){const T=Ok();w=T.__watcherHandles||(T.__watcherHandles=[])}else return rs;let E=d?new Array(n.length).fill(Jt):Jt;const b=()=>{if(!(!y.active||!y.dirty))if(s){const T=y.run();(t||k||(d?T.some((H,M)=>ta(H,E[M])):ta(T,E)))&&(h&&h(),us(s,r,3,[T,E===Jt?void 0:d&&E[0]===Jt?[]:E,g]),E=T)}else y.run()};b.allowRecurse=!!s;let S;e==="sync"?S=b:e==="post"?S=()=>Jn(b,r&&r.suspense):(b.pre=!0,r&&(b.id=r.uid),S=()=>ge(b));const y=new Vo(u,rs,S),L=ol(),V=()=>{y.stop(),L&&Do(L.effects,y)};return s?a?b():E=y.run():e==="post"?Jn(y.run.bind(y),r&&r.suspense):y.run(),w&&w.push(V),V}function Bk(n,s,a){const t=this.proxy,e=Mn(n)?n.includes(".")?Il(t,n):()=>t[n]:n.bind(t,t);let o;tn(s)?o=s:(o=s.handler,a=s);const c=Lt(this),l=Uo(e,o.bind(t),a);return c(),l}function Il(n,s){const a=s.split(".");return()=>{let t=n;for(let e=0;e<a.length&&t;e++)t=t[a[e]];return t}}function xa(n,s=1/0,a){if(s<=0||!En(n)||n.__v_skip||(a=a||new Set,a.has(n)))return n;if(a.add(n),s--,jn(n))xa(n.value,s,a);else if(Z(n))for(let t=0;t<n.length;t++)xa(n[t],s,a);else if(Yc(n)||Ba(n))n.forEach(t=>{xa(t,s,a)});else if(nl(n))for(const t in n)xa(n[t],s,a);return n}function Cs(n,s,a,t){const e=n.dirs,o=s&&s.dirs;for(let c=0;c<e.length;c++){const l=e[c];o&&(l.oldValue=o[c].value);let r=l.dir[t];r&&(pa(),us(r,a,8,[n.el,l,n,s]),ca())}}const Ys=Symbol("_leaveCb"),Ut=Symbol("_enterCb");function Tl(){const n={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return mn(()=>{n.isMounted=!0}),Vl(()=>{n.isUnmounting=!0}),n}const ps=[Function,Array],Pl={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ps,onEnter:ps,onAfterEnter:ps,onEnterCancelled:ps,onBeforeLeave:ps,onLeave:ps,onAfterLeave:ps,onLeaveCancelled:ps,onBeforeAppear:ps,onAppear:ps,onAfterAppear:ps,onAppearCancelled:ps},Ik={name:"BaseTransition",props:Pl,setup(n,{slots:s}){const a=qa(),t=Tl();return()=>{const e=s.default&&Wo(s.default(),!0);if(!e||!e.length)return;let o=e[0];if(e.length>1){for(const d of e)if(d.type!==ys){o=d;break}}const c=dn(n),{mode:l}=c;if(t.isLeaving)return De(o);const r=Hp(o);if(!r)return De(o);const i=ut(r,c,t,a);kt(r,i);const u=a.subTree,k=u&&Hp(u);if(k&&k.type!==ys&&!da(r,k)){const d=ut(k,c,t,a);if(kt(k,d),l==="out-in"&&r.type!==ys)return t.isLeaving=!0,d.afterLeave=()=>{t.isLeaving=!1,a.update.active!==!1&&(a.effect.dirty=!0,a.update())},De(o);l==="in-out"&&r.type!==ys&&(d.delayLeave=(h,g,w)=>{const E=Dl(t,k);E[String(k.key)]=k,h[Ys]=()=>{g(),h[Ys]=void 0,delete i.delayedLeave},i.delayedLeave=w})}return o}}},Tk=Ik;function Dl(n,s){const{leavingVNodes:a}=n;let t=a.get(s.type);return t||(t=Object.create(null),a.set(s.type,t)),t}function ut(n,s,a,t){const{appear:e,mode:o,persisted:c=!1,onBeforeEnter:l,onEnter:r,onAfterEnter:i,onEnterCancelled:u,onBeforeLeave:k,onLeave:d,onAfterLeave:h,onLeaveCancelled:g,onBeforeAppear:w,onAppear:E,onAfterAppear:b,onAppearCancelled:S}=s,y=String(n.key),L=Dl(a,n),V=(M,W)=>{M&&us(M,t,9,W)},T=(M,W)=>{const I=W[1];V(M,W),Z(M)?M.every(G=>G.length<=1)&&I():M.length<=1&&I()},H={mode:o,persisted:c,beforeEnter(M){let W=l;if(!a.isMounted)if(e)W=w||l;else return;M[Ys]&&M[Ys](!0);const I=L[y];I&&da(n,I)&&I.el[Ys]&&I.el[Ys](),V(W,[M])},enter(M){let W=r,I=i,G=u;if(!a.isMounted)if(e)W=E||r,I=b||i,G=S||u;else return;let P=!1;const nn=M[Ut]=On=>{P||(P=!0,On?V(G,[M]):V(I,[M]),H.delayedLeave&&H.delayedLeave(),M[Ut]=void 0)};W?T(W,[M,nn]):nn()},leave(M,W){const I=String(n.key);if(M[Ut]&&M[Ut](!0),a.isUnmounting)return W();V(k,[M]);let G=!1;const P=M[Ys]=nn=>{G||(G=!0,W(),nn?V(g,[M]):V(h,[M]),M[Ys]=void 0,L[I]===n&&delete L[I])};L[I]=n,d?T(d,[M,P]):P()},clone(M){return ut(M,s,a,t)}};return H}function De(n){if(At(n))return n=ea(n),n.children=null,n}function Hp(n){if(!At(n))return n;const{shapeFlag:s,children:a}=n;if(a){if(s&16)return a[0];if(s&32&&tn(a.default))return a.default()}}function kt(n,s){n.shapeFlag&6&&n.component?kt(n.component.subTree,s):n.shapeFlag&128?(n.ssContent.transition=s.clone(n.ssContent),n.ssFallback.transition=s.clone(n.ssFallback)):n.transition=s}function Wo(n,s=!1,a){let t=[],e=0;for(let o=0;o<n.length;o++){let c=n[o];const l=a==null?c.key:String(a)+String(c.key!=null?c.key:o);c.type===ss?(c.patchFlag&128&&e++,t=t.concat(Wo(c.children,s,l))):(s||c.type!==ys)&&t.push(l!=null?ea(c,{key:l}):c)}if(e>1)for(let o=0;o<t.length;o++)t[o].patchFlag=-2;return t}/*! #__NO_SIDE_EFFECTS__ */function j(n,s){return tn(n)?In({name:n.name},s,{setup:n}):n}const Za=n=>!!n.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Rl(n){tn(n)&&(n={loader:n});const{loader:s,loadingComponent:a,errorComponent:t,delay:e=200,timeout:o,suspensible:c=!0,onError:l}=n;let r=null,i,u=0;const k=()=>(u++,r=null,d()),d=()=>{let h;return r||(h=r=s().catch(g=>{if(g=g instanceof Error?g:new Error(String(g)),l)return new Promise((w,E)=>{l(g,()=>w(k()),()=>E(g),u+1)});throw g}).then(g=>h!==r&&r?r:(g&&(g.__esModule||g[Symbol.toStringTag]==="Module")&&(g=g.default),i=g,g)))};return j({name:"AsyncComponentWrapper",__asyncLoader:d,get __asyncResolved(){return i},setup(){const h=$n;if(i)return()=>Re(i,h);const g=S=>{r=null,St(S,h,13,!t)};if(c&&h.suspense||xt)return d().then(S=>()=>Re(S,h)).catch(S=>(g(S),()=>t?Rn(t,{error:S}):null));const w=J(!1),E=J(),b=J(!!e);return e&&setTimeout(()=>{b.value=!1},e),o!=null&&setTimeout(()=>{if(!w.value&&!E.value){const S=new Error(`Async component timed out after ${o}ms.`);g(S),E.value=S}},o),d().then(()=>{w.value=!0,h.parent&&At(h.parent.vnode)&&(h.parent.effect.dirty=!0,ge(h.parent.update))}).catch(S=>{g(S),E.value=S}),()=>{if(w.value&&i)return Re(i,h);if(E.value&&t)return Rn(t,{error:E.value});if(a&&!b.value)return Rn(a)}}})}function Re(n,s){const{ref:a,props:t,children:e,ce:o}=s.vnode,c=Rn(n,t,e);return c.ref=a,c.ce=o,delete s.vnode.ce,c}const At=n=>n.type.__isKeepAlive;function Pk(n,s){Ml(n,"a",s)}function Dk(n,s){Ml(n,"da",s)}function Ml(n,s,a=$n){const t=n.__wdc||(n.__wdc=()=>{let e=a;for(;e;){if(e.isDeactivated)return;e=e.parent}return n()});if(ye(s,t,a),a){let e=a.parent;for(;e&&e.parent;)At(e.parent.vnode)&&Rk(t,s,a,e),e=e.parent}}function Rk(n,s,a,t){const e=ye(s,n,t,!0);ba(()=>{Do(t[s],e)},a)}function ye(n,s,a=$n,t=!1){if(a){const e=a[n]||(a[n]=[]),o=s.__weh||(s.__weh=(...c)=>{if(a.isUnmounted)return;pa();const l=Lt(a),r=us(s,a,n,c);return l(),ca(),r});return t?e.unshift(o):e.push(o),o}}const Fs=n=>(s,a=$n)=>(!xt||n==="sp")&&ye(n,(...t)=>s(...t),a),Mk=Fs("bm"),mn=Fs("m"),jk=Fs("bu"),jl=Fs("u"),Vl=Fs("bum"),ba=Fs("um"),Vk=Fs("sp"),Nk=Fs("rtg"),$k=Fs("rtc");function Hk(n,s=$n){ye("ec",n,s)}const co=n=>n?sr(n)?Xo(n)||n.proxy:co(n.parent):null,nt=In(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>co(n.parent),$root:n=>co(n.root),$emit:n=>n.emit,$options:n=>Qo(n),$forceUpdate:n=>n.f||(n.f=()=>{n.effect.dirty=!0,ge(n.update)}),$nextTick:n=>n.n||(n.n=Hs.bind(n.proxy)),$watch:n=>Bk.bind(n)}),Me=(n,s)=>n!==Ln&&!n.__isScriptSetup&&kn(n,s),Fk={get({_:n},s){if(s==="__v_skip")return!0;const{ctx:a,setupState:t,data:e,props:o,accessCache:c,type:l,appContext:r}=n;let i;if(s[0]!=="$"){const h=c[s];if(h!==void 0)switch(h){case 1:return t[s];case 2:return e[s];case 4:return a[s];case 3:return o[s]}else{if(Me(t,s))return c[s]=1,t[s];if(e!==Ln&&kn(e,s))return c[s]=2,e[s];if((i=n.propsOptions[0])&&kn(i,s))return c[s]=3,o[s];if(a!==Ln&&kn(a,s))return c[s]=4,a[s];lo&&(c[s]=0)}}const u=nt[s];let k,d;if(u)return s==="$attrs"&&Kn(n.attrs,"get",""),u(n);if((k=l.__cssModules)&&(k=k[s]))return k;if(a!==Ln&&kn(a,s))return c[s]=4,a[s];if(d=r.config.globalProperties,kn(d,s))return d[s]},set({_:n},s,a){const{data:t,setupState:e,ctx:o}=n;return Me(e,s)?(e[s]=a,!0):t!==Ln&&kn(t,s)?(t[s]=a,!0):kn(n.props,s)||s[0]==="$"&&s.slice(1)in n?!1:(o[s]=a,!0)},has({_:{data:n,setupState:s,accessCache:a,ctx:t,appContext:e,propsOptions:o}},c){let l;return!!a[c]||n!==Ln&&kn(n,c)||Me(s,c)||(l=o[0])&&kn(l,c)||kn(t,c)||kn(nt,c)||kn(e.config.globalProperties,c)},defineProperty(n,s,a){return a.get!=null?n._.accessCache[s]=0:kn(a,"value")&&this.set(n,s,a.value,null),Reflect.defineProperty(n,s,a)}};function Fp(n){return Z(n)?n.reduce((s,a)=>(s[a]=null,s),{}):n}let lo=!0;function qk(n){const s=Qo(n),a=n.proxy,t=n.ctx;lo=!1,s.beforeCreate&&qp(s.beforeCreate,n,"bc");const{data:e,computed:o,methods:c,watch:l,provide:r,inject:i,created:u,beforeMount:k,mounted:d,beforeUpdate:h,updated:g,activated:w,deactivated:E,beforeDestroy:b,beforeUnmount:S,destroyed:y,unmounted:L,render:V,renderTracked:T,renderTriggered:H,errorCaptured:M,serverPrefetch:W,expose:I,inheritAttrs:G,components:P,directives:nn,filters:On}=s;if(i&&zk(i,t,null),c)for(const sn in c){const Q=c[sn];tn(Q)&&(t[sn]=Q.bind(a))}if(e){const sn=e.call(a,a);En(sn)&&(n.data=Et(sn))}if(lo=!0,o)for(const sn in o){const Q=o[sn],Tn=tn(Q)?Q.bind(a,a):tn(Q.get)?Q.get.bind(a,a):rs,As=!tn(Q)&&tn(Q.set)?Q.set.bind(a):rs,os=_({get:Tn,set:As});Object.defineProperty(t,sn,{enumerable:!0,configurable:!0,get:()=>os.value,set:Vn=>os.value=Vn})}if(l)for(const sn in l)Nl(l[sn],t,a,sn);if(r){const sn=tn(r)?r.call(a):r;Reflect.ownKeys(sn).forEach(Q=>{ds(Q,sn[Q])})}u&&qp(u,n,"c");function U(sn,Q){Z(Q)?Q.forEach(Tn=>sn(Tn.bind(a))):Q&&sn(Q.bind(a))}if(U(Mk,k),U(mn,d),U(jk,h),U(jl,g),U(Pk,w),U(Dk,E),U(Hk,M),U($k,T),U(Nk,H),U(Vl,S),U(ba,L),U(Vk,W),Z(I))if(I.length){const sn=n.exposed||(n.exposed={});I.forEach(Q=>{Object.defineProperty(sn,Q,{get:()=>a[Q],set:Tn=>a[Q]=Tn})})}else n.exposed||(n.exposed={});V&&n.render===rs&&(n.render=V),G!=null&&(n.inheritAttrs=G),P&&(n.components=P),nn&&(n.directives=nn)}function zk(n,s,a=rs){Z(n)&&(n=ro(n));for(const t in n){const e=n[t];let o;En(e)?"default"in e?o=yn(e.from||t,e.default,!0):o=yn(e.from||t):o=yn(e),jn(o)?Object.defineProperty(s,t,{enumerable:!0,configurable:!0,get:()=>o.value,set:c=>o.value=c}):s[t]=o}}function qp(n,s,a){us(Z(n)?n.map(t=>t.bind(s.proxy)):n.bind(s.proxy),s,a)}function Nl(n,s,a,t){const e=t.includes(".")?Il(a,t):()=>a[t];if(Mn(n)){const o=s[n];tn(o)&&en(e,o)}else if(tn(n))en(e,n.bind(a));else if(En(n))if(Z(n))n.forEach(o=>Nl(o,s,a,t));else{const o=tn(n.handler)?n.handler.bind(a):s[n.handler];tn(o)&&en(e,o,n)}}function Qo(n){const s=n.type,{mixins:a,extends:t}=s,{mixins:e,optionsCache:o,config:{optionMergeStrategies:c}}=n.appContext,l=o.get(s);let r;return l?r=l:!e.length&&!a&&!t?r=s:(r={},e.length&&e.forEach(i=>re(r,i,c,!0)),re(r,s,c)),En(s)&&o.set(s,r),r}function re(n,s,a,t=!1){const{mixins:e,extends:o}=s;o&&re(n,o,a,!0),e&&e.forEach(c=>re(n,c,a,!0));for(const c in s)if(!(t&&c==="expose")){const l=Gk[c]||a&&a[c];n[c]=l?l(n[c],s[c]):s[c]}return n}const Gk={data:zp,props:Gp,emits:Gp,methods:Qa,computed:Qa,beforeCreate:zn,created:zn,beforeMount:zn,mounted:zn,beforeUpdate:zn,updated:zn,beforeDestroy:zn,beforeUnmount:zn,destroyed:zn,unmounted:zn,activated:zn,deactivated:zn,errorCaptured:zn,serverPrefetch:zn,components:Qa,directives:Qa,watch:Uk,provide:zp,inject:Jk};function zp(n,s){return s?n?function(){return In(tn(n)?n.call(this,this):n,tn(s)?s.call(this,this):s)}:s:n}function Jk(n,s){return Qa(ro(n),ro(s))}function ro(n){if(Z(n)){const s={};for(let a=0;a<n.length;a++)s[n[a]]=n[a];return s}return n}function zn(n,s){return n?[...new Set([].concat(n,s))]:s}function Qa(n,s){return n?In(Object.create(null),n,s):s}function Gp(n,s){return n?Z(n)&&Z(s)?[...new Set([...n,...s])]:In(Object.create(null),Fp(n),Fp(s??{})):s}function Uk(n,s){if(!n)return s;if(!s)return n;const a=In(Object.create(null),n);for(const t in s)a[t]=zn(n[t],s[t]);return a}function $l(){return{app:null,config:{isNativeTag:Su,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Wk=0;function Qk(n,s){return function(t,e=null){tn(t)||(t=In({},t)),e!=null&&!En(e)&&(e=null);const o=$l(),c=new WeakSet;let l=!1;const r=o.app={_uid:Wk++,_component:t,_props:e,_container:null,_context:o,_instance:null,version:wd,get config(){return o.config},set config(i){},use(i,...u){return c.has(i)||(i&&tn(i.install)?(c.add(i),i.install(r,...u)):tn(i)&&(c.add(i),i(r,...u))),r},mixin(i){return o.mixins.includes(i)||o.mixins.push(i),r},component(i,u){return u?(o.components[i]=u,r):o.components[i]},directive(i,u){return u?(o.directives[i]=u,r):o.directives[i]},mount(i,u,k){if(!l){const d=Rn(t,e);return d.appContext=o,k===!0?k="svg":k===!1&&(k=void 0),u&&s?s(d,i):n(d,i,k),l=!0,r._container=i,i.__vue_app__=r,Xo(d.component)||d.component.proxy}},unmount(){l&&(n(null,r._container),delete r._container.__vue_app__)},provide(i,u){return o.provides[i]=u,r},runWithContext(i){const u=st;st=r;try{return i()}finally{st=u}}};return r}}let st=null;function ds(n,s){if($n){let a=$n.provides;const t=$n.parent&&$n.parent.provides;t===a&&(a=$n.provides=Object.create(t)),a[n]=s}}function yn(n,s,a=!1){const t=$n||is;if(t||st){const e=t?t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides:st._context.provides;if(e&&n in e)return e[n];if(arguments.length>1)return a&&tn(s)?s.call(t&&t.proxy):s}}const Hl={},Fl=()=>Object.create(Hl),ql=n=>Object.getPrototypeOf(n)===Hl;function Kk(n,s,a,t=!1){const e={},o=Fl();n.propsDefaults=Object.create(null),zl(n,s,e,o);for(const c in n.propsOptions[0])c in e||(e[c]=void 0);a?n.props=t?e:gl(e):n.type.props?n.props=e:n.props=o,n.attrs=o}function Yk(n,s,a,t){const{props:e,attrs:o,vnode:{patchFlag:c}}=n,l=dn(e),[r]=n.propsOptions;let i=!1;if((t||c>0)&&!(c&16)){if(c&8){const u=n.vnode.dynamicProps;for(let k=0;k<u.length;k++){let d=u[k];if(ve(n.emitsOptions,d))continue;const h=s[d];if(r)if(kn(o,d))h!==o[d]&&(o[d]=h,i=!0);else{const g=ms(d);e[g]=io(r,l,g,h,n,!1)}else h!==o[d]&&(o[d]=h,i=!0)}}}else{zl(n,s,e,o)&&(i=!0);let u;for(const k in l)(!s||!kn(s,k)&&((u=Ha(k))===k||!kn(s,u)))&&(r?a&&(a[k]!==void 0||a[u]!==void 0)&&(e[k]=io(r,l,k,void 0,n,!0)):delete e[k]);if(o!==l)for(const k in o)(!s||!kn(s,k))&&(delete o[k],i=!0)}i&&Vs(n.attrs,"set","")}function zl(n,s,a,t){const[e,o]=n.propsOptions;let c=!1,l;if(s)for(let r in s){if(Ia(r))continue;const i=s[r];let u;e&&kn(e,u=ms(r))?!o||!o.includes(u)?a[u]=i:(l||(l={}))[u]=i:ve(n.emitsOptions,r)||(!(r in t)||i!==t[r])&&(t[r]=i,c=!0)}if(o){const r=dn(a),i=l||Ln;for(let u=0;u<o.length;u++){const k=o[u];a[k]=io(e,r,k,i[k],n,!kn(i,k))}}return c}function io(n,s,a,t,e,o){const c=n[a];if(c!=null){const l=kn(c,"default");if(l&&t===void 0){const r=c.default;if(c.type!==Function&&!c.skipFactory&&tn(r)){const{propsDefaults:i}=e;if(a in i)t=i[a];else{const u=Lt(e);t=i[a]=r.call(null,s),u()}}else t=r}c[0]&&(o&&!l?t=!1:c[1]&&(t===""||t===Ha(a))&&(t=!0))}return t}function Gl(n,s,a=!1){const t=s.propsCache,e=t.get(n);if(e)return e;const o=n.props,c={},l=[];let r=!1;if(!tn(n)){const u=k=>{r=!0;const[d,h]=Gl(k,s,!0);In(c,d),h&&l.push(...h)};!a&&s.mixins.length&&s.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!o&&!r)return En(n)&&t.set(n,Oa),Oa;if(Z(o))for(let u=0;u<o.length;u++){const k=ms(o[u]);Jp(k)&&(c[k]=Ln)}else if(o)for(const u in o){const k=ms(u);if(Jp(k)){const d=o[u],h=c[k]=Z(d)||tn(d)?{type:d}:In({},d);if(h){const g=Qp(Boolean,h.type),w=Qp(String,h.type);h[0]=g>-1,h[1]=w<0||g<w,(g>-1||kn(h,"default"))&&l.push(k)}}}const i=[c,l];return En(n)&&t.set(n,i),i}function Jp(n){return n[0]!=="$"&&!Ia(n)}function Up(n){return n===null?"null":typeof n=="function"?n.name||"":typeof n=="object"&&n.constructor&&n.constructor.name||""}function Wp(n,s){return Up(n)===Up(s)}function Qp(n,s){return Z(s)?s.findIndex(a=>Wp(a,n)):tn(s)&&Wp(s,n)?0:-1}const Jl=n=>n[0]==="_"||n==="$stable",Ko=n=>Z(n)?n.map(vs):[vs(n)],Xk=(n,s,a)=>{if(s._n)return s;const t=bk((...e)=>Ko(s(...e)),a);return t._c=!1,t},Ul=(n,s,a)=>{const t=n._ctx;for(const e in n){if(Jl(e))continue;const o=n[e];if(tn(o))s[e]=Xk(e,o,t);else if(o!=null){const c=Ko(o);s[e]=()=>c}}},Wl=(n,s)=>{const a=Ko(s);n.slots.default=()=>a},Zk=(n,s)=>{const a=n.slots=Fl();if(n.vnode.shapeFlag&32){const t=s._;t?(In(a,s),sl(a,"_",t,!0)):Ul(s,a)}else s&&Wl(n,s)},nd=(n,s,a)=>{const{vnode:t,slots:e}=n;let o=!0,c=Ln;if(t.shapeFlag&32){const l=s._;l?a&&l===1?o=!1:(In(e,s),!a&&l===1&&delete e._):(o=!s.$stable,Ul(s,e)),c=s}else s&&(Wl(n,s),c={default:1});if(o)for(const l in e)!Jl(l)&&c[l]==null&&delete e[l]};function ie(n,s,a,t,e=!1){if(Z(n)){n.forEach((d,h)=>ie(d,s&&(Z(s)?s[h]:s),a,t,e));return}if(Za(t)&&!e)return;const o=t.shapeFlag&4?Xo(t.component)||t.component.proxy:t.el,c=e?null:o,{i:l,r}=n,i=s&&s.r,u=l.refs===Ln?l.refs={}:l.refs,k=l.setupState;if(i!=null&&i!==r&&(Mn(i)?(u[i]=null,kn(k,i)&&(k[i]=null)):jn(i)&&(i.value=null)),tn(r))aa(r,l,12,[c,u]);else{const d=Mn(r),h=jn(r);if(d||h){const g=()=>{if(n.f){const w=d?kn(k,r)?k[r]:u[r]:r.value;e?Z(w)&&Do(w,o):Z(w)?w.includes(o)||w.push(o):d?(u[r]=[o],kn(k,r)&&(k[r]=u[r])):(r.value=[o],n.k&&(u[n.k]=r.value))}else d?(u[r]=c,kn(k,r)&&(k[r]=c)):h&&(r.value=c,n.k&&(u[n.k]=c))};c?(g.id=-1,Jn(g,a)):g()}}}let Js=!1;const sd=n=>n.namespaceURI.includes("svg")&&n.tagName!=="foreignObject",ad=n=>n.namespaceURI.includes("MathML"),Wt=n=>{if(sd(n))return"svg";if(ad(n))return"mathml"},Qt=n=>n.nodeType===8;function td(n){const{mt:s,p:a,o:{patchProp:t,createText:e,nextSibling:o,parentNode:c,remove:l,insert:r,createComment:i}}=n,u=(y,L)=>{if(!L.hasChildNodes()){a(null,y,L),ce(),L._vnode=y;return}Js=!1,k(L.firstChild,y,null,null,null),ce(),L._vnode=y,Js&&console.error("Hydration completed but contains mismatches.")},k=(y,L,V,T,H,M=!1)=>{M=M||!!L.dynamicChildren;const W=Qt(y)&&y.data==="[",I=()=>w(y,L,V,T,H,W),{type:G,ref:P,shapeFlag:nn,patchFlag:On}=L;let Sn=y.nodeType;L.el=y,On===-2&&(M=!1,L.dynamicChildren=null);let U=null;switch(G){case Ra:Sn!==3?L.children===""?(r(L.el=e(""),c(y),y),U=y):U=I():(y.data!==L.children&&(Js=!0,y.data=L.children),U=o(y));break;case ys:S(y)?(U=o(y),b(L.el=y.content.firstChild,y,V)):Sn!==8||W?U=I():U=o(y);break;case at:if(W&&(y=o(y),Sn=y.nodeType),Sn===1||Sn===3){U=y;const sn=!L.children.length;for(let Q=0;Q<L.staticCount;Q++)sn&&(L.children+=U.nodeType===1?U.outerHTML:U.data),Q===L.staticCount-1&&(L.anchor=U),U=o(U);return W?o(U):U}else I();break;case ss:W?U=g(y,L,V,T,H,M):U=I();break;default:if(nn&1)(Sn!==1||L.type.toLowerCase()!==y.tagName.toLowerCase())&&!S(y)?U=I():U=d(y,L,V,T,H,M);else if(nn&6){L.slotScopeIds=H;const sn=c(y);if(W?U=E(y):Qt(y)&&y.data==="teleport start"?U=E(y,y.data,"teleport end"):U=o(y),s(L,sn,null,V,T,Wt(sn),M),Za(L)){let Q;W?(Q=Rn(ss),Q.anchor=U?U.previousSibling:sn.lastChild):Q=y.nodeType===3?nr(""):Rn("div"),Q.el=y,L.component.subTree=Q}}else nn&64?Sn!==8?U=I():U=L.type.hydrate(y,L,V,T,H,M,n,h):nn&128&&(U=L.type.hydrate(y,L,V,T,Wt(c(y)),H,M,n,k))}return P!=null&&ie(P,null,T,L),U},d=(y,L,V,T,H,M)=>{M=M||!!L.dynamicChildren;const{type:W,props:I,patchFlag:G,shapeFlag:P,dirs:nn,transition:On}=L,Sn=W==="input"||W==="option";if(Sn||G!==-1){nn&&Cs(L,null,V,"created");let U=!1;if(S(y)){U=Ql(T,On)&&V&&V.vnode.props&&V.vnode.props.appear;const Q=y.content.firstChild;U&&On.beforeEnter(Q),b(Q,y,V),L.el=y=Q}if(P&16&&!(I&&(I.innerHTML||I.textContent))){let Q=h(y.firstChild,L,y,V,T,H,M);for(;Q;){Js=!0;const Tn=Q;Q=Q.nextSibling,l(Tn)}}else P&8&&y.textContent!==L.children&&(Js=!0,y.textContent=L.children);if(I)if(Sn||!M||G&48)for(const Q in I)(Sn&&(Q.endsWith("value")||Q==="indeterminate")||_t(Q)&&!Ia(Q)||Q[0]===".")&&t(y,Q,null,I[Q],void 0,void 0,V);else I.onClick&&t(y,"onClick",null,I.onClick,void 0,void 0,V);let sn;(sn=I&&I.onVnodeBeforeMount)&&cs(sn,V,L),nn&&Cs(L,null,V,"beforeMount"),((sn=I&&I.onVnodeMounted)||nn||U)&&Ol(()=>{sn&&cs(sn,V,L),U&&On.enter(y),nn&&Cs(L,null,V,"mounted")},T)}return y.nextSibling},h=(y,L,V,T,H,M,W)=>{W=W||!!L.dynamicChildren;const I=L.children,G=I.length;for(let P=0;P<G;P++){const nn=W?I[P]:I[P]=vs(I[P]);if(y)y=k(y,nn,T,H,M,W);else{if(nn.type===Ra&&!nn.children)continue;Js=!0,a(null,nn,V,null,T,H,Wt(V),M)}}return y},g=(y,L,V,T,H,M)=>{const{slotScopeIds:W}=L;W&&(H=H?H.concat(W):W);const I=c(y),G=h(o(y),L,I,V,T,H,M);return G&&Qt(G)&&G.data==="]"?o(L.anchor=G):(Js=!0,r(L.anchor=i("]"),I,G),G)},w=(y,L,V,T,H,M)=>{if(Js=!0,L.el=null,M){const G=E(y);for(;;){const P=o(y);if(P&&P!==G)l(P);else break}}const W=o(y),I=c(y);return l(y),a(null,L,I,W,V,T,Wt(I),H),W},E=(y,L="[",V="]")=>{let T=0;for(;y;)if(y=o(y),y&&Qt(y)&&(y.data===L&&T++,y.data===V)){if(T===0)return o(y);T--}return y},b=(y,L,V)=>{const T=L.parentNode;T&&T.replaceChild(y,L);let H=V;for(;H;)H.vnode.el===L&&(H.vnode.el=H.subTree.el=y),H=H.parent},S=y=>y.nodeType===1&&y.tagName.toLowerCase()==="template";return[u,k]}const Jn=Ol;function ed(n){return od(n,td)}function od(n,s){const a=al();a.__VUE__=!0;const{insert:t,remove:e,patchProp:o,createElement:c,createText:l,createComment:r,setText:i,setElementText:u,parentNode:k,nextSibling:d,setScopeId:h=rs,insertStaticContent:g}=n,w=(f,v,A,O=null,C=null,R=null,F=void 0,D=null,N=!!v.dynamicChildren)=>{if(f===v)return;f&&!da(f,v)&&(O=x(f),Vn(f,C,R,!0),f=null),v.patchFlag===-2&&(N=!1,v.dynamicChildren=null);const{type:B,ref:z,shapeFlag:X}=v;switch(B){case Ra:E(f,v,A,O);break;case ys:b(f,v,A,O);break;case at:f==null&&S(v,A,O,F);break;case ss:P(f,v,A,O,C,R,F,D,N);break;default:X&1?V(f,v,A,O,C,R,F,D,N):X&6?nn(f,v,A,O,C,R,F,D,N):(X&64||X&128)&&B.process(f,v,A,O,C,R,F,D,N,K)}z!=null&&C&&ie(z,f&&f.ref,R,v||f,!v)},E=(f,v,A,O)=>{if(f==null)t(v.el=l(v.children),A,O);else{const C=v.el=f.el;v.children!==f.children&&i(C,v.children)}},b=(f,v,A,O)=>{f==null?t(v.el=r(v.children||""),A,O):v.el=f.el},S=(f,v,A,O)=>{[f.el,f.anchor]=g(f.children,v,A,O,f.el,f.anchor)},y=({el:f,anchor:v},A,O)=>{let C;for(;f&&f!==v;)C=d(f),t(f,A,O),f=C;t(v,A,O)},L=({el:f,anchor:v})=>{let A;for(;f&&f!==v;)A=d(f),e(f),f=A;e(v)},V=(f,v,A,O,C,R,F,D,N)=>{v.type==="svg"?F="svg":v.type==="math"&&(F="mathml"),f==null?T(v,A,O,C,R,F,D,N):W(f,v,C,R,F,D,N)},T=(f,v,A,O,C,R,F,D)=>{let N,B;const{props:z,shapeFlag:X,transition:Y,dirs:an}=f;if(N=f.el=c(f.type,R,z&&z.is,z),X&8?u(N,f.children):X&16&&M(f.children,N,null,O,C,je(f,R),F,D),an&&Cs(f,null,O,"created"),H(N,f,f.scopeId,F,O),z){for(const gn in z)gn!=="value"&&!Ia(gn)&&o(N,gn,null,z[gn],R,f.children,O,C,Pn);"value"in z&&o(N,"value",null,z.value,R),(B=z.onVnodeBeforeMount)&&cs(B,O,f)}an&&Cs(f,null,O,"beforeMount");const pn=Ql(C,Y);pn&&Y.beforeEnter(N),t(N,v,A),((B=z&&z.onVnodeMounted)||pn||an)&&Jn(()=>{B&&cs(B,O,f),pn&&Y.enter(N),an&&Cs(f,null,O,"mounted")},C)},H=(f,v,A,O,C)=>{if(A&&h(f,A),O)for(let R=0;R<O.length;R++)h(f,O[R]);if(C){let R=C.subTree;if(v===R){const F=C.vnode;H(f,F,F.scopeId,F.slotScopeIds,C.parent)}}},M=(f,v,A,O,C,R,F,D,N=0)=>{for(let B=N;B<f.length;B++){const z=f[B]=D?Xs(f[B]):vs(f[B]);w(null,z,v,A,O,C,R,F,D)}},W=(f,v,A,O,C,R,F)=>{const D=v.el=f.el;let{patchFlag:N,dynamicChildren:B,dirs:z}=v;N|=f.patchFlag&16;const X=f.props||Ln,Y=v.props||Ln;let an;if(A&&ra(A,!1),(an=Y.onVnodeBeforeUpdate)&&cs(an,A,v,f),z&&Cs(v,f,A,"beforeUpdate"),A&&ra(A,!0),B?I(f.dynamicChildren,B,D,A,O,je(v,C),R):F||Q(f,v,D,null,A,O,je(v,C),R,!1),N>0){if(N&16)G(D,v,X,Y,A,O,C);else if(N&2&&X.class!==Y.class&&o(D,"class",null,Y.class,C),N&4&&o(D,"style",X.style,Y.style,C),N&8){const pn=v.dynamicProps;for(let gn=0;gn<pn.length;gn++){const An=pn[gn],Nn=X[An],fs=Y[An];(fs!==Nn||An==="value")&&o(D,An,Nn,fs,C,f.children,A,O,Pn)}}N&1&&f.children!==v.children&&u(D,v.children)}else!F&&B==null&&G(D,v,X,Y,A,O,C);((an=Y.onVnodeUpdated)||z)&&Jn(()=>{an&&cs(an,A,v,f),z&&Cs(v,f,A,"updated")},O)},I=(f,v,A,O,C,R,F)=>{for(let D=0;D<v.length;D++){const N=f[D],B=v[D],z=N.el&&(N.type===ss||!da(N,B)||N.shapeFlag&70)?k(N.el):A;w(N,B,z,null,O,C,R,F,!0)}},G=(f,v,A,O,C,R,F)=>{if(A!==O){if(A!==Ln)for(const D in A)!Ia(D)&&!(D in O)&&o(f,D,A[D],null,F,v.children,C,R,Pn);for(const D in O){if(Ia(D))continue;const N=O[D],B=A[D];N!==B&&D!=="value"&&o(f,D,B,N,F,v.children,C,R,Pn)}"value"in O&&o(f,"value",A.value,O.value,F)}},P=(f,v,A,O,C,R,F,D,N)=>{const B=v.el=f?f.el:l(""),z=v.anchor=f?f.anchor:l("");let{patchFlag:X,dynamicChildren:Y,slotScopeIds:an}=v;an&&(D=D?D.concat(an):an),f==null?(t(B,A,O),t(z,A,O),M(v.children||[],A,z,C,R,F,D,N)):X>0&&X&64&&Y&&f.dynamicChildren?(I(f.dynamicChildren,Y,A,C,R,F,D),(v.key!=null||C&&v===C.subTree)&&Kl(f,v,!0)):Q(f,v,A,z,C,R,F,D,N)},nn=(f,v,A,O,C,R,F,D,N)=>{v.slotScopeIds=D,f==null?v.shapeFlag&512?C.ctx.activate(v,A,O,F,N):On(v,A,O,C,R,F,N):Sn(f,v,N)},On=(f,v,A,O,C,R,F)=>{const D=f.component=hd(f,O,C);if(At(f)&&(D.ctx.renderer=K),fd(D),D.asyncDep){if(C&&C.registerDep(D,U),!f.el){const N=D.subTree=Rn(ys);b(null,N,v,A)}}else U(D,f,v,A,C,R,F)},Sn=(f,v,A)=>{const O=v.component=f.component;if(Ek(f,v,A))if(O.asyncDep&&!O.asyncResolved){sn(O,v,A);return}else O.next=v,fk(O.update),O.effect.dirty=!0,O.update();else v.el=f.el,O.vnode=v},U=(f,v,A,O,C,R,F)=>{const D=()=>{if(f.isMounted){let{next:z,bu:X,u:Y,parent:an,vnode:pn}=f;{const Aa=Yl(f);if(Aa){z&&(z.el=pn.el,sn(f,z,F)),Aa.asyncDep.then(()=>{f.isUnmounted||D()});return}}let gn=z,An;ra(f,!1),z?(z.el=pn.el,sn(f,z,F)):z=pn,X&&Ie(X),(An=z.props&&z.props.onVnodeBeforeUpdate)&&cs(An,an,z,pn),ra(f,!0);const Nn=Pe(f),fs=f.subTree;f.subTree=Nn,w(fs,Nn,k(fs.el),x(fs),f,C,R),z.el=Nn.el,gn===null&&Sk(f,Nn.el),Y&&Jn(Y,C),(An=z.props&&z.props.onVnodeUpdated)&&Jn(()=>cs(An,an,z,pn),C)}else{let z;const{el:X,props:Y}=v,{bm:an,m:pn,parent:gn}=f,An=Za(v);if(ra(f,!1),an&&Ie(an),!An&&(z=Y&&Y.onVnodeBeforeMount)&&cs(z,gn,v),ra(f,!0),X&&bn){const Nn=()=>{f.subTree=Pe(f),bn(X,f.subTree,f,C,null)};An?v.type.__asyncLoader().then(()=>!f.isUnmounted&&Nn()):Nn()}else{const Nn=f.subTree=Pe(f);w(null,Nn,A,O,f,C,R),v.el=Nn.el}if(pn&&Jn(pn,C),!An&&(z=Y&&Y.onVnodeMounted)){const Nn=v;Jn(()=>cs(z,gn,Nn),C)}(v.shapeFlag&256||gn&&Za(gn.vnode)&&gn.vnode.shapeFlag&256)&&f.a&&Jn(f.a,C),f.isMounted=!0,v=A=O=null}},N=f.effect=new Vo(D,rs,()=>ge(B),f.scope),B=f.update=()=>{N.dirty&&N.run()};B.id=f.uid,ra(f,!0),B()},sn=(f,v,A)=>{v.component=f;const O=f.vnode.props;f.vnode=v,f.next=null,Yk(f,v.props,O,A),nd(f,v.children,A),pa(),Vp(f),ca()},Q=(f,v,A,O,C,R,F,D,N=!1)=>{const B=f&&f.children,z=f?f.shapeFlag:0,X=v.children,{patchFlag:Y,shapeFlag:an}=v;if(Y>0){if(Y&128){As(B,X,A,O,C,R,F,D,N);return}else if(Y&256){Tn(B,X,A,O,C,R,F,D,N);return}}an&8?(z&16&&Pn(B,C,R),X!==B&&u(A,X)):z&16?an&16?As(B,X,A,O,C,R,F,D,N):Pn(B,C,R,!0):(z&8&&u(A,""),an&16&&M(X,A,O,C,R,F,D,N))},Tn=(f,v,A,O,C,R,F,D,N)=>{f=f||Oa,v=v||Oa;const B=f.length,z=v.length,X=Math.min(B,z);let Y;for(Y=0;Y<X;Y++){const an=v[Y]=N?Xs(v[Y]):vs(v[Y]);w(f[Y],an,A,null,C,R,F,D,N)}B>z?Pn(f,C,R,!0,!1,X):M(v,A,O,C,R,F,D,N,X)},As=(f,v,A,O,C,R,F,D,N)=>{let B=0;const z=v.length;let X=f.length-1,Y=z-1;for(;B<=X&&B<=Y;){const an=f[B],pn=v[B]=N?Xs(v[B]):vs(v[B]);if(da(an,pn))w(an,pn,A,null,C,R,F,D,N);else break;B++}for(;B<=X&&B<=Y;){const an=f[X],pn=v[Y]=N?Xs(v[Y]):vs(v[Y]);if(da(an,pn))w(an,pn,A,null,C,R,F,D,N);else break;X--,Y--}if(B>X){if(B<=Y){const an=Y+1,pn=an<z?v[an].el:O;for(;B<=Y;)w(null,v[B]=N?Xs(v[B]):vs(v[B]),A,pn,C,R,F,D,N),B++}}else if(B>Y)for(;B<=X;)Vn(f[B],C,R,!0),B++;else{const an=B,pn=B,gn=new Map;for(B=pn;B<=Y;B++){const Zn=v[B]=N?Xs(v[B]):vs(v[B]);Zn.key!=null&&gn.set(Zn.key,B)}let An,Nn=0;const fs=Y-pn+1;let Aa=!1,xp=0;const Ga=new Array(fs);for(B=0;B<fs;B++)Ga[B]=0;for(B=an;B<=X;B++){const Zn=f[B];if(Nn>=fs){Vn(Zn,C,R,!0);continue}let xs;if(Zn.key!=null)xs=gn.get(Zn.key);else for(An=pn;An<=Y;An++)if(Ga[An-pn]===0&&da(Zn,v[An])){xs=An;break}xs===void 0?Vn(Zn,C,R,!0):(Ga[xs-pn]=B+1,xs>=xp?xp=xs:Aa=!0,w(Zn,v[xs],A,null,C,R,F,D,N),Nn++)}const Cp=Aa?pd(Ga):Oa;for(An=Cp.length-1,B=fs-1;B>=0;B--){const Zn=pn+B,xs=v[Zn],Op=Zn+1<z?v[Zn+1].el:O;Ga[B]===0?w(null,xs,A,Op,C,R,F,D,N):Aa&&(An<0||B!==Cp[An]?os(xs,A,Op,2):An--)}}},os=(f,v,A,O,C=null)=>{const{el:R,type:F,transition:D,children:N,shapeFlag:B}=f;if(B&6){os(f.component.subTree,v,A,O);return}if(B&128){f.suspense.move(v,A,O);return}if(B&64){F.move(f,v,A,K);return}if(F===ss){t(R,v,A);for(let X=0;X<N.length;X++)os(N[X],v,A,O);t(f.anchor,v,A);return}if(F===at){y(f,v,A);return}if(O!==2&&B&1&&D)if(O===0)D.beforeEnter(R),t(R,v,A),Jn(()=>D.enter(R),C);else{const{leave:X,delayLeave:Y,afterLeave:an}=D,pn=()=>t(R,v,A),gn=()=>{X(R,()=>{pn(),an&&an()})};Y?Y(R,pn,gn):gn()}else t(R,v,A)},Vn=(f,v,A,O=!1,C=!1)=>{const{type:R,props:F,ref:D,children:N,dynamicChildren:B,shapeFlag:z,patchFlag:X,dirs:Y}=f;if(D!=null&&ie(D,null,A,f,!0),z&256){v.ctx.deactivate(f);return}const an=z&1&&Y,pn=!Za(f);let gn;if(pn&&(gn=F&&F.onVnodeBeforeUnmount)&&cs(gn,v,f),z&6)Ls(f.component,A,O);else{if(z&128){f.suspense.unmount(A,O);return}an&&Cs(f,null,v,"beforeUnmount"),z&64?f.type.remove(f,v,A,C,K,O):B&&(R!==ss||X>0&&X&64)?Pn(B,v,A,!1,!0):(R===ss&&X&384||!C&&z&16)&&Pn(N,v,A),O&&Xn(f)}(pn&&(gn=F&&F.onVnodeUnmounted)||an)&&Jn(()=>{gn&&cs(gn,v,f),an&&Cs(f,null,v,"unmounted")},A)},Xn=f=>{const{type:v,el:A,anchor:O,transition:C}=f;if(v===ss){Ds(A,O);return}if(v===at){L(f);return}const R=()=>{e(A),C&&!C.persisted&&C.afterLeave&&C.afterLeave()};if(f.shapeFlag&1&&C&&!C.persisted){const{leave:F,delayLeave:D}=C,N=()=>F(A,R);D?D(f.el,R,N):N()}else R()},Ds=(f,v)=>{let A;for(;f!==v;)A=d(f),e(f),f=A;e(v)},Ls=(f,v,A)=>{const{bum:O,scope:C,update:R,subTree:F,um:D}=f;O&&Ie(O),C.stop(),R&&(R.active=!1,Vn(F,f,v,A)),D&&Jn(D,v),Jn(()=>{f.isUnmounted=!0},v),v&&v.pendingBranch&&!v.isUnmounted&&f.asyncDep&&!f.asyncResolved&&f.suspenseId===v.pendingId&&(v.deps--,v.deps===0&&v.resolve())},Pn=(f,v,A,O=!1,C=!1,R=0)=>{for(let F=R;F<f.length;F++)Vn(f[F],v,A,O,C)},x=f=>f.shapeFlag&6?x(f.component.subTree):f.shapeFlag&128?f.suspense.next():d(f.anchor||f.el);let q=!1;const $=(f,v,A)=>{f==null?v._vnode&&Vn(v._vnode,null,null,!0):w(v._vnode||null,f,v,null,null,null,A),q||(q=!0,Vp(),ce(),q=!1),v._vnode=f},K={p:w,um:Vn,m:os,r:Xn,mt:On,mc:M,pc:Q,pbc:I,n:x,o:n};let rn,bn;return s&&([rn,bn]=s(K)),{render:$,hydrate:rn,createApp:Qk($,rn)}}function je({type:n,props:s},a){return a==="svg"&&n==="foreignObject"||a==="mathml"&&n==="annotation-xml"&&s&&s.encoding&&s.encoding.includes("html")?void 0:a}function ra({effect:n,update:s},a){n.allowRecurse=s.allowRecurse=a}function Ql(n,s){return(!n||n&&!n.pendingBranch)&&s&&!s.persisted}function Kl(n,s,a=!1){const t=n.children,e=s.children;if(Z(t)&&Z(e))for(let o=0;o<t.length;o++){const c=t[o];let l=e[o];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=e[o]=Xs(e[o]),l.el=c.el),a||Kl(c,l)),l.type===Ra&&(l.el=c.el)}}function pd(n){const s=n.slice(),a=[0];let t,e,o,c,l;const r=n.length;for(t=0;t<r;t++){const i=n[t];if(i!==0){if(e=a[a.length-1],n[e]<i){s[t]=e,a.push(t);continue}for(o=0,c=a.length-1;o<c;)l=o+c>>1,n[a[l]]<i?o=l+1:c=l;i<n[a[o]]&&(o>0&&(s[t]=a[o-1]),a[o]=t)}}for(o=a.length,c=a[o-1];o-- >0;)a[o]=c,c=s[c];return a}function Yl(n){const s=n.subTree.component;if(s)return s.asyncDep&&!s.asyncResolved?s:Yl(s)}const cd=n=>n.__isTeleport,ss=Symbol.for("v-fgt"),Ra=Symbol.for("v-txt"),ys=Symbol.for("v-cmt"),at=Symbol.for("v-stc"),tt=[];let bs=null;function $g(n=!1){tt.push(bs=n?null:[])}function ld(){tt.pop(),bs=tt[tt.length-1]||null}let dt=1;function Kp(n){dt+=n}function rd(n){return n.dynamicChildren=dt>0?bs||Oa:null,ld(),dt>0&&bs&&bs.push(n),n}function Hg(n,s,a,t,e,o){return rd(Zl(n,s,a,t,e,o,!0))}function uo(n){return n?n.__v_isVNode===!0:!1}function da(n,s){return n.type===s.type&&n.key===s.key}const Xl=({key:n})=>n??null,ae=({ref:n,ref_key:s,ref_for:a})=>(typeof n=="number"&&(n=""+n),n!=null?Mn(n)||jn(n)||tn(n)?{i:is,r:n,k:s,f:!!a}:n:null);function Zl(n,s=null,a=null,t=0,e=null,o=n===ss?0:1,c=!1,l=!1){const r={__v_isVNode:!0,__v_skip:!0,type:n,props:s,key:s&&Xl(s),ref:s&&ae(s),scopeId:xl,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:t,dynamicProps:e,dynamicChildren:null,appContext:null,ctx:is};return l?(Yo(r,a),o&128&&n.normalize(r)):a&&(r.shapeFlag|=Mn(a)?8:16),dt>0&&!c&&bs&&(r.patchFlag>0||o&6)&&r.patchFlag!==32&&bs.push(r),r}const Rn=id;function id(n,s=null,a=null,t=0,e=null,o=!1){if((!n||n===Ak)&&(n=ys),uo(n)){const l=ea(n,s,!0);return a&&Yo(l,a),dt>0&&!o&&bs&&(l.shapeFlag&6?bs[bs.indexOf(n)]=l:bs.push(l)),l.patchFlag|=-2,l}if(_d(n)&&(n=n.__vccOpts),s){s=ud(s);let{class:l,style:r}=s;l&&!Mn(l)&&(s.class=jo(l)),En(r)&&(vl(r)&&!Z(r)&&(r=In({},r)),s.style=Mo(r))}const c=Mn(n)?1:xk(n)?128:cd(n)?64:En(n)?4:tn(n)?2:0;return Zl(n,s,a,t,e,c,o,!0)}function ud(n){return n?vl(n)||ql(n)?In({},n):n:null}function ea(n,s,a=!1,t=!1){const{props:e,ref:o,patchFlag:c,children:l,transition:r}=n,i=s?kd(e||{},s):e,u={__v_isVNode:!0,__v_skip:!0,type:n.type,props:i,key:i&&Xl(i),ref:s&&s.ref?a&&o?Z(o)?o.concat(ae(s)):[o,ae(s)]:ae(s):o,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:l,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:s&&n.type!==ss?c===-1?16:c|16:c,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:r,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&ea(n.ssContent),ssFallback:n.ssFallback&&ea(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce};return r&&t&&(u.transition=r.clone(u)),u}function nr(n=" ",s=0){return Rn(Ra,null,n,s)}function Fg(n,s){const a=Rn(at,null,n);return a.staticCount=s,a}function vs(n){return n==null||typeof n=="boolean"?Rn(ys):Z(n)?Rn(ss,null,n.slice()):typeof n=="object"?Xs(n):Rn(Ra,null,String(n))}function Xs(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:ea(n)}function Yo(n,s){let a=0;const{shapeFlag:t}=n;if(s==null)s=null;else if(Z(s))a=16;else if(typeof s=="object")if(t&65){const e=s.default;e&&(e._c&&(e._d=!1),Yo(n,e()),e._c&&(e._d=!0));return}else{a=32;const e=s._;!e&&!ql(s)?s._ctx=is:e===3&&is&&(is.slots._===1?s._=1:(s._=2,n.patchFlag|=1024))}else tn(s)?(s={default:s,_ctx:is},a=32):(s=String(s),t&64?(a=16,s=[nr(s)]):a=8);n.children=s,n.shapeFlag|=a}function kd(...n){const s={};for(let a=0;a<n.length;a++){const t=n[a];for(const e in t)if(e==="class")s.class!==t.class&&(s.class=jo([s.class,t.class]));else if(e==="style")s.style=Mo([s.style,t.style]);else if(_t(e)){const o=s[e],c=t[e];c&&o!==c&&!(Z(o)&&o.includes(c))&&(s[e]=o?[].concat(o,c):c)}else e!==""&&(s[e]=t[e])}return s}function cs(n,s,a,t=null){us(n,s,7,[a,t])}const dd=$l();let md=0;function hd(n,s,a){const t=n.type,e=(s?s.appContext:n.appContext)||dd,o={uid:md++,vnode:n,type:t,parent:s,appContext:e,root:null,next:null,subTree:null,effect:null,update:null,scope:new ju(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(e.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Gl(t,e),emitsOptions:Ll(t,e),emit:null,emitted:null,propsDefaults:Ln,inheritAttrs:t.inheritAttrs,ctx:Ln,data:Ln,props:Ln,attrs:Ln,slots:Ln,refs:Ln,setupState:Ln,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=s?s.root:o,o.emit=yk.bind(null,o),n.ce&&n.ce(o),o}let $n=null;const qa=()=>$n||is;let ue,ko;{const n=al(),s=(a,t)=>{let e;return(e=n[a])||(e=n[a]=[]),e.push(t),o=>{e.length>1?e.forEach(c=>c(o)):e[0](o)}};ue=s("__VUE_INSTANCE_SETTERS__",a=>$n=a),ko=s("__VUE_SSR_SETTERS__",a=>xt=a)}const Lt=n=>{const s=$n;return ue(n),n.scope.on(),()=>{n.scope.off(),ue(s)}},Yp=()=>{$n&&$n.scope.off(),ue(null)};function sr(n){return n.vnode.shapeFlag&4}let xt=!1;function fd(n,s=!1){s&&ko(s);const{props:a,children:t}=n.vnode,e=sr(n);Kk(n,a,e,s),Zk(n,t);const o=e?gd(n,s):void 0;return s&&ko(!1),o}function gd(n,s){const a=n.type;n.accessCache=Object.create(null),n.proxy=new Proxy(n.ctx,Fk);const{setup:t}=a;if(t){const e=n.setupContext=t.length>1?yd(n):null,o=Lt(n);pa();const c=aa(t,n,0,[n.props,e]);if(ca(),o(),Xc(c)){if(c.then(Yp,Yp),s)return c.then(l=>{Xp(n,l,s)}).catch(l=>{St(l,n,0)});n.asyncDep=c}else Xp(n,c,s)}else ar(n,s)}function Xp(n,s,a){tn(s)?n.type.__ssrInlineRender?n.ssrRender=s:n.render=s:En(s)&&(n.setupState=_l(s)),ar(n,a)}let Zp;function ar(n,s,a){const t=n.type;if(!n.render){if(!s&&Zp&&!t.render){const e=t.template||Qo(n).template;if(e){const{isCustomElement:o,compilerOptions:c}=n.appContext.config,{delimiters:l,compilerOptions:r}=t,i=In(In({isCustomElement:o,delimiters:l},c),r);t.render=Zp(e,i)}}n.render=t.render||rs}{const e=Lt(n);pa();try{qk(n)}finally{ca(),e()}}}const vd={get(n,s){return Kn(n,"get",""),n[s]}};function yd(n){const s=a=>{n.exposed=a||{}};return{attrs:new Proxy(n.attrs,vd),slots:n.slots,emit:n.emit,expose:s}}function Xo(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(_l(pk(n.exposed)),{get(s,a){if(a in s)return s[a];if(a in nt)return nt[a](n)},has(s,a){return a in s||a in nt}}))}function bd(n,s=!0){return tn(n)?n.displayName||n.name:n.name||s&&n.__name}function _d(n){return tn(n)&&"__vccOpts"in n}const _=(n,s)=>ck(n,s,xt);function p(n,s,a){const t=arguments.length;return t===2?En(s)&&!Z(s)?uo(s)?Rn(n,null,[s]):Rn(n,s):Rn(n,null,s):(t>3?a=Array.prototype.slice.call(arguments,2):t===3&&uo(a)&&(a=[a]),Rn(n,s,a))}const wd="3.4.27";/**
* @vue/runtime-dom v3.4.27
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Ed="http://www.w3.org/2000/svg",Sd="http://www.w3.org/1998/Math/MathML",Zs=typeof document<"u"?document:null,nc=Zs&&Zs.createElement("template"),Ad={insert:(n,s,a)=>{s.insertBefore(n,a||null)},remove:n=>{const s=n.parentNode;s&&s.removeChild(n)},createElement:(n,s,a,t)=>{const e=s==="svg"?Zs.createElementNS(Ed,n):s==="mathml"?Zs.createElementNS(Sd,n):Zs.createElement(n,a?{is:a}:void 0);return n==="select"&&t&&t.multiple!=null&&e.setAttribute("multiple",t.multiple),e},createText:n=>Zs.createTextNode(n),createComment:n=>Zs.createComment(n),setText:(n,s)=>{n.nodeValue=s},setElementText:(n,s)=>{n.textContent=s},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>Zs.querySelector(n),setScopeId(n,s){n.setAttribute(s,"")},insertStaticContent(n,s,a,t,e,o){const c=a?a.previousSibling:s.lastChild;if(e&&(e===o||e.nextSibling))for(;s.insertBefore(e.cloneNode(!0),a),!(e===o||!(e=e.nextSibling)););else{nc.innerHTML=t==="svg"?`<svg>${n}</svg>`:t==="mathml"?`<math>${n}</math>`:n;const l=nc.content;if(t==="svg"||t==="mathml"){const r=l.firstChild;for(;r.firstChild;)l.appendChild(r.firstChild);l.removeChild(r)}s.insertBefore(l,a)}return[c?c.nextSibling:s.firstChild,a?a.previousSibling:s.lastChild]}},Us="transition",Ja="animation",Ma=Symbol("_vtc"),oa=(n,{slots:s})=>p(Tk,er(n),s);oa.displayName="Transition";const tr={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Ld=oa.props=In({},Pl,tr),ia=(n,s=[])=>{Z(n)?n.forEach(a=>a(...s)):n&&n(...s)},sc=n=>n?Z(n)?n.some(s=>s.length>1):n.length>1:!1;function er(n){const s={};for(const P in n)P in tr||(s[P]=n[P]);if(n.css===!1)return s;const{name:a="v",type:t,duration:e,enterFromClass:o=`${a}-enter-from`,enterActiveClass:c=`${a}-enter-active`,enterToClass:l=`${a}-enter-to`,appearFromClass:r=o,appearActiveClass:i=c,appearToClass:u=l,leaveFromClass:k=`${a}-leave-from`,leaveActiveClass:d=`${a}-leave-active`,leaveToClass:h=`${a}-leave-to`}=n,g=xd(e),w=g&&g[0],E=g&&g[1],{onBeforeEnter:b,onEnter:S,onEnterCancelled:y,onLeave:L,onLeaveCancelled:V,onBeforeAppear:T=b,onAppear:H=S,onAppearCancelled:M=y}=s,W=(P,nn,On)=>{Qs(P,nn?u:l),Qs(P,nn?i:c),On&&On()},I=(P,nn)=>{P._isLeaving=!1,Qs(P,k),Qs(P,h),Qs(P,d),nn&&nn()},G=P=>(nn,On)=>{const Sn=P?H:S,U=()=>W(nn,P,On);ia(Sn,[nn,U]),ac(()=>{Qs(nn,P?r:o),Ms(nn,P?u:l),sc(Sn)||tc(nn,t,w,U)})};return In(s,{onBeforeEnter(P){ia(b,[P]),Ms(P,o),Ms(P,c)},onBeforeAppear(P){ia(T,[P]),Ms(P,r),Ms(P,i)},onEnter:G(!1),onAppear:G(!0),onLeave(P,nn){P._isLeaving=!0;const On=()=>I(P,nn);Ms(P,k),Ms(P,d),pr(),ac(()=>{P._isLeaving&&(Qs(P,k),Ms(P,h),sc(L)||tc(P,t,E,On))}),ia(L,[P,On])},onEnterCancelled(P){W(P,!1),ia(y,[P])},onAppearCancelled(P){W(P,!0),ia(M,[P])},onLeaveCancelled(P){I(P),ia(V,[P])}})}function xd(n){if(n==null)return null;if(En(n))return[Ve(n.enter),Ve(n.leave)];{const s=Ve(n);return[s,s]}}function Ve(n){return Bu(n)}function Ms(n,s){s.split(/\s+/).forEach(a=>a&&n.classList.add(a)),(n[Ma]||(n[Ma]=new Set)).add(s)}function Qs(n,s){s.split(/\s+/).forEach(t=>t&&n.classList.remove(t));const a=n[Ma];a&&(a.delete(s),a.size||(n[Ma]=void 0))}function ac(n){requestAnimationFrame(()=>{requestAnimationFrame(n)})}let Cd=0;function tc(n,s,a,t){const e=n._endId=++Cd,o=()=>{e===n._endId&&t()};if(a)return setTimeout(o,a);const{type:c,timeout:l,propCount:r}=or(n,s);if(!c)return t();const i=c+"end";let u=0;const k=()=>{n.removeEventListener(i,d),o()},d=h=>{h.target===n&&++u>=r&&k()};setTimeout(()=>{u<r&&k()},l+1),n.addEventListener(i,d)}function or(n,s){const a=window.getComputedStyle(n),t=g=>(a[g]||"").split(", "),e=t(`${Us}Delay`),o=t(`${Us}Duration`),c=ec(e,o),l=t(`${Ja}Delay`),r=t(`${Ja}Duration`),i=ec(l,r);let u=null,k=0,d=0;s===Us?c>0&&(u=Us,k=c,d=o.length):s===Ja?i>0&&(u=Ja,k=i,d=r.length):(k=Math.max(c,i),u=k>0?c>i?Us:Ja:null,d=u?u===Us?o.length:r.length:0);const h=u===Us&&/\b(transform|all)(,|$)/.test(t(`${Us}Property`).toString());return{type:u,timeout:k,propCount:d,hasTransform:h}}function ec(n,s){for(;n.length<s.length;)n=n.concat(n);return Math.max(...s.map((a,t)=>oc(a)+oc(n[t])))}function oc(n){return n==="auto"?0:Number(n.slice(0,-1).replace(",","."))*1e3}function pr(){return document.body.offsetHeight}function Od(n,s,a){const t=n[Ma];t&&(s=(s?[s,...t]:[...t]).join(" ")),s==null?n.removeAttribute("class"):a?n.setAttribute("class",s):n.className=s}const pc=Symbol("_vod"),Bd=Symbol("_vsh"),Id=Symbol(""),Td=/(^|;)\s*display\s*:/;function Pd(n,s,a){const t=n.style,e=Mn(a);let o=!1;if(a&&!e){if(s)if(Mn(s))for(const c of s.split(";")){const l=c.slice(0,c.indexOf(":")).trim();a[l]==null&&te(t,l,"")}else for(const c in s)a[c]==null&&te(t,c,"");for(const c in a)c==="display"&&(o=!0),te(t,c,a[c])}else if(e){if(s!==a){const c=t[Id];c&&(a+=";"+c),t.cssText=a,o=Td.test(a)}}else s&&n.removeAttribute("style");pc in n&&(n[pc]=o?t.display:"",n[Bd]&&(t.display="none"))}const cc=/\s*!important$/;function te(n,s,a){if(Z(a))a.forEach(t=>te(n,s,t));else if(a==null&&(a=""),s.startsWith("--"))n.setProperty(s,a);else{const t=Dd(n,s);cc.test(a)?n.setProperty(Ha(t),a.replace(cc,""),"important"):n[t]=a}}const lc=["Webkit","Moz","ms"],Ne={};function Dd(n,s){const a=Ne[s];if(a)return a;let t=ms(s);if(t!=="filter"&&t in n)return Ne[s]=t;t=wt(t);for(let e=0;e<lc.length;e++){const o=lc[e]+t;if(o in n)return Ne[s]=o}return s}const rc="http://www.w3.org/1999/xlink";function Rd(n,s,a,t,e){if(t&&s.startsWith("xlink:"))a==null?n.removeAttributeNS(rc,s.slice(6,s.length)):n.setAttributeNS(rc,s,a);else{const o=Mu(s);a==null||o&&!tl(a)?n.removeAttribute(s):n.setAttribute(s,o?"":a)}}function Md(n,s,a,t,e,o,c){if(s==="innerHTML"||s==="textContent"){t&&c(t,e,o),n[s]=a??"";return}const l=n.tagName;if(s==="value"&&l!=="PROGRESS"&&!l.includes("-")){const i=l==="OPTION"?n.getAttribute("value")||"":n.value,u=a??"";(i!==u||!("_value"in n))&&(n.value=u),a==null&&n.removeAttribute(s),n._value=a;return}let r=!1;if(a===""||a==null){const i=typeof n[s];i==="boolean"?a=tl(a):a==null&&i==="string"?(a="",r=!0):i==="number"&&(a=0,r=!0)}try{n[s]=a}catch{}r&&n.removeAttribute(s)}function jd(n,s,a,t){n.addEventListener(s,a,t)}function Vd(n,s,a,t){n.removeEventListener(s,a,t)}const ic=Symbol("_vei");function Nd(n,s,a,t,e=null){const o=n[ic]||(n[ic]={}),c=o[s];if(t&&c)c.value=t;else{const[l,r]=$d(s);if(t){const i=o[s]=qd(t,e);jd(n,l,i,r)}else c&&(Vd(n,l,c,r),o[s]=void 0)}}const uc=/(?:Once|Passive|Capture)$/;function $d(n){let s;if(uc.test(n)){s={};let t;for(;t=n.match(uc);)n=n.slice(0,n.length-t[0].length),s[t[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):Ha(n.slice(2)),s]}let $e=0;const Hd=Promise.resolve(),Fd=()=>$e||(Hd.then(()=>$e=0),$e=Date.now());function qd(n,s){const a=t=>{if(!t._vts)t._vts=Date.now();else if(t._vts<=a.attached)return;us(zd(t,a.value),s,5,[t])};return a.value=n,a.attached=Fd(),a}function zd(n,s){if(Z(s)){const a=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{a.call(n),n._stopped=!0},s.map(t=>e=>!e._stopped&&t&&t(e))}else return s}const kc=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,Gd=(n,s,a,t,e,o,c,l,r)=>{const i=e==="svg";s==="class"?Od(n,t,i):s==="style"?Pd(n,a,t):_t(s)?Po(s)||Nd(n,s,a,t,c):(s[0]==="."?(s=s.slice(1),!0):s[0]==="^"?(s=s.slice(1),!1):Jd(n,s,t,i))?Md(n,s,t,o,c,l,r):(s==="true-value"?n._trueValue=t:s==="false-value"&&(n._falseValue=t),Rd(n,s,t,i))};function Jd(n,s,a,t){if(t)return!!(s==="innerHTML"||s==="textContent"||s in n&&kc(s)&&tn(a));if(s==="spellcheck"||s==="draggable"||s==="translate"||s==="form"||s==="list"&&n.tagName==="INPUT"||s==="type"&&n.tagName==="TEXTAREA")return!1;if(s==="width"||s==="height"){const e=n.tagName;if(e==="IMG"||e==="VIDEO"||e==="CANVAS"||e==="SOURCE")return!1}return kc(s)&&Mn(a)?!1:s in n}const cr=new WeakMap,lr=new WeakMap,ke=Symbol("_moveCb"),dc=Symbol("_enterCb"),rr={name:"TransitionGroup",props:In({},Ld,{tag:String,moveClass:String}),setup(n,{slots:s}){const a=qa(),t=Tl();let e,o;return jl(()=>{if(!e.length)return;const c=n.moveClass||`${n.name||"v"}-move`;if(!Xd(e[0].el,a.vnode.el,c))return;e.forEach(Qd),e.forEach(Kd);const l=e.filter(Yd);pr(),l.forEach(r=>{const i=r.el,u=i.style;Ms(i,c),u.transform=u.webkitTransform=u.transitionDuration="";const k=i[ke]=d=>{d&&d.target!==i||(!d||/transform$/.test(d.propertyName))&&(i.removeEventListener("transitionend",k),i[ke]=null,Qs(i,c))};i.addEventListener("transitionend",k)})}),()=>{const c=dn(n),l=er(c);let r=c.tag||ss;if(e=[],o)for(let i=0;i<o.length;i++){const u=o[i];u.el&&u.el instanceof Element&&(e.push(u),kt(u,ut(u,l,t,a)),cr.set(u,u.el.getBoundingClientRect()))}o=s.default?Wo(s.default()):[];for(let i=0;i<o.length;i++){const u=o[i];u.key!=null&&kt(u,ut(u,l,t,a))}return Rn(r,null,o)}}},Ud=n=>delete n.mode;rr.props;const Wd=rr;function Qd(n){const s=n.el;s[ke]&&s[ke](),s[dc]&&s[dc]()}function Kd(n){lr.set(n,n.el.getBoundingClientRect())}function Yd(n){const s=cr.get(n),a=lr.get(n),t=s.left-a.left,e=s.top-a.top;if(t||e){const o=n.el.style;return o.transform=o.webkitTransform=`translate(${t}px,${e}px)`,o.transitionDuration="0s",n}}function Xd(n,s,a){const t=n.cloneNode(),e=n[Ma];e&&e.forEach(l=>{l.split(/\s+/).forEach(r=>r&&t.classList.remove(r))}),a.split(/\s+/).forEach(l=>l&&t.classList.add(l)),t.style.display="none";const o=s.nodeType===1?s:s.parentNode;o.appendChild(t);const{hasTransform:c}=or(t);return o.removeChild(t),c}const Zd=In({patchProp:Gd},Ad);let He,mc=!1;function n0(){return He=mc?He:ed(Zd),mc=!0,He}const s0=(...n)=>{const s=n0().createApp(...n),{mount:a}=s;return s.mount=t=>{const e=t0(t);if(e)return a(e,!0,a0(e))},s};function a0(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function t0(n){return Mn(n)?document.querySelector(n):n}var e0=["link","meta","script","style","noscript","template"],o0=["title","base"],p0=([n,s,a])=>o0.includes(n)?n:e0.includes(n)?n==="meta"&&s.name?`${n}.${s.name}`:n==="template"&&s.id?`${n}.${s.id}`:JSON.stringify([n,Object.entries(s).map(([t,e])=>typeof e=="boolean"?e?[t,""]:null:[t,e]).filter(t=>t!=null).sort(([t],[e])=>t.localeCompare(e)),a]):null,c0=n=>{const s=new Set,a=[];return n.forEach(t=>{const e=p0(t);e&&!s.has(e)&&(s.add(e),a.push(t))}),a},l0=n=>n[0]==="/"?n:`/${n}`,ir=n=>n[n.length-1]==="/"||n.endsWith(".html")?n:`${n}/`,hc=n=>{if(!n||n.endsWith("/"))return n;let s=n.replace(/(^|\/)README.md$/i,"$1index.html");return s.endsWith(".md")?s=s.substring(0,s.length-3)+".html":s.endsWith(".html")||(s=s+".html"),s.endsWith("/index.html")&&(s=s.substring(0,s.length-10)),s},Ct=n=>/^[a-z][a-z0-9+.-]*:/.test(n)||n.startsWith("//"),r0=/.md((\?|#).*)?$/,be=(n,s="/")=>Ct(n)||n.startsWith("/")&&!n.startsWith(s)&&!r0.test(n),_a=n=>/^(https?:)?\/\//.test(n),Ot=n=>Object.prototype.toString.call(n)==="[object Object]",i0="http://.",u0=(n,s)=>{if(!n.startsWith("/")&&s){const e=s.slice(0,s.lastIndexOf("/")),{pathname:o,search:c,hash:l}=new URL(`${e}/${n}`,i0);return hc(o)+c+l}const[a,...t]=n.split(/(\?|#)/);return hc(a)+t.join("")},Zo=n=>n[n.length-1]==="/"?n.slice(0,-1):n,ur=n=>n[0]==="/"?n.slice(1):n,k0=(n,s)=>{const a=Object.keys(n).sort((t,e)=>{const o=e.split("/").length-t.split("/").length;return o!==0?o:e.length-t.length});for(const t of a)if(s.startsWith(t))return t;return"/"},xn=n=>typeof n=="string";const d0="modulepreload",m0=function(n){return"/"+n},fc={},m=function(s,a,t){let e=Promise.resolve();if(a&&a.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),c=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));e=Promise.all(a.map(l=>{if(l=m0(l),l in fc)return;fc[l]=!0;const r=l.endsWith(".css"),i=r?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${i}`))return;const u=document.createElement("link");if(u.rel=r?"stylesheet":d0,r||(u.as="script",u.crossOrigin=""),u.href=l,c&&u.setAttribute("nonce",c),document.head.appendChild(u),r)return new Promise((k,d)=>{u.addEventListener("load",k),u.addEventListener("error",()=>d(new Error(`Unable to preload CSS for ${l}`)))})}))}return e.then(()=>s()).catch(o=>{const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=o,window.dispatchEvent(c),!c.defaultPrevented)throw o})},h0=JSON.parse('{"/ComputerBasics/DataStructure/01DS/ds02,.html":"/ComputerBasics/DataStructure/01DS/ds02_.html"}'),f0=Object.fromEntries([["/",{loader:()=>m(()=>import("./index.html-VbZzXoY6.js"),__vite__mapDeps([0,1])),meta:{t:"🏠️ 博客主页"}}],["/intro.html",{loader:()=>m(()=>import("./intro.html-1wbLrhmO.js"),__vite__mapDeps([2,1])),meta:{a:"Dongchengpeng",d:9618048e5,l:"2000年6月24日",c:["个人简介"],g:["个人简介"],e:`<div style="text-align:center;color:#f0f0f0; background-image: url('assets/intro/star.jpg'); opacity: 1; background-size: 390px; padding-top: 20px; padding-bottom: 20px;">
        地球这样的行星，是产生不了重元素的，你身体里的铁，来自璀璨的超新星爆炸。<br><br>
        血液里的锌，源自两次中子星对撞后喷射向宇宙的尘埃。<br><br>
        那微量的铜，更是需要见证一颗白矮星的死亡，<br><br>
        即使是最微不足道的钴，也源自几十亿光年外的星云。<br><br>
        某种意义上讲，人类对星空怀有好奇，是正常的。<br><br>
        渴望见证星河大海的极限，因为我们本就是星辰之子  
</div>`,r:{minutes:1.43,words:428},t:"Chengpeng Dong",y:"a"}}],["/slides.html",{loader:()=>m(()=>import("./slides.html-BA3PibH8.js"),__vite__mapDeps([3,1])),meta:{d:1681268086e3,e:`<!-- markdownlint-disable MD024 MD051 -->
<p>@slidestart</p>
<!-- .slide: data-transition="slide" -->
<h2>幻灯片演示</h2>
<!-- .element: class="r-fit-text" -->
<p>一个简单的幻灯片演示与各种小贴士。</p>
<!-- .element: class="r-fit-text" -->
<blockquote>
<p>作者 Mr.Hope. 请滚动鼠标滚轮进入下一页</p>
</blockquote>
<hr>
<h2>标注幻灯片</h2>
<!-- .element: class="r-fit-text" -->`,r:{minutes:4.5,words:1351},t:"幻灯片页",i:"person-chalkboard",y:"s"}}],["/Projects/",{loader:()=>m(()=>import("./index.html-lLQmhyo6.js"),__vite__mapDeps([4,1])),meta:{t:"主页",i:"home"}}],["/Projects/README01.html",{loader:()=>m(()=>import("./README01.html-DDGTKKDP.js"),__vite__mapDeps([5,1])),meta:{d:1689411207e3,e:`<!-- ---
containerClass: home
home: true
title: 主页
icon: home
heroImage: /logo.svg
bgImage: https://theme-hope-assets.vuejs.press/bg/6-light.svg
bgImageDark: https://theme-hope-assets.vuejs.press/bg/6-dark.svg
bgImageStyle:
  background-attachment: fixed
heroText: VuePress Theme Hope
tagline: 一个具有强大功能的 vuepress 主题✨
actions:
  - text: 使用教程 🧭
    link: ./cookbook/tutorial/
    type: primary

  - text: 介绍 💡
    link: ./guide/get-started/intro.html

  - text: 配置 🛠
    link: ./config/

  - text: 在线案例 🪀
    link: https://stackblitz.com/fork/vuepress-theme-hope

highlights:
  - header: 易于安装
    image: /assets/image/box.svg
    bgImage: https://theme-hope-assets.vuejs.press/bg/3-light.svg
    bgImageDark: https://theme-hope-assets.vuejs.press/bg/3-dark.svg
    highlights:
      - title: 运行 <code>pnpm create vuepress-theme-hope hope-project</code> 以创建一个新的主题项目。
      - title: 在已有项目根目录下运行 <code>pnpm create vuepress-theme-hope add .</code> 以在项目中添加主题。

  - header: 在 Markdown 中添加你想要的内容
    description: 我们扩展了标准的 CommonMark 规范，为你添加了成吨功能。
    image: /assets/image/markdown.svg
    bgImage: https://theme-hope-assets.vuejs.press/bg/2-light.svg
    bgImageDark: https://theme-hope-assets.vuejs.press/bg/2-dark.svg
    bgImageStyle:
      background-repeat: repeat
      background-size: initial
    features:
      - title: 链接检查
        icon: clipboard-check
        details: 检查 Markdown 链接
        link: ./guide/markdown/others.html#link-check

      - title: 自定义容器支持
        icon: box-archive
        details: 用样式装饰 Markdown 内容
        link: ./guide/markdown/container.html

      - title: 选项卡
        icon: table-columns
        details: 使用选项卡对相似内容进行分组
        link: ./guide/markdown/tabs.html

      - title: 代码组
        icon: code
        details: 使用选项卡对相似代码进行分组
        link: ./guide/markdown/code-tabs.html

      - title: 自定义对齐支持
        icon: align-center
        details: 让你在 Markdown 中对段落进行对齐
        link: ./guide/markdown/align.html

      - title: 自定义属性支持
        icon: code
        details: 让你为 Markdown 元素添加属性
        link: ./guide/markdown/attrs.html

      - title: 上下角标支持
        icon: superscript
        details: 你的 Markdown 现在将支持上下角标
        link: ./guide/markdown/sup-sub.html

      - title: 脚注
        icon: quote-left
        details: 你的 Markdown 现在将支持脚注
        link: ./guide/markdown/footnote.html

      - title: 标记支持
        icon: highlighter
        details: 让你在 Markdown 中对词句进行标记
        link: ./guide/markdown/mark.html

      - title: 任务列表
        icon: square-check
        details: 在 Markdown 中使用任务列表
        link: ./guide/markdown/tasklist.html

      - title: 图片语法
        icon: image
        details: 使用改进的语法指定图片大小与颜色模式
        link: ./guide/markdown/image.html

      - title: 卡片支持
        icon: square
        details: 在 Markdown 中展示卡片
        link: ./guide/markdown/card.html

      - title: 图表支持
        icon: chart-simple
        details: 在 Markdown 中展示图表
        link: ./guide/markdown/chart.html

      - title: 流程图支持
        icon: route
        details: 可以在 Markdown 中直接写出流程图
        link: ./guide/markdown/flowchart.html

      - title: Mermaid 支持
        icon: chart-pie
        details: 可以在 Markdown 中添加 Mermaid 图例
        link: ./guide/markdown/mermaid.html

      - title: Tex 支持
        icon: square-root-variable
        details: Markdown 现在也可以支持 Tex 语法以显示公式
        link: ./guide/markdown/tex.html

      - title: 导入文件支持
        icon: fab fa-markdown
        details: 将你的文档分段，并在 Markdown 中导入
        link: ./guide/markdown/include.html

      - title: 交互演示支持
        icon: code
        details: 你可以在 Markdown 中添加交互演示
        link: ./guide/markdown/playground.html

      - title: Vue 交互演示支持
        icon: fab fa-vuejs
        details: 在交互演示中展示 Vue 组件
        link: ./guide/markdown/vue-playground.html

      - title: 代码案例支持
        icon: laptop-code
        details: 你可以很方便的插入代码案例
        link: ./guide/markdown/demo/

      - title: 幻灯片支持
        icon: person-chalkboard
        details: 你可以直接在 Markdown 中插入幻灯片
        link: ./guide/markdown/presentation/

  - header: 布局
    description: 一个带有完整无障碍支持的响应式布局。
    image: /assets/image/layout.svg
    bgImage: https://theme-hope-assets.vuejs.press/bg/5-light.svg
    bgImageDark: https://theme-hope-assets.vuejs.press/bg/5-dark.svg
    highlights:
      - title: 布局增强
        icon: object-group
        details: 添加路径导航、页脚、改进的导航栏、改进的页面导航等。
        link: ./guide/layout/

      - title: 深色模式
        icon: circle-half-stroke
        details: 可以自由切换浅色模式与深色模式
        link: ./guide/interface/darkmode.html

      - title: 主题色切换
        icon: palette
        details: 支持自定义主题色并允许用户在预设的主题颜色之间切换
        link: ./guide/interface/theme-color.html

      - title: 幻灯片页面
        icon: person-chalkboard
        details: 添加幻灯片页面以显示你喜欢的内容
        link: ./guide/layout/slides

      - title: 更多
        icon: ellipsis
        details: RTL 布局，打印支持，全局按钮等
        link: ./guide/interface/others.html

  - header: 新功能
    image: /assets/image/features.svg
    bgImage: https://theme-hope-assets.vuejs.press/bg/1-light.svg
    bgImageDark: https://theme-hope-assets.vuejs.press/bg/1-dark.svg
    features:
      - title: 浏览量与评论
        icon: comment-dots
        details: 配合 Waline 来开启阅读量统计与评论支持
        link: ./guide/feature/comment.html

      - title: 文章信息
        icon: circle-info
        details: 为你的文章添加作者、写作日期、预计阅读时间、字数统计等信息
        link: ./guide/feature/page-info.html

      - title: 文章加密
        icon: lock
        details: 你可以为你的特定页面或特定目录进行加密，以便陌生人不能随意访问它们
        link: ./guide/feature/encrypt.html

      - title: 搜索支持
        icon: search
        details: 支持 docsearch 和基于客户端的搜索
        link: ./guide/feature/search.html

      - title: 代码复制
        icon: copy
        details: 一键复制代码块中的代码
        link: ./guide/feature/copy-code.html

      - title: 图片预览
        icon: image
        details: 像相册一样允许你浏览、缩放并分享你的页面图片
        link: ./guide/feature/photo-swipe.html

  - header: 博客
    description: 通过主题创建个人博客
    image: /assets/image/blog.svg
    bgImage: https://theme-hope-assets.vuejs.press/bg/5-light.svg
    bgImageDark: https://theme-hope-assets.vuejs.press/bg/5-dark.svg
    highlights:
      - title: 博客功能
        icon: blog
        details: 通过文章的日期、标签和分类展示文章
        link: ./guide/blog/intro.html

      - title: 博客主页
        icon: home
        details: 全新播客主页
        link: ./guide/blog/home.html

      - title: 博主信息
        icon: home
        details: 自定义名称、头像、座右铭和社交媒体链接
        link: ./guide/blog/blogger.html

      - title: 时间线
        icon: home
        details: 在时间线中浏览和通读博文
        link: ./guide/blog/timeline.html

  - header: 高级
    description: 增强站点与用户体验的高级功能
    image: /assets/image/advanced.svg
    bgImage: https://theme-hope-assets.vuejs.press/bg/4-light.svg
    bgImageDark: https://theme-hope-assets.vuejs.press/bg/4-dark.svg
    highlights:
      - title: SEO 增强
        icon: dumbbell
        details: 将最终生成的网页针对搜索引擎进行优化。
        link: ./guide/advanced/seo.html

      - title: Sitemap
        icon: sitemap
        details: 自动为你的网站生成 Sitemap
        link: ./guide/advanced/sitemap.html

      - title: Feed 支持
        icon: rss
        details: 生成你的 Feed，并通知你的用户订阅它
        link: ./guide/advanced/feed.html

      - title: PWA 支持
        icon: mobile-screen
        details: 让你的网站更像一个 APP
        link: ./guide/advanced/pwa.html

copyright: false
footer: MIT Licensed | Copyright © 2019-present Mr.Hope
--- -->`,r:{minutes:4.41,words:1323},t:"",y:"a"}}],["/BackEnd/JavaSE/Javase01.html",{loader:()=>m(()=>import("./Javase01.html-DEXkqO7P.js"),__vite__mapDeps([6,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:10.12,words:3037},t:"Java基本语法",O:1,y:"a"}}],["/BackEnd/JavaSE/Javase02.html",{loader:()=>m(()=>import("./Javase02.html-BrHsdbkD.js"),__vite__mapDeps([7,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:20.97,words:6290},t:"Java面向对象",O:2,y:"a"}}],["/BackEnd/JavaSE/Javase03.html",{loader:()=>m(()=>import("./Javase03.html-BJmPIoCd.js"),__vite__mapDeps([8,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:10.55,words:3164},t:"Java基础API",O:3,y:"a"}}],["/BackEnd/JavaSE/Javase04.html",{loader:()=>m(()=>import("./Javase04.html-BQJon20A.js"),__vite__mapDeps([9,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:27.46,words:8239},t:"Java常用API",O:4,y:"a"}}],["/BackEnd/JavaSE/Javase05.html",{loader:()=>m(()=>import("./Javase05.html-DML8G81I.js"),__vite__mapDeps([10,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:17.9,words:5369},t:"JDK8新特性",O:5,y:"a"}}],["/BackEnd/JavaSE/Javase06.html",{loader:()=>m(()=>import("./Javase06.html-HbEpb5uv.js"),__vite__mapDeps([11,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:25.14,words:7542},t:"集合框架",O:6,y:"a"}}],["/BackEnd/JavaSE/Javase07.html",{loader:()=>m(()=>import("./Javase07.html-BJ4pWL2f.js"),__vite__mapDeps([12,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:7.64,words:2292},t:"异常处理",O:7,y:"a"}}],["/BackEnd/JavaSE/Javase08.html",{loader:()=>m(()=>import("./Javase08.html-DS5YNsGX.js"),__vite__mapDeps([13,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:31.76,words:9527},t:"IO流体系",O:8,y:"a"}}],["/BackEnd/JavaSE/Javase09.html",{loader:()=>m(()=>import("./Javase09.html-BhGrPsgQ.js"),__vite__mapDeps([14,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:.06,words:17},t:"特殊文件、日志框架",O:9,y:"a"}}],["/BackEnd/JavaSE/Javase10.html",{loader:()=>m(()=>import("./Javase10.html-Bl-dLxiD.js"),__vite__mapDeps([15,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:3.77,words:1132},t:"多线程技术",O:10,y:"a"}}],["/BackEnd/JavaSE/Javase11.html",{loader:()=>m(()=>import("./Javase11.html-B1MPIjNM.js"),__vite__mapDeps([16,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:1.61,words:482},t:"网络编程",O:11,y:"a"}}],["/BackEnd/JavaSE/Javase12.html",{loader:()=>m(()=>import("./Javase12.html-DANfPVbf.js"),__vite__mapDeps([17,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["JavaSE"],e:`
`,r:{minutes:12.88,words:3863},t:"Java基础加强",O:12,y:"a"}}],["/BackEnd/JavaSE/",{loader:()=>m(()=>import("./index.html-CzhnfE9C.js"),__vite__mapDeps([18,1])),meta:{d:1681268086e3,e:`
`,r:{minutes:.61,words:182},t:"JavaSE大纲",y:"a"}}],["/BackEnd/JavaWeb/",{loader:()=>m(()=>import("./index.html-hPfAd6bK.js"),__vite__mapDeps([19,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["JavaWeb"],e:`
`,r:{minutes:2.09,words:628},t:"JavaWeb",y:"a"}}],["/BackEnd/JavaWeb/javaweb01.html",{loader:()=>m(()=>import("./javaweb01.html-CZvrkAqo.js"),__vite__mapDeps([20,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["JavaWeb","Maven"],e:`
`,r:{minutes:4.56,words:1369},t:"Maven",O:1,y:"a"}}],["/BackEnd/JavaWeb/javaweb02.html",{loader:()=>m(()=>import("./javaweb02.html-CkqmMcpo.js"),__vite__mapDeps([21,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["JavaWeb"],e:`
`,r:{minutes:3.22,words:967},t:"HTTP协议",O:2,y:"a"}}],["/BackEnd/JavaWeb/javaweb03.html",{loader:()=>m(()=>import("./javaweb03.html-CUdIIzwj.js"),__vite__mapDeps([22,1])),meta:{d:16810848e5,l:"2023年4月10日",c:["Maven"],e:`
`,r:{minutes:15.56,words:4668},t:"Maven高级",O:3,y:"a"}}],["/BackEnd/MyBatis/",{loader:()=>m(()=>import("./index.html-BBlPaKGn.js"),__vite__mapDeps([23,1])),meta:{d:16805664e5,l:"2023年4月4日",c:["MyBatis"],e:`
`,r:{minutes:.52,words:157},t:"MyBatis概述",y:"a"}}],["/BackEnd/MyBatis/mybatis01.html",{loader:()=>m(()=>import("./mybatis01.html-aeueQ6WM.js"),__vite__mapDeps([24,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["JDBC","MyBatis"],e:`
`,r:{minutes:13.69,words:4108},t:"JDBC",O:1,y:"a"}}],["/BackEnd/MyBatis/mybatis02.html",{loader:()=>m(()=>import("./mybatis02.html-pIVH2Wp-.js"),__vite__mapDeps([25,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["MyBatis"],e:`
<div class="hint-container warning">
<p class="hint-container-title">JDBC 缺点</p>
<p>硬编码</p>
<ul>
<li>注册驱动、获取连接 ①</li>
<li>SQL语句 ②</li>
</ul>
<p>操作繁琐</p>
<ul>
<li>手动设置参数 ③</li>
<li>手动封装结果集 ④</li>
</ul>
</div>
<figure><figcaption> </figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">Mybatis 优化</p>
<ul>
<li>硬编码可以配置到 <strong>配置文件</strong></li>
<li>操作繁琐的地方mybatis都 <strong>自动完成</strong></li>
</ul>
</div>`,r:{minutes:.27,words:80},t:"JDBC vs Mybatis",O:2,y:"a"}}],["/BackEnd/MyBatis/mybatis03.html",{loader:()=>m(()=>import("./mybatis03.html-DejquJBX.js"),__vite__mapDeps([26,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["lombok"],e:`
<h2>1 介绍</h2>
<p>Lombok是一个实用的Java类库，可以通过简单的注解来简化和消除一些必须但又显得很臃肿的Java代码</p>
<figure><figcaption> </figcaption></figure>
<table>
<thead>
<tr>
<th><strong>注解</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>@Getter/@Setter</td>
<td>为所有的属性提供get/set方法</td>
</tr>
<tr>
<td>@ToString</td>
<td>会给类自动生成易阅读的  toString 方法</td>
</tr>
<tr>
<td>@EqualsAndHashCode</td>
<td>根据类所拥有的非静态字段自动重写 equals 方法和  hashCode 方法</td>
</tr>
<tr>
<td>@Data</td>
<td>提供了更综合的生成代码功能（@Getter  + @Setter + @ToString + @EqualsAndHashCode）</td>
</tr>
<tr>
<td>@NoArgsConstructor</td>
<td>为实体类生成无参的构造器方法</td>
</tr>
<tr>
<td>@AllArgsConstructor</td>
<td>为实体类生成除了static修饰的字段之外带有各参数的构造器方法</td>
</tr>
</tbody>
</table>`,r:{minutes:1.4,words:421},t:"lombok",O:3,y:"a"}}],["/BackEnd/MyBatis/mybatis04.html",{loader:()=>m(()=>import("./mybatis04.html-Bc5V8SKl.js"),__vite__mapDeps([27,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["MyBatis"],e:`
<h2>1. 入门程序分析</h2>
<p>Mybatis操作数据库步骤：</p>
<ol>
<li>
<p>准备工作 ( 创建springboot工程、数据库表user、实体类User )</p>
</li>
<li>
<p>引入Mybatis的相关依赖，配置Mybatis ( 数据库连接信息 )</p>
</li>
<li>
<p>编写SQL语句 ( 注解/XML )</p>
</li>
</ol>
<h2>2 入门程序实现</h2>
<h3>2.1 项目创建</h3>
<p>创建springboot工程，并导入 mybatis 的起步依赖、 mysql 的驱动包</p>
<figure><figcaption> </figcaption></figure>`,r:{minutes:3.45,words:1036},t:"Mybatis快速入门",O:4,y:"a"}}],["/BackEnd/MyBatis/mybatis05.html",{loader:()=>m(()=>import("./mybatis05.html-Dp-k6n19.js"),__vite__mapDeps([28,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["MyBatis"],e:`
<h2>1 需求</h2>
<p>需求说明：</p>
<p>根据资料中提供的《tlias智能学习辅助系统》页面原型及需求，完成员工管理的需求开发</p>
<figure><figcaption> </figcaption></figure>
<figure><figcaption> </figcaption></figure>
<figure><figcaption> </figcaption></figure>
<p>通过分析以上的页面原型和需求，确定功能列表：</p>
<ol>
<li>
<p>查询</p>
<ul>
<li>根据主键ID查询</li>
<li>条件查询</li>
</ul>
</li>
<li>
<p>新增</p>
</li>
<li>
<p>更新</p>
</li>
<li>
<p>删除</p>
<ul>
<li>根据主键ID删除</li>
<li>根据主键ID批量删除</li>
</ul>
</li>
</ol>`,r:{minutes:10.67,words:3200},t:"Mybatis基础操作",O:5,y:"a"}}],["/BackEnd/MyBatis/mybatis06.html",{loader:()=>m(()=>import("./mybatis06.html-DFLT3NwJ.js"),__vite__mapDeps([29,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["MyBatis"],e:`
<div class="hint-container note">
<p class="hint-container-title">Mybatis的开发有两种方式</p>
<ol>
<li>注解</li>
<li>XML</li>
</ol>
</div>
<h2>1 XML配置文件规范</h2>
<p>使用Mybatis的注解方式，主要是来完成一些简单的增删改查功能。如果需要实现复杂的SQL功能，建议使用XML来配置映射语句</p>
<div class="hint-container info">
<p class="hint-container-title">Mybatis中使用XML映射文件规范</p>
<ol>
<li>
<p>XML映射文件的名称与Mapper接口名称一致，并且将XML映射文件和Mapper接口放置在相同包下（同包同名）</p>
</li>
<li>
<p>XML映射文件的namespace属性为Mapper接口全限定名一致</p>
</li>
<li>
<p>XML映射文件中sql语句的id与Mapper接口中的方法名一致，并保持返回类型一致</p>
</li>
</ol>
</div>`,r:{minutes:1.49,words:446},t:"Mybatis的XML配置文件",O:6,y:"a"}}],["/BackEnd/MyBatis/mybatis07.html",{loader:()=>m(()=>import("./mybatis07.html-C8idQyS8.js"),__vite__mapDeps([30,1])),meta:{d:16808256e5,l:"2023年4月7日",c:["MyBatis"],e:`
<h2>1 什么是动态SQL</h2>
<p>在页面原型中，列表上方的条件是动态的，是可以不传递的，也可以只传递其中的1个或者2个或者全部</p>
<figure><figcaption> </figcaption></figure>
<figure><figcaption> </figcaption></figure>
<p>而在刚才编写的SQL语句中，如果页面只传递了参数姓名 name 字段，其他两个字段 性别 和 入职时间 没有传递，那么这两个参数的值就是null</p>
<p>此时，执行的SQL语句为：</p>
<figure><figcaption> </figcaption></figure>`,r:{minutes:5.81,words:1742},t:"Mybatis动态SQL",O:7,y:"a"}}],["/BackEnd/MybatisPlus/",{loader:()=>m(()=>import("./index.html-CUbMr845.js"),__vite__mapDeps([31,1])),meta:{d:16805664e5,l:"2023年4月4日",c:["MyBatisPlus"],e:`
`,r:{minutes:1.76,words:528},t:"MyBatisPlus",y:"a"}}],["/BackEnd/MybatisPlus/mybatisplus01.html",{loader:()=>m(()=>import("./mybatisplus01.html-CSJANeGP.js"),__vite__mapDeps([32,1])),meta:{d:16816032e5,l:"2023年4月16日",c:["MyBatisPlus"],e:`
<blockquote>
<ol>
<li>能够基于 MyBatisPlus 完成标准Dao开发</li>
<li>能够掌握 MyBatisPlus 的条件查询</li>
<li>能够掌握 MyBatisPlus 的字段映射与表名映射</li>
<li>能够掌握 id 生成策略控制</li>
<li>能够理解代码生成器的相关配置</li>
</ol>
</blockquote>
<h2>1 MyBatisPlus简介</h2>
<h3>1.1 入门案例</h3>
<p>MyBatisPlus环境搭建的步骤？</p>
<h4>SpringBoot整合MyBatisPlus入门程序</h4>
<h5>①：创建新模块，选择Spring初始化，并配置模块相关基础信息</h5>`,r:{minutes:10.66,words:3199},t:"MybatisPlus入门",O:1,y:"a"}}],["/BackEnd/MybatisPlus/mybatisplus02.html",{loader:()=>m(()=>import("./mybatisplus02.html-B2isg6R_.js"),__vite__mapDeps([33,1])),meta:{d:16816032e5,l:"2023年4月16日",c:["MyBatisPlus"],e:`
<h2>1 快速开发-代码生成器</h2>
<p>如果只给一张表的字段信息，能够推演出Domain、Dao层的代码？</p>
<h3>1.1 MyBatisPlus提供模板</h3>
<ul>
<li>Mapper接口模板</li>
</ul>
<figure><figcaption> </figcaption></figure>
<ul>
<li>实体对象类模板</li>
</ul>
<figure><figcaption> </figcaption></figure>
<h3>1.2 工程搭建和基本代码编写</h3>
<ul>
<li>第一步：创建SpringBoot工程，添加代码生成器相关依赖，其他依赖自行添加</li>
</ul>`,r:{minutes:1.85,words:556},t:"MybatisPlus代码生成器",O:2,y:"a"}}],["/BackEnd/Spring/",{loader:()=>m(()=>import("./index.html-dbw584pL.js"),__vite__mapDeps([34,1])),meta:{d:16805664e5,l:"2023年4月4日",c:["Spring"],e:`
`,r:{minutes:2.39,words:717},t:"Spring",y:"a"}}],["/BackEnd/Spring/spring01.html",{loader:()=>m(()=>import("./spring01.html-DAr4VTKW.js"),__vite__mapDeps([35,1])),meta:{d:16815168e5,l:"2023年4月15日",c:["Spring","Ioc","DI"],e:`
<blockquote>
<ol>
<li>掌握 Spring 相关概念</li>
<li>完成 IOC/DI 的入门案例编写</li>
<li>掌握 IOC 的相关配置与使用</li>
<li>掌握 DI 的相关配置与使用</li>
</ol>
</blockquote>
<h2>1 Spring核心概念</h2>
<figure><figcaption> </figcaption></figure>
<div class="hint-container warning">
<p class="hint-container-title">代码在编写过程中遇到的问题</p>
<ol>
<li>
<p>业务层需要调用数据层的方法，就需要在业务层new数据层的对象 </p>
</li>
<li>
<p>如果数据层的实现类发生变化，那么业务层的代码也需要跟着改变 </p>
</li>
<li>
<p>发生变更后，都需要进行编译打包和重新部署</p>
</li>
</ol>
</div>`,r:{minutes:34.51,words:10352},t:"Spring IOC DI",O:1,y:"a"}}],["/BackEnd/Spring/spring02.html",{loader:()=>m(()=>import("./spring02.html-CBU6x6OK.js"),__vite__mapDeps([36,1])),meta:{d:16816896e5,l:"2023年4月17日",c:["Spring","Ioc","DI"],e:`
<blockquote>
<ol>
<li>掌握 IOC/DI 配置管理第三方bean</li>
<li>掌握 IOC/DI 的注解开发</li>
<li>掌握 IOC/DI 注解管理第三方bean</li>
<li>完成Spring与Mybatis及Junit的整合开发</li>
</ol>
</blockquote>
<h2>1 IOC/DI 配置管理第三方bean</h2>
<h3>1.1 案例：数据源对象管理</h3>
<p>通过数据源<code>Druid(德鲁伊)</code>和<code>C3P0</code>来配置学习</p>
<h4>1.1.1 环境准备</h4>
<ul>
<li>
<p>创建一个Maven项目</p>
<figure><figcaption> </figcaption></figure>
</li>
<li>
<p>pom.xml添加依赖</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>resources下添加spring的配置文件applicationContext.xml</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>编写一个运行类App</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApplicationContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ul>`,r:{minutes:34.74,words:10421},t:"Spring IOC DI 注解开发",O:2,y:"a"}}],["/BackEnd/Spring/spring03.html",{loader:()=>m(()=>import("./spring03.html-DjanAkvJ.js"),__vite__mapDeps([37,1])),meta:{d:16815168e5,l:"2023年4月15日",c:["Spring"],v:"/assets/bgImage/iTab-85oxlo.webp",e:`
<blockquote>
<ul>
<li>理解并掌握AOP相关概念</li>
<li>能够说出AOP的工作流程</li>
<li>能运用AOP相关知识完成对应的案例编写</li>
<li>重点掌握Spring的声明式事务管理</li>
</ul>
</blockquote>
<h2>1 AOP简介</h2>
<h3>1.1 什么是AOP?</h3>
<ul>
<li>AOP(Aspect Oriented Programming) 面向切面编程，一种编程范式，指导开发者如何组织程序结构</li>
<li>OOP(Object Oriented Programming) 面向对象编程</li>
</ul>`,r:{minutes:49.87,words:14961},t:"Spring AOP",O:3,y:"a"}}],["/BackEnd/SpringBoot/",{loader:()=>m(()=>import("./index.html-DTZ_V735.js"),__vite__mapDeps([38,1])),meta:{d:16805664e5,l:"2023年4月4日",c:["SpringBoot"],e:`
`,r:{minutes:1.1,words:330},t:"SpringBoot",y:"a"}}],["/BackEnd/SpringBoot/springboot01.html",{loader:()=>m(()=>import("./springboot01.html-CYYLa55Z.js"),__vite__mapDeps([39,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot"],e:`
<figure><figcaption> </figcaption></figure>
<p>SpringBoot进行web程序开发时，内置了一个核心的Servlet程序 DispatcherServlet，称之为<code>核心控制器</code><br>
DispatcherServlet 负责接收页面发送的请求，然后根据执行的规则，将请求再转发给后面的请求处理器Controller，请求处理器处理完请求之后，最终再由DispatcherServlet给浏览器响应数据。</p>
<figure><figcaption> </figcaption></figure>
<p>请求到达Tomcat之后，Tomcat会负责解析这些请求数据，解析后的请求数据会传递给Servlet程序的 HttpServletRequest 对象，也意味着 HttpServletRequest 对象就可以获取到请求数据。 而Tomcat，还给Servlet程序传递了一个参数 HttpServletResponse，通过这个对象，可以给浏览器设置响应数据 。</p>`,r:{minutes:23.28,words:6985},t:"SpringBoot请求响应",O:1,y:"a"}}],["/BackEnd/SpringBoot/springboot02.html",{loader:()=>m(()=>import("./springboot02.html-GP0DT3ZF.js"),__vite__mapDeps([40,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot案例"],e:`
<h2>1. 准备工作</h2>
<h3>1.1 需求</h3>
<p><strong>部门管理</strong>:</p>
<figure><figcaption> </figcaption></figure>
<p>部门管理功能开发包括：</p>
<ul>
<li>查询部门列表</li>
<li>删除部门</li>
<li>新增部门</li>
<li>修改部门</li>
</ul>
<p><strong>员工管理</strong>:</p>
<figure><figcaption> </figcaption></figure>
<p>员工管理功能开发包括：</p>
<ul>
<li>查询员工列表(分页、条件)</li>
<li>删除员工</li>
<li>新增员工</li>
<li>修改员工</li>
</ul>`,r:{minutes:5.98,words:1794},t:"SpringBoot案例 ⅓",O:2,y:"a"}}],["/BackEnd/SpringBoot/springboot03.html",{loader:()=>m(()=>import("./springboot03.html-BuZHDo7R.js"),__vite__mapDeps([41,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot案例"],e:`
<h2>1. 部门管理</h2>
<p>开发的部门管理功能包含：</p>
<ol>
<li>查询部门</li>
<li>删除部门</li>
<li>新增部门</li>
<li>更新部门</li>
</ol>
<h3>1.1 查询部门</h3>
<h4>1.1.1 原型和需求</h4>
<figure><figcaption> </figcaption></figure>
<h4>1.1.2 接口文档</h4>
<p><strong>部门列表查询</strong>:</p>
<ul>
<li>
<p>基本信息</p>
<div class="language-markdown" data-ext="md" data-title="md"><pre class="language-markdown"><code>请求路径：/depts

请求方式：GET

接口描述：该接口用于部门列表数据查询
</code></pre></div></li>
<li>
<p>请求参数</p>
<p>无</p>
</li>
<li>
<p>响应数据</p>
<p>参数格式：application/json</p>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>是否必须</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>code</td>
<td>number</td>
<td>必须</td>
<td>响应码，1 代表成功，0 代表失败</td>
</tr>
<tr>
<td>msg</td>
<td>string</td>
<td>非必须</td>
<td>提示信息</td>
</tr>
<tr>
<td>data</td>
<td>object[ ]</td>
<td>非必须</td>
<td>返回的数据</td>
</tr>
<tr>
<td>|- id</td>
<td>number</td>
<td>非必须</td>
<td>id</td>
</tr>
<tr>
<td>|- name</td>
<td>string</td>
<td>非必须</td>
<td>部门名称</td>
</tr>
<tr>
<td>|- createTime</td>
<td>string</td>
<td>非必须</td>
<td>创建时间</td>
</tr>
<tr>
<td>|- updateTime</td>
<td>string</td>
<td>非必须</td>
<td>修改时间</td>
</tr>
</tbody>
</table>
<p>响应数据样例：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>
  <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"学工部"</span><span class="token punctuation">,</span>
      <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-09-01T23:06:29"</span><span class="token punctuation">,</span>
      <span class="token property">"updateTime"</span><span class="token operator">:</span> <span class="token string">"2022-09-01T23:06:29"</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"教研部"</span><span class="token punctuation">,</span>
      <span class="token property">"createTime"</span><span class="token operator">:</span> <span class="token string">"2022-09-01T23:06:29"</span><span class="token punctuation">,</span>
      <span class="token property">"updateTime"</span><span class="token operator">:</span> <span class="token string">"2022-09-01T23:06:29"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ul>`,r:{minutes:15.82,words:4745},t:"SpringBoot案例 ⅔",O:3,y:"a"}}],["/BackEnd/SpringBoot/springboot04.html",{loader:()=>m(()=>import("./springboot04.html-DBYoGefY.js"),__vite__mapDeps([42,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot案例","文件存储","阿里云OSS"],e:`
<p>关于员工管理的功能，还有两个需求:</p>
<ul>
<li>新增员工</li>
<li>修改员工</li>
</ul>
<figure><figcaption> </figcaption></figure>
<p>在"新增员工"中，需要添加头像，而头像需要用到"文件上传"技术。</p>
<h2>1. 新增员工</h2>
<h3>1.1 需求</h3>
<figure><figcaption> </figcaption></figure>
<h3>1.2 接口文档</h3>
<ul>
<li>
<p>基本信息</p>
<div class="language-markdown" data-ext="md" data-title="md"><pre class="language-markdown"><code>请求路径：/emps

请求方式：POST

接口描述：该接口用于添加员工的信息
</code></pre></div></li>
<li>
<p>请求参数</p>
<p>参数格式：application/json</p>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>是否必须</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>username</td>
<td>string</td>
<td>必须</td>
<td>用户名</td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td>必须</td>
<td>姓名</td>
</tr>
<tr>
<td>gender</td>
<td>number</td>
<td>必须</td>
<td>性别, 说明: 1 男, 2 女</td>
</tr>
<tr>
<td>image</td>
<td>string</td>
<td>非必须</td>
<td>图像</td>
</tr>
<tr>
<td>deptId</td>
<td>number</td>
<td>非必须</td>
<td>部门id</td>
</tr>
<tr>
<td>entrydate</td>
<td>string</td>
<td>非必须</td>
<td>入职日期</td>
</tr>
<tr>
<td>job</td>
<td>number</td>
<td>非必须</td>
<td>职位, 说明: 1 班主任,2 讲师, 3 学工主管, 4 教研主管, 5 咨询师</td>
</tr>
</tbody>
</table>
<p>请求数据样例：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://web-framework.oss-cn-hangzhou.aliyuncs.com/2022-09-03-07-37-38222.jpg"</span><span class="token punctuation">,</span>
  <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"linpingzhi"</span><span class="token punctuation">,</span>
  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"林平之"</span><span class="token punctuation">,</span>
  <span class="token property">"gender"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">"job"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">"entrydate"</span><span class="token operator">:</span> <span class="token string">"2022-09-18"</span><span class="token punctuation">,</span>
  <span class="token property">"deptId"</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>响应数据</p>
<p>参数格式：application/json</p>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>是否必须</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>code</td>
<td>number</td>
<td>必须</td>
<td>响应码，1 代表成功，0 代表失败</td>
</tr>
<tr>
<td>msg</td>
<td>string</td>
<td>非必须</td>
<td>提示信息</td>
</tr>
<tr>
<td>data</td>
<td>object</td>
<td>非必须</td>
<td>返回的数据</td>
</tr>
</tbody>
</table>
<p>响应数据样例：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">"code"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">"msg"</span><span class="token operator">:</span><span class="token string">"success"</span><span class="token punctuation">,</span>
    <span class="token property">"data"</span><span class="token operator">:</span><span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ul>`,r:{minutes:24.22,words:7266},t:"SpringBoot案例 ⅟",O:4,y:"a"}}],["/BackEnd/SpringBoot/springboot05.html",{loader:()=>m(()=>import("./springboot05.html-DFb8DE-r.js"),__vite__mapDeps([43,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot案例","Cookie","Session","令牌技术"],e:`
<h2>1. 登录功能</h2>
<h3>1.1 需求</h3>
<figure><figcaption> </figcaption></figure>
<p>输入用户名及密码，点击 "登录" 按钮就要请求服务器，服务端判断用户输入的用户名或者密码是否正确。如果正确，则返回成功结果，前端跳转至系统首页面。</p>
<h3>1.2 接口文档</h3>
<p>参照接口文档来开发登录功能</p>
<ul>
<li>
<p>基本信息</p>
<div class="language-markdown" data-ext="md" data-title="md"><pre class="language-markdown"><code>请求路径：/login

请求方式：POST

接口描述：该接口用于员工登录Tlias智能学习辅助系统，登录完毕后，系统下发JWT令牌。 
</code></pre></div></li>
<li>
<p>请求参数</p>
<p>参数格式：application/json</p>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>是否必须</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>username</td>
<td>string</td>
<td>必须</td>
<td>用户名</td>
</tr>
<tr>
<td>password</td>
<td>string</td>
<td>必须</td>
<td>密码</td>
</tr>
</tbody>
</table>
<p>请求数据样例：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"jinyong"</span><span class="token punctuation">,</span>
    <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"123456"</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>响应数据</p>
<p>参数格式：application/json</p>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>是否必须</th>
<th>默认值</th>
<th>备注</th>
<th>其他信息</th>
</tr>
</thead>
<tbody>
<tr>
<td>code</td>
<td>number</td>
<td>必须</td>
<td></td>
<td>响应码, 1 成功 ; 0  失败</td>
<td></td>
</tr>
<tr>
<td>msg</td>
<td>string</td>
<td>非必须</td>
<td></td>
<td>提示信息</td>
<td></td>
</tr>
<tr>
<td>data</td>
<td>string</td>
<td>必须</td>
<td></td>
<td>返回的数据 , jwt令牌</td>
<td></td>
</tr>
</tbody>
</table>
<p>响应数据样例：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">"code"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>
  <span class="token property">"data"</span><span class="token operator">:</span> <span class="token string">"eyJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoi6YeR5bq4IiwiaWQiOjEsInVzZXJuYW1lIjoiamlueW9uZyIsImV4cCI6MTY2MjIwNzA0OH0.KkUc_CXJZJ8Dd063eImx4H9Ojfrr6XMJ-yVzaWCVZCo"</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ul>`,r:{minutes:42.54,words:12762},t:"SpringBoot案例-登录认证",O:5,y:"a"}}],["/BackEnd/SpringBoot/springboot06.html",{loader:()=>m(()=>import("./springboot06.html-CmYI00tu.js"),__vite__mapDeps([44,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot","AOP"],e:`
<h2>1. 事务管理</h2>
<h3>1.1 事务回顾</h3>
<p><strong>事务</strong>是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体，一起向数据库提交或者是撤销操作请求。所以这组操作要么同时成功，要么同时失败。</p>
<div class="hint-container info">
<p class="hint-container-title">事务的操作</p>
<ol>
<li>开启事务（一组操作开始前，开启事务）：start transaction / begin ;</li>
<li>提交事务（这组操作全部成功后，提交事务）：commit ;</li>
<li>回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ;</li>
</ol>
</div>`,r:{minutes:30.55,words:9166},t:"SpringBoot事务、AOP",O:6,y:"a"}}],["/BackEnd/SpringBoot/springboot07.html",{loader:()=>m(()=>import("./springboot07.html-vs1FvAYY.js"),__vite__mapDeps([45,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["SpringBoot"],e:`
<h2>1. 配置优先级</h2>
<p>SpringBoot项目当中支持的三类配置文件：</p>
<ul>
<li>application.properties</li>
<li>application.yml</li>
<li>application.yaml</li>
</ul>
<p>properties、yaml、yml三种配置文件同时存在</p>
<figure><figcaption> </figcaption></figure>
<blockquote>
<p>properties、yaml、yml三种配置文件，优先级最高的是properties</p>
</blockquote>`,r:{minutes:37.56,words:11267},t:"SpringBoot原理",O:7,y:"a"}}],["/BackEnd/SpringBoot/springboot08.html",{loader:()=>m(()=>import("./springboot08.html-BbxexLQy.js"),__vite__mapDeps([46,1])),meta:{d:16819488e5,l:"2023年4月20日",c:["SpringBoot"],e:`
<blockquote>
<ul>
<li>掌握基于SpringBoot框架的程序开发步骤</li>
<li>熟练使用SpringBoot配置信息修改服务器配置</li>
<li>基于SpringBoot的完成SSM整合项目开发</li>
</ul>
</blockquote>
<h2>1 SpringBoot简介</h2>
<p>SpringBoot 是由 Pivotal 团队提供的全新框架，其设计目的是用来<strong>简化</strong> Spring 应用的<strong>初始搭建</strong>以及<strong>开发过程</strong></p>
<p>回顾一下 SpringMVC 开发</p>`,r:{minutes:24.36,words:7308},t:"SpringBoot整合",O:8,y:"a"}}],["/BackEnd/SpringCloud/",{loader:()=>m(()=>import("./index.html-CqrXam7G.js"),__vite__mapDeps([47,1])),meta:{d:16872192e5,l:"2023年6月20日",c:["SpringCloud"],e:`
<p>随着互联网行业的发展，对服务的要求也越来越高，服务架构也从单体架构逐渐演变为现在流行的微服务架构</p>
<blockquote>
<p>这些架构之间有怎样的差别呢？</p>
<p>Target：了解微服务架构的优缺点</p>
</blockquote>
<h2>1 单体架构</h2>
<p><strong>单体架构</strong>：将业务的所有功能集中在一个项目中开发，打成一个包部署。</p>
<figure><img src="https://simeis147-github-io.oss-cn-shenzhen.aliyuncs.com/BackEnd/SpringCloud/20230620132746.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:2.95,words:886},t:"认识微服务",y:"a"}}],["/BackEnd/SpringCloud/springcloud01.html",{loader:()=>m(()=>import("./springcloud01.html-jBjQ-E4V.js"),__vite__mapDeps([48,1])),meta:{d:16872192e5,l:"2023年6月20日",c:["SpringCloud","Enreka"],e:`
<h2>1 服务拆分和远程调用</h2>
<p>任何分布式架构都离不开服务的拆分，微服务也是一样。</p>
<h3>1.1 服务拆分原则</h3>
<ul>
<li>不同微服务，不要重复开发相同业务</li>
<li>微服务数据独立，不要访问其它微服务的数据库</li>
<li>微服务可以将自己的业务暴露为接口，供其它微服务调用</li>
</ul>
<figure><img src="https://simeis147-github-io.oss-cn-shenzhen.aliyuncs.com/BackEnd/SpringCloud/20230620185721.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:12.33,words:3700},t:"Enreka",O:1,y:"a"}}],["/BackEnd/SpringCloud/springcloud02.html",{loader:()=>m(()=>import("./springcloud02.html-DKW0h21x.js"),__vite__mapDeps([49,1])),meta:{d:16873056e5,l:"2023年6月21日",c:["SpringCloud","Nacos"],e:`
<h2>1 Nacos注册中心</h2>
<p>国内公司一般都推崇阿里巴巴的技术，比如注册中心，SpringCloudAlibaba也推出了一个名为Nacos的注册中心</p>
<h3>1.1 认识和安装Nacos</h3>
<p><a href="https://nacos.io/" target="_blank" rel="noopener noreferrer">Nacos</a>是阿里巴巴的产品，现在是<a href="https://spring.io/projects/spring-cloud" target="_blank" rel="noopener noreferrer">SpringCloud</a>中的一个组件。相比<a href="https://github.com/Netflix/eureka" target="_blank" rel="noopener noreferrer">Eureka</a>功能更加丰富，在国内受欢迎程度较高</p>`,r:{minutes:9.22,words:2767},t:"Nacos",O:2,y:"a"}}],["/BackEnd/SpringCloud/springcloud03.html",{loader:()=>m(()=>import("./springcloud03.html-CWmetkgA.js"),__vite__mapDeps([50,1])),meta:{d:1687392e6,l:"2023年6月22日",c:["SpringCloud","Feign"],e:`
<h2>1 Feign远程调用</h2>
<p>先来看我们以前利用RestTemplate发起远程调用的代码：</p>
<figure><img src="https://simeis147-github-io.oss-cn-shenzhen.aliyuncs.com/BackEnd/SpringCloud/20230621185722.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>存在下面的问题：</p>
<ul>
<li>
<p>代码可读性差，编程体验不统一</p>
</li>
<li>
<p>参数复杂URL难以维护</p>
</li>
</ul>`,r:{minutes:5.96,words:1787},t:"Feign",O:3,y:"a"}}],["/BackEnd/SpringCloud/springcloud04.html",{loader:()=>m(()=>import("./springcloud04.html-dOkGGeMV.js"),__vite__mapDeps([51,1])),meta:{d:1687392e6,l:"2023年6月22日",c:["SpringCloud","Gateway"],e:`
<h2>1 Gateway服务网关</h2>
<p>Spring Cloud Gateway 是 Spring Cloud 的一个全新项目，该项目是基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等响应式编程和事件流技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。</p>
<h3>1.1 为什么需要网关</h3>
<p>Gateway网关是我们服务的守门神，所有微服务的统一入口。</p>
<p>网关的<strong>核心功能特性</strong>：</p>
<ul>
<li>请求路由</li>
<li>权限控制</li>
<li>限流</li>
</ul>`,r:{minutes:8.88,words:2665},t:"Gateway",O:4,y:"a"}}],["/BackEnd/SpringCloud/springcloud05.html",{loader:()=>m(()=>import("./springcloud05.html-Cm4ANgt0.js"),__vite__mapDeps([52,1])),meta:{d:1687392e6,l:"2023年6月22日",c:["SpringCloud","Docker"],e:`
<h2>1.初识Docker</h2>
<h3>1.1.什么是Docker</h3>
<p>微服务虽然具备各种各样的优势，但服务的拆分通用给部署带来了很大的麻烦。</p>
<ul>
<li>分布式系统中，依赖的组件非常多，不同组件之间部署时往往会产生一些冲突。</li>
<li>在数百上千台服务中重复部署，环境不一定一致，会遇到各种问题</li>
</ul>
<h4>1.1.1.应用部署的环境问题</h4>
<p>大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题：</p>
<ul>
<li>
<p>依赖关系复杂，容易出现兼容性问题</p>
</li>
<li>
<p>开发、测试、生产环境有差异</p>
</li>
</ul>`,r:{minutes:22.39,words:6716},t:"Docker",O:5,y:"a"}}],["/BackEnd/SpringCloud/springcloud06.html",{loader:()=>m(()=>import("./springcloud06.html-B59krwS6.js"),__vite__mapDeps([53,1])),meta:{d:1687392e6,l:"2023年6月22日",c:["SpringCloud","RabbitMQ"],e:`
<h2>1.初识MQ</h2>
<h3>1.1.同步和异步通讯</h3>
<p>微服务间通讯有同步和异步两种方式：</p>
<p>同步通讯：就像打电话，需要实时响应<br>
异步通讯：就像发邮件，不需要马上回复</p>
<figure><img src="https://simeis147-github-io.oss-cn-shenzhen.aliyuncs.com/BackEnd/SpringCloud/20230630120206.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>两种方式各有优劣，打电话可以立即得到响应，但是你却不能跟多个人同时通话。发送邮件可以同时与多个人收发邮件，但是往往响应会有延迟</p>`,r:{minutes:15.71,words:4714},t:"RabbitMQ",O:6,y:"a"}}],["/BackEnd/SpringCloud/springcloud07.html",{loader:()=>m(()=>import("./springcloud07.html-CWtwNfn7.js"),__vite__mapDeps([54,1])),meta:{d:1687392e6,l:"2023年6月22日",c:["SpringCloud","ElasticSearch"],e:`
<h2>1.初识elasticsearch</h2>
<h3>1.1.了解ES</h3>
<h4>1.1.1.elasticsearch的作用</h4>
<p>elasticsearch是一款非常强大的开源搜索引擎，具备非常多强大功能，可以帮助我们从海量数据中快速找到需要的内容</p>
<p>例如：</p>
<ul>
<li>在GitHub搜索代码</li>
<li>在电商网站搜索商品</li>
<li>在百度搜索答案</li>
<li>在打车软件搜索附近的车</li>
</ul>
<h4>1.1.2.ELK技术栈</h4>
<p>elasticsearch结合kibana、Logstash、Beats，也就是elastic stack（ELK）。被广泛应用在日志数据分析、实时监控等领域：</p>`,r:{minutes:22.43,words:6730},t:"ElasticSearch01",O:7,y:"a"}}],["/BackEnd/SpringCloud/springcloud08.html",{loader:()=>m(()=>import("./springcloud08.html-B_Fz0DA3.js"),__vite__mapDeps([55,1])),meta:{d:1687392e6,l:"2023年6月22日",c:["SpringCloud","ElasticSearch"],e:`
<p>昨天已经导入了大量数据到elasticsearch中，实现了elasticsearch的数据存储功能。但elasticsearch最擅长的还是搜索和数据分析。</p>
<p>分别使用<strong>DSL</strong>和<strong>RestClient</strong>实现搜索。</p>
<h2>1.DSL查询文档</h2>
<p>elasticsearch的查询依然是基于JSON风格的DSL来实现的。</p>
<h3>1.1.DSL查询分类</h3>
<p>Elasticsearch提供了基于JSON的DSL（<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html" target="_blank" rel="noopener noreferrer">Domain Specific Language</a>）来定义查询。常见的查询类型包括：</p>`,r:{minutes:30.85,words:9256},t:"ElasticSearch02",O:8,y:"a"}}],["/BackEnd/SpringCloud/springcloud09.html",{loader:()=>m(()=>import("./springcloud09.html-JL0dQ2ls.js"),__vite__mapDeps([56,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud","ElasticSearch"],e:`
<h2>1.数据聚合</h2>
<p><strong>聚合</strong>可以让我们极其方便的实现对数据的统计、分析、运算。例如：</p>
<ul>
<li>什么品牌的手机最受欢迎？</li>
<li>这些手机的平均价格、最高价格、最低价格？</li>
<li>这些手机每月的销售情况如何？</li>
</ul>
<p>实现这些统计功能的比数据库的sql要方便的多，而且查询速度非常快，可以实现近实时搜索效果。</p>
<h3>1.1.聚合的种类</h3>
<p>聚合常见的有三类：</p>
<ul>
<li>
<p>**桶（Bucket）**聚合：用来对文档做分组</p>
<ul>
<li>TermAggregation：按照文档字段值分组，例如按照品牌值分组、按照国家分组</li>
<li>Date Histogram：按照日期阶梯分组，例如一周为一组，或者一月为一组</li>
</ul>
</li>
<li>
<p>**度量（Metric）**聚合：用以计算一些值，比如：最大值、最小值、平均值等</p>
<ul>
<li>Avg：求平均值</li>
<li>Max：求最大值</li>
<li>Min：求最小值</li>
<li>Stats：同时求max、min、avg、sum等</li>
</ul>
</li>
<li>
<p>**管道（pipeline）**聚合：其它聚合的结果为基础做聚合</p>
</li>
</ul>`,r:{minutes:21.1,words:6331},t:"ElasticSearch03",O:9,y:"a"}}],["/BackEnd/SpringCloud/springcloud10.html",{loader:()=>m(()=>import("./springcloud10.html-BaBrfOdl.js"),__vite__mapDeps([57,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"10",O:10,y:"a"}}],["/BackEnd/SpringCloud/springcloud11.html",{loader:()=>m(()=>import("./springcloud11.html-uhoEvxsM.js"),__vite__mapDeps([58,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"11",O:11,y:"a"}}],["/BackEnd/SpringCloud/springcloud12.html",{loader:()=>m(()=>import("./springcloud12.html-WM2GOrgY.js"),__vite__mapDeps([59,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"12",O:12,y:"a"}}],["/BackEnd/SpringCloud/springcloud13.html",{loader:()=>m(()=>import("./springcloud13.html-BOmcHyEv.js"),__vite__mapDeps([60,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"13",O:13,y:"a"}}],["/BackEnd/SpringCloud/springcloud14.html",{loader:()=>m(()=>import("./springcloud14.html-CUEV5OP5.js"),__vite__mapDeps([61,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"14",O:14,y:"a"}}],["/BackEnd/SpringCloud/springcloud15.html",{loader:()=>m(()=>import("./springcloud15.html-DNzc2NSf.js"),__vite__mapDeps([62,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"15",O:15,y:"a"}}],["/BackEnd/SpringCloud/springcloud16.html",{loader:()=>m(()=>import("./springcloud16.html-CnP0wLFy.js"),__vite__mapDeps([63,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"16",O:16,y:"a"}}],["/BackEnd/SpringCloud/springcloud17.html",{loader:()=>m(()=>import("./springcloud17.html-DaFUfwIm.js"),__vite__mapDeps([64,1])),meta:{d:16893792e5,l:"2023年7月15日",c:["SpringCloud"],e:`
`,r:{minutes:.03,words:9},t:"17",O:17,y:"a"}}],["/BackEnd/SpringMVC/",{loader:()=>m(()=>import("./index.html-CG3DlwCO.js"),__vite__mapDeps([65,1])),meta:{d:16805664e5,l:"2023年4月4日",c:["SpringMVC"],e:`
<h2>1 SpringMVC简介</h2>
<blockquote>
<p>SpringMVC 隶属于 Spring ，是 Spring 技术中的一部分</p>
</blockquote>
<p>SpringMVC 与 Servlet 技术功能等同，均属于web层或者说是表现层开发技术</p>
<div class="hint-container tip">
<p class="hint-container-title">SpringMVC 与 Servlet相比</p>
<p>开发起来更简单快捷，用更少的代码完成表现层代码的开发</p>
</div>
<h3>1.1 Servlet例子</h3>`,r:{minutes:3.08,words:924},t:"SpringMVC",y:"a"}}],["/BackEnd/SpringMVC/springmvc01.html",{loader:()=>m(()=>import("./springmvc01.html-iHu1MP88.js"),__vite__mapDeps([66,1])),meta:{d:16816896e5,l:"2023年4月17日",c:["SpringMVC"],e:`
<h2>1 SpringMVC入门案例</h2>
<p>先回顾Servlet是如何进行开发的?</p>
<figure><figcaption> </figcaption></figure>
<ol>
<li>
<p>浏览器发送请求到Tomcat服务器</p>
</li>
<li>
<p>Tomcat服务器接收到请求后，会根据请求路径来匹配对应的Servlet，并将请求交给对应的Servlet来处理</p>
</li>
</ol>
<blockquote>
<p>对于Servlet来说，主要完成的是Servlet类的开发以及对应路径的配置</p>
</blockquote>
<hr>
<p>那么对于SpringMVC程序的流程会是什么样的呢?</p>`,r:{minutes:41.78,words:12534},t:"SpringMVC 入门",O:1,y:"a"}}],["/BackEnd/SpringMVC/springmvc02.html",{loader:()=>m(()=>import("./springmvc02.html-CDYwbqoH.js"),__vite__mapDeps([67,1])),meta:{d:16816896e5,l:"2023年4月17日",c:["SpringMVC","SSM"],e:`
<blockquote>
<ul>
<li>完成SSM的整合开发</li>
<li>能够理解并实现统一结果封装与统一异常处理</li>
<li>能够完成前后台功能整合开发</li>
<li>掌握拦截器的编写</li>
</ul>
</blockquote>
<h2>1 SSM整合</h2>
<p><code>Mybatis</code>、<code>Spring</code> 和 <code>SpringMVC</code> 三个框架</p>
<h3>1.1 流程分析</h3>
<p>(1) 创建工程</p>
<ul>
<li>创建一个Maven的web工程</li>
<li>pom.xml添加SSM需要的依赖jar包</li>
<li>编写Web项目的入口配置类，实现<code>AbstractAnnotationConfigDispatcherServletInitializer</code>重写以下方法
<ul>
<li>getRootConfigClasses()  ：返回Spring的配置类-&gt;需要<strong>SpringConfig</strong>配置类</li>
<li>getServletConfigClasses() ：返回SpringMVC的配置类-&gt;需要<strong>SpringMvcConfig</strong>配置类</li>
<li>getServletMappings()      : 设置SpringMVC请求拦截路径规则</li>
<li>getServletFilters()       ：设置过滤器，解决POST请求中文乱码问题</li>
</ul>
</li>
</ul>`,r:{minutes:36.92,words:11077},t:"SpringMVC SSM整合",O:2,y:"a"}}],["/ComputerBasics/Algorithm/",{loader:()=>m(()=>import("./index.html-Bnim2fhs.js"),__vite__mapDeps([68,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法"],e:`
<p>算法，启动！</p>
`,r:{minutes:.1,words:29},t:"Algorithm",y:"a"}}],["/ComputerBasics/ComputerNetwork/",{loader:()=>m(()=>import("./index.html-BVp6l1RA.js"),__vite__mapDeps([69,1])),meta:{d:16838496e5,l:"2023年5月12日",c:["计算机网络"],e:`
<h2>1. 计算机网络体系结构</h2>
<h3>1.1 简介</h3>
<p>定义：计算机网络的各层 + 其协议的集合</p>
<p>作用：定义该计算机网络的所能完成的功能</p>
<h3>1.2 结构介绍</h3>
<ul>
<li>
<p>计算机网络体系结构分为3种：OSI体系结构、TCP / IP体系结构、五层体系结构。</p>
</li>
<li>
<p>OSI 体系结构：概念清楚 &amp; 理念完整，但复杂 &amp; 不实用；</p>
</li>
<li>
<p>TCP / IP 体系结构：含了一系列构成互联网基础的网络协议，是Internet的核心协议 &amp; 被广泛应用于局域网和广域网；
五层体系结构：融合了OSI 与 TCP / IP的体系结构，目的是为了学习 &amp; 讲解计算机原理。</p>
</li>
</ul>`,r:{minutes:.8,words:240},t:"Computer Network",y:"a"}}],["/ComputerBasics/ComputerNetwork/computernetword01.html",{loader:()=>m(()=>import("./computernetword01.html-NC6AVBYc.js"),__vite__mapDeps([70,1])),meta:{d:16838496e5,l:"2023年5月12日",c:["计算机网络"],e:`
<h2>1 网桥模式、路由模式、NAT模式、旁路模式</h2>
<h3>1.1 网桥模式</h3>
<ul>
<li>
<p>网桥模式是计算机网络中的一种网络设备工作模式，它可以连接多个局域网（LAN）并转发数据帧以实现不同网段之间的通信。网桥是一个二层设备，它在物理层和数据链路层工作，可以识别数据帧的目的MAC地址，并将数据帧转发到正确的目标端口。网桥可以减少网络中的广播风暴，提高网络性能和安全性。</p>
<p>在网桥模式中，多个局域网连接到网桥的不同端口上，网桥通过学习每个端口上连接的设备的MAC地址，建立一个MAC地址表，从而可以转发数据帧到正确的目标端口。当数据帧到达网桥时，网桥会检查数据帧的目的MAC地址，并将数据帧转发到MAC地址表中对应的端口上，如果该地址不在MAC地址表中，则将数据帧广播到所有端口上，以便学习新的MAC地址。</p>
</li>
</ul>`,r:{minutes:7.46,words:2238},t:"计算机网络01",O:1,y:"a"}}],["/ComputerBasics/ComputerNetwork/computernetwork02.html",{loader:()=>m(()=>import("./computernetwork02.html-3UhR5Fib.js"),__vite__mapDeps([71,1])),meta:{d:16838496e5,l:"2023年5月12日",c:["计算机网络"],e:`
<h2>1 snmp协议的概念</h2>
<p>SNMP（Simple Network Management Protocol）是一种用于网络管理的应用层协议，它可以在网络中的设备之间进行通信和信息交换，从而实现对网络设备的监控、配置和管理。SNMP协议定义了一组标准的消息格式和协议操作，可以实现对网络设备的远程管理和监控。</p>
<p><strong>SNMP协议主要包括以下几个部分</strong>：</p>
<ol>
<li>
<p>管理站：指执行网络管理任务的计算机或者设备，使用SNMP协议向网络设备发送请求，获取设备的状态信息。</p>
</li>
<li>
<p>管理代理：指网络设备上的软件模块，用于响应管理站的请求，提供设备的状态信息和配置数据。</p>
</li>
<li>
<p>管理信息库：指保存在管理代理中的设备状态信息和配置数据，可以由管理站查询和修改。</p>
</li>
<li>
<p>管理对象：指网络设备中的各种资源，例如接口、路由表、系统信息等，可以由管理站查询和配置。</p>
</li>
</ol>`,r:{minutes:6.33,words:1899},t:"计算机网络02",O:2,y:"a"}}],["/ComputerBasics/DataStructure/",{loader:()=>m(()=>import("./index.html-DKvQx400.js"),__vite__mapDeps([72,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["数据结构"],e:`
<p>数据结构，启动！</p>
`,r:{minutes:.11,words:34},t:"Data Structure",y:"a"}}],["/ComputerBasics/OpreatingSystem/",{loader:()=>m(()=>import("./index.html-MDPexzhZ.js"),__vite__mapDeps([73,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["操作系统"],e:`
`,r:{minutes:.09,words:28},t:"Opreating System",y:"a"}}],["/Database/NoSQL/",{loader:()=>m(()=>import("./index.html-CgmyK0hB.js"),__vite__mapDeps([74,1])),meta:{d:1681268086e3,e:`
`,r:{minutes:.03,words:8},t:"NoSQL",y:"a"}}],["/Database/SQL/",{loader:()=>m(()=>import("./index.html-Jumlnymh.js"),__vite__mapDeps([75,1])),meta:{d:16807392e5,l:"2023年4月6日",c:["SQL基础"],e:`
`,r:{minutes:3.91,words:1174},t:"MySQL",O:1,y:"a"}}],["/FrontEnd/CSS/",{loader:()=>m(()=>import("./index.html-D4uYkHWa.js"),__vite__mapDeps([76,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Front End","CSS"],e:`
`,r:{minutes:.12,words:37},t:"什么是CSS ?",y:"a"}}],["/FrontEnd/CSS/css01.html",{loader:()=>m(()=>import("./css01.html-BV2Vsf3k.js"),__vite__mapDeps([77,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["CSS"],e:`
`,r:{minutes:.72,words:216},t:"CSS引入方式",O:1,y:"a"}}],["/FrontEnd/CSS/css02.html",{loader:()=>m(()=>import("./css02.html-yexinm2j.js"),__vite__mapDeps([78,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["CSS"],e:`
`,r:{minutes:.99,words:298},t:"CSS选择器",O:2,y:"a"}}],["/FrontEnd/CSS/css03.html",{loader:()=>m(()=>import("./css03.html-C-nhXIDl.js"),__vite__mapDeps([79,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["CSS"],e:`
`,r:{minutes:4.27,words:1281},t:"CSS页面布局",O:3,y:"a"}}],["/FrontEnd/HTML/",{loader:()=>m(()=>import("./index.html-Q_o8WT1M.js"),__vite__mapDeps([80,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Front End","HTML"],e:`
`,r:{minutes:.46,words:137},t:"Introduction to front-end",y:"a"}}],["/FrontEnd/HTML/html01.html",{loader:()=>m(()=>import("./html01.html-Cx_f4Mnq.js"),__vite__mapDeps([81,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["HTML"],e:`
`,r:{minutes:.43,words:130},t:"什么是HTML ?",O:1,y:"a"}}],["/FrontEnd/HTML/html02.html",{loader:()=>m(()=>import("./html02.html-CANfDf-H.js"),__vite__mapDeps([82,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["HTML"],e:`
`,r:{minutes:1.34,words:403},t:"HTML标签",O:2,y:"a"}}],["/FrontEnd/HTML/html03.html",{loader:()=>m(()=>import("./html03.html-CEivzo0g.js"),__vite__mapDeps([83,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["HTML"],e:`
`,r:{minutes:3.86,words:1157},t:"HTML标签",O:3,y:"a"}}],["/FrontEnd/JavaScript/",{loader:()=>m(()=>import("./index.html-DqAuFKqU.js"),__vite__mapDeps([84,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Front End","JavaScript"],e:`
`,r:{minutes:.19,words:58},t:"JavaScript",y:"a"}}],["/FrontEnd/JavaScript/javascript01.html",{loader:()=>m(()=>import("./javascript01.html-PcChg7O9.js"),__vite__mapDeps([85,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["JavaScript"],e:`
`,r:{minutes:1.82,words:545},t:"基础语法",O:1,y:"a"}}],["/FrontEnd/JavaScript/javascript02.html",{loader:()=>m(()=>import("./javascript02.html-DHiYq2xH.js"),__vite__mapDeps([86,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["JavaScript"],e:`
`,r:{minutes:3.2,words:960},t:"基本对象",O:2,y:"a"}}],["/FrontEnd/JavaScript/javascript03.html",{loader:()=>m(()=>import("./javascript03.html-RtaVRK41.js"),__vite__mapDeps([87,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["JavaScript"],e:`
`,r:{minutes:1.82,words:546},t:"BOM对象",O:3,y:"a"}}],["/FrontEnd/JavaScript/javascript04.html",{loader:()=>m(()=>import("./javascript04.html-DjijrcOT.js"),__vite__mapDeps([88,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["JavaScript"],e:`
`,r:{minutes:3.75,words:1126},t:"DOM对象",O:4,y:"a"}}],["/FrontEnd/JavaScript/javascript05.html",{loader:()=>m(()=>import("./javascript05.html-C7u59WxZ.js"),__vite__mapDeps([89,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["JavaScript"],e:`
`,r:{minutes:3.16,words:948},t:"事件",O:5,y:"a"}}],["/FrontEnd/Vue/",{loader:()=>m(()=>import("./index.html-85Cs5fP0.js"),__vite__mapDeps([90,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Front End","Vue"],e:`
`,r:{minutes:1.62,words:486},t:"Vue概述",y:"a"}}],["/FrontEnd/Vue/vue01.html",{loader:()=>m(()=>import("./vue01.html-IgVQlu59.js"),__vite__mapDeps([91,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:7.91,words:2372},t:"Vue指令",O:1,y:"a"}}],["/FrontEnd/Vue/vue02.html",{loader:()=>m(()=>import("./vue02.html-BUNyE5sq.js"),__vite__mapDeps([92,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:1.07,words:320},t:"Vue生命周期",O:2,y:"a"}}],["/FrontEnd/Vue/vue03.html",{loader:()=>m(()=>import("./vue03.html-BqPZqMjn.js"),__vite__mapDeps([93,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:7.23,words:2169},t:"AJAX",O:3,y:"a"}}],["/FrontEnd/Vue/vue04.html",{loader:()=>m(()=>import("./vue04.html-k1aMf95g.js"),__vite__mapDeps([94,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:1.64,words:493},t:"Vue-cli脚手架",O:4,y:"a"}}],["/FrontEnd/Vue/vue05.html",{loader:()=>m(()=>import("./vue05.html-DKMs3N26.js"),__vite__mapDeps([95,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:12.32,words:3695},t:"Element-UI",O:5,y:"a"}}],["/FrontEnd/Vue/vue06.html",{loader:()=>m(()=>import("./vue06.html-B7qD6MiH.js"),__vite__mapDeps([96,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:1.93,words:579},t:"Vue路由",O:6,y:"a"}}],["/FrontEnd/Vue/vue07.html",{loader:()=>m(()=>import("./vue07.html-BJSaXVon.js"),__vite__mapDeps([97,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["Vue"],e:`
`,r:{minutes:.87,words:261},t:"打包部署",O:7,y:"a"}}],["/Others/BroadBand/",{loader:()=>m(()=>import("./index.html-D17yGUkc.js"),__vite__mapDeps([98,1])),meta:{d:16816896e5,l:"2023年4月17日",g:["宽带"],e:`
<h2>1. 网线</h2>
<table>
<thead>
<tr>
<th></th>
<th>CAT.5</th>
<th>CAT.5E</th>
<th>CAT.6</th>
<th>CAT.6A</th>
<th>CAT.7</th>
<th>CAT.8</th>
</tr>
</thead>
<tbody>
<tr>
<td>传输速率</td>
<td>100Mbps</td>
<td>1000Mbps</td>
<td>1Gbps</td>
<td>10Gbps</td>
<td>10Gbps</td>
<td>25/40Gbps</td>
</tr>
<tr>
<td>传输频率</td>
<td>100MHz</td>
<td>100MHz</td>
<td>250MHz</td>
<td>500MHz</td>
<td>600MHz</td>
<td>2000MHz</td>
</tr>
<tr>
<td>最大距离</td>
<td>100m</td>
<td>100m</td>
<td>100m</td>
<td>100m</td>
<td>100m</td>
<td>30m</td>
</tr>
<tr>
<td>线缆类型</td>
<td>非屏蔽</td>
<td>屏蔽/非屏蔽</td>
<td>屏蔽/非屏蔽</td>
<td>屏蔽/非屏蔽</td>
<td>双层屏蔽</td>
<td>双层屏蔽</td>
</tr>
</tbody>
</table>`,r:{minutes:2.08,words:625},t:"宽带",y:"a"}}],["/Others/Demo/",{loader:()=>m(()=>import("./index.html-DAF6fSi5.js"),__vite__mapDeps([99,1])),meta:{d:1681268086e3,c:["使用指南"],e:`<h2>目录</h2>
<ul>
<li>
<p><a href="/Others/Demo/page.html" target="_blank">页面展示</a></p>
</li>
<li>
<p><a href="/Others/Demo/disable.html" target="_blank">禁用展示</a></p>
</li>
</ul>
`,r:{minutes:.1,words:29},t:"主要功能与配置演示",y:"a"}}],["/Others/Demo/disable.html",{loader:()=>m(()=>import("./disable.html-BCLyqaDY.js"),__vite__mapDeps([100,1])),meta:{d:1681268086e3,c:["使用指南"],g:["禁用"],e:`<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>
`,r:{minutes:.42,words:126},t:"布局与功能禁用",O:3,y:"a"}}],["/Others/Demo/page.html",{loader:()=>m(()=>import("./page.html-NOS_2mB_.js"),__vite__mapDeps([101,1])),meta:{a:"Ms.Hope",d:15778368e5,l:"2020年1月1日",c:["使用指南"],g:["页面配置","使用指南"],u:!0,v:"/assets/bgImage/iTab-dpvvgm.jpg",e:`<p><code>more</code> 注释之前的内容被视为文章摘要。</p>
`,r:{minutes:1.44,words:433},t:"页面配置",O:1,y:"a"}}],["/Others/ElectronicProduct/",{loader:()=>m(()=>import("./index.html-CZKmGFUy.js"),__vite__mapDeps([102,1])),meta:{t:"电子产品"}}],["/Others/ElectronicProduct/computer.html",{loader:()=>m(()=>import("./computer.html-Dr1HxI8D.js"),__vite__mapDeps([103,1])),meta:{t:"电子产品"}}],["/Others/ElectronicProduct/screen.html",{loader:()=>m(()=>import("./screen.html-DZH7bnnM.js"),__vite__mapDeps([104,1])),meta:{t:"电子产品"}}],["/Projects/huike/",{loader:()=>m(()=>import("./index.html-CIdf63wM.js"),__vite__mapDeps([105,1])),meta:{d:16946496e5,l:"2023年9月14日",c:["项目","汇客CRM"],e:`
<h2>1 项目模块结构</h2>
<blockquote>
<p>注意: 继承 / 依赖 是两个东西</p>
</blockquote>
<h3>1.1 继承结构</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>爷爷: spring-boot

父工程:huike-parent

子工程
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-clues<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-business<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-mybatis-review<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-contract<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-report<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>huike-task<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,r:{minutes:3.34,words:1001},t:"汇客CRM DAY01",y:"a"}}],["/Projects/huike/huike01.html",{loader:()=>m(()=>import("./huike01.html-DBtxSMia.js"),__vite__mapDeps([106,1])),meta:{d:16946496e5,l:"2023年9月14日",c:["汇客CRM"],e:`
`,r:{minutes:.05,words:14},t:"汇客CRM DAY02",O:1,y:"a"}}],["/Projects/huike/huike02.html",{loader:()=>m(()=>import("./huike02.html-CluWQFRP.js"),__vite__mapDeps([107,1])),meta:{d:16946496e5,l:"2023年9月14日",c:["汇客CRM"],e:`
`,r:{minutes:.05,words:14},t:"汇客CRM DAY03",O:2,y:"a"}}],["/Projects/reggietakeout/",{loader:()=>m(()=>import("./index.html-KSW028QG.js"),__vite__mapDeps([108,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["项目","瑞吉外卖"],e:`
<h2>0. 地址</h2>
<p><strong>视频地址</strong>: <a href="https://www.bilibili.com/video/BV13a411q753" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV13a411q753</a></p>
<p><strong>仓库地址</strong>: <a href="https://github.com/simeis147/reggie_take_out" target="_blank" rel="noopener noreferrer">https://github.com/simeis147/reggie_take_out</a></p>`,r:{minutes:5.27,words:1580},t:"瑞吉外卖",y:"a"}}],["/Projects/skytakeout/",{loader:()=>m(()=>import("./index.html-CSsEZVXO.js"),__vite__mapDeps([109,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["项目","苍穹外卖"],e:`
<h2>知识储备</h2>
<div class="hint-container info">
<p class="hint-container-title">知识储备</p>
<ol>
<li>
<p>熟悉Maven项目的<a href="../../BackEnd/JavaWeb/javaweb03">聚合和继承</a> 👈</p>
</li>
<li>
<p>了解Maven依赖的版本锁定</p>
</li>
<li>
<p>了解前后端分离开发的好处以及项目开发的流程</p>
</li>
<li>
<p>了解分模块开发的作用</p>
</li>
<li>
<p>熟悉<a href="http://www.yangeit.cn:21010/javaweb2023/day12.html#_2-5-jwt%E4%BB%A4%E7%89%8C" target="_blank" rel="noopener noreferrer">Jwt令牌</a>的特性和作用 👈</p>
</li>
<li>
<p>能独立利用SpringBoot和Mybatis开发单表的接口</p>
</li>
</ol>
</div>`,r:{minutes:1.74,words:521},t:"苍穹外卖",y:"a"}}],["/Projects/skytakeout/skytakeout01.html",{loader:()=>m(()=>import("./skytakeout01.html-CAjXvkEX.js"),__vite__mapDeps([110,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>工程模块说明 🍐</h2>
<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>sky-take-out</td>
<td>maven父工程 ，统一管理依赖版本，聚合其他子模块</td>
</tr>
<tr>
<td>2</td>
<td>sky-common</td>
<td>子模块，存放公共类，例如：工具类、常量类、异常类等</td>
</tr>
<tr>
<td>3</td>
<td>sky-pojo</td>
<td>子模块，存放实体类、VO、DTO等</td>
</tr>
<tr>
<td>4</td>
<td>sky-server</td>
<td>子模块，后端服务，存放配置文件、Controller、Service、Mapper等</td>
</tr>
</tbody>
</table>`,r:{minutes:1.39,words:416},t:"Day01 项目概述、环境搭建",O:1,y:"a"}}],["/Projects/skytakeout/skytakeout02.html",{loader:()=>m(()=>import("./skytakeout02.html-DOP_VW14.js"),__vite__mapDeps([111,1])),meta:{d:16897248e5,l:"2023年7月19日",c:["苍穹外卖"],e:`
<h2>1. 新增员工 🚩</h2>
<h3>1.1 编码</h3>

<h3>1.2 代码完善</h3>
<p>目前，程序存在的问题主要有两个： 👇👇</p>
<ul>
<li>录入的用户名已存在，抛出的异常后没有处理</li>
<li>新增员工时，创建人id和修改人id设置为固定值</li>
</ul>

<h2>2. 员工分页查询 🚩</h2>
<h3>2.1编码</h3>
<div class="hint-container info">
<p class="hint-container-title">步骤</p>
<ol>
<li>设计DTO类</li>
<li>封装PageResult</li>
<li>Controller层</li>
<li>Service层接口</li>
<li>Service层实现类</li>
<li>Mapper层</li>
</ol>
</div>`,r:{minutes:8.65,words:2596},t:"Day02 员工管理、分类管理",O:2,y:"a"}}],["/Projects/skytakeout/skytakeout03.html",{loader:()=>m(()=>import("./skytakeout03.html-BxUml5GX.js"),__vite__mapDeps([112,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>1. 公共字段自动填充🍐 ✏️ 🚩</h2>

<h2>2. 新增菜品 🚩</h2>

<h2>3. 菜品分页查询 🚩</h2>

<h2>4. 删除菜品 🚩</h2>

<h2>5. 修改菜品 🚩</h2>
<h3>5.1 根据id查询菜品实现</h3>

<h3>5.2 修改菜品实现</h3>

`,r:{minutes:9.02,words:2706},t:"Day03 菜品管理",O:3,y:"a"}}],["/Projects/skytakeout/skytakeout04.html",{loader:()=>m(()=>import("./skytakeout04.html-CLPBbEx1.js"),__vite__mapDeps([113,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`

`,r:{minutes:4.66,words:1399},t:"Day04 项目实战（套餐管理）",O:4,y:"a"}}],["/Projects/skytakeout/skytakeout05.html",{loader:()=>m(()=>import("./skytakeout05.html-2EXuoGOt.js"),__vite__mapDeps([114,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>在sky-server模块中，创建ShopController,定义setStatus设置营业状态---设置营业状态</li>
<li>定义创建ShopController定义getStatus接口查询营业状态方法---管理端查询营业状态</li>
<li>定义创建com.sky.controller.user包，并创建ShopController，定义getStatus接口查询营业状态方法---用户端查询营业状态</li>
</ol>
</div>`,r:{minutes:2.1,words:629},t:"Day05 店铺营业状态设置",O:5,y:"a"}}],["/Projects/skytakeout/skytakeout06.html",{loader:()=>m(()=>import("./skytakeout06.html-23c1Z_9j.js"),__vite__mapDeps([115,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>商品浏览功能代码✏️</h2>

`,r:{minutes:2.25,words:674},t:"Day06 微信登录、商品浏览",O:6,y:"a"}}],["/Projects/skytakeout/skytakeout07.html",{loader:()=>m(()=>import("./skytakeout07.html-Dx7CwO4l.js"),__vite__mapDeps([116,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>1. 缓存商品</h2>
<p><a href="http://www.yangeit.cn:21010/skytakeoutproject2023/day07.html#_1-%E7%BC%93%E5%AD%98%E8%8F%9C%E5%93%81" target="_blank" rel="noopener noreferrer">缓存商品</a></p>
<p><a href="http://www.yangeit.cn:21010/skytakeoutproject2023/day07.html#_2-%E7%BC%93%E5%AD%98%E5%A5%97%E9%A4%90" target="_blank" rel="noopener noreferrer">缓存套餐</a></p>`,r:{minutes:2.68,words:803},t:"Day07 缓存商品、购物车",O:7,y:"a"}}],["/Projects/skytakeout/skytakeout08.html",{loader:()=>m(()=>import("./skytakeout08.html-vaemdt3y.js"),__vite__mapDeps([117,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>1. 地址簿功能代码</h2>

<h2>2. 用户下单</h2>

<h2>3. 订单支付</h2>
<p><a href="http://www.yangeit.cn:21010/skytakeoutproject2023/day08.html#_3-%E8%AE%A2%E5%8D%95%E6%94%AF%E4%BB%98" target="_blank" rel="noopener noreferrer">订单支付</a></p>
`,r:{minutes:4.59,words:1378},t:"Day08 用户下单、订单支付",O:8,y:"a"}}],["/Projects/skytakeout/skytakeout09.html",{loader:()=>m(()=>import("./skytakeout09.html-CV9ry5NZ.js"),__vite__mapDeps([118,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>1. 历史订单</h2>

<h2>2. 订单管理</h2>

`,r:{minutes:7.46,words:2237},t:"Day09 项目实战（历史订单、订单管理）",O:9,y:"a"}}],["/Projects/skytakeout/skytakeout10.html",{loader:()=>m(()=>import("./skytakeout10.html-Cme8wOhi.js"),__vite__mapDeps([119,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>1. 订单状态定时处理</h2>

<h2>2. 来单提醒</h2>

<h2>3. 客户催单</h2>

`,r:{minutes:2.2,words:661},t:"Day10 订单状态定时处理、来单提醒和客户催单",O:10,y:"a"}}],["/Projects/skytakeout/skytakeout11.html",{loader:()=>m(()=>import("./skytakeout11.html-DMPMk-OG.js"),__vite__mapDeps([120,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`
<h2>1. 营业额统计</h2>

<h2>2. 用户统计</h2>

<h2>3. 订单统计</h2>

<h2>4. 销量排名TOP10</h2>

`,r:{minutes:4.85,words:1454},t:"Day11 数据统计（图形报表）",O:11,y:"a"}}],["/Projects/skytakeout/skytakeout12.html",{loader:()=>m(()=>import("./skytakeout12.html-CupgTclC.js"),__vite__mapDeps([121,1])),meta:{d:16896384e5,l:"2023年7月18日",c:["苍穹外卖"],e:`

`,r:{minutes:1.44,words:433},t:"Day12 数据统计（Excel报表）",O:12,y:"a"}}],["/Projects/tjxt/",{loader:()=>m(()=>import("./index.html-YBgSJOee.js"),__vite__mapDeps([122,1])),meta:{d:16950816e5,l:"2023年9月19日",c:["项目","天机学堂"],e:`
`,r:{minutes:.06,words:19},t:"天机学堂",y:"a"}}],["/Projects/tjxt/tjxt01.html",{loader:()=>m(()=>import("./tjxt01.html-Chdk6mlN.js"),__vite__mapDeps([123,1])),meta:{d:1694736e6,l:"2023年9月15日",c:["天机学堂"],e:`
`,r:{minutes:.04,words:12},t:"DAY01",O:1,y:"a"}}],["/Tools/Git/",{loader:()=>m(()=>import("./index.html-f4rklSr7.js"),__vite__mapDeps([124,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Git"],e:`
`,r:{minutes:.79,words:236},t:"Git",y:"a"}}],["/Tools/MarkDown/",{loader:()=>m(()=>import("./index.html-DoLWIwSt.js"),__vite__mapDeps([125,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Markdown"],u:!0,e:`
`,r:{minutes:1.25,words:374},t:"Markdown速查表",y:"a"}}],["/Tools/MarkDown/markdown01.html",{loader:()=>m(()=>import("./markdown01.html-BfWo3y9J.js"),__vite__mapDeps([126,1])),meta:{d:1680912e6,l:"2023年4月8日",c:["Markdown"],v:"https://simeis147-github-io.oss-cn-shenzhen.aliyuncs.com/BackEnd/SpringCloud/20230627144902.png",e:`
<h2><a class="header-anchor" href="#_1-提示信息"><span>1 </span></a><a href="https://theme-hope.vuejs.press/zh/guide/markdown/hint.html" target="_blank" rel="noopener noreferrer">提示信息</a></h2>
<div class="hint-container important">
<p class="hint-container-title">important</p>
</div>
<div class="hint-container info">
<p class="hint-container-title">info</p>
</div>`,r:{minutes:1.16,words:347},t:"Markdown方言（ hope ）",O:1,y:"a"}}],["/Tools/Resource/",{loader:()=>m(()=>import("./index.html-CX1etEhl.js"),__vite__mapDeps([127,1])),meta:{d:16900704e5,l:"2023年7月23日",g:["资源整合"],u:!0,e:`
<h2><a class="header-anchor" href="#_1-🪐-chatgpt"><span>1. 🪐 </span></a><a href="https://chat.openai.com/" target="_blank" rel="noopener noreferrer">ChatGPT</a></h2>
`,r:{minutes:1.02,words:306},t:"资源整合",y:"a"}}],["/ComputerBasics/Algorithm/01Arrays/",{loader:()=>m(()=>import("./index.html-D0sTUyk0.js"),__vite__mapDeps([128,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","数组"],r:{minutes:.06,words:17},t:"01 数组",y:"a"}}],["/ComputerBasics/Algorithm/01Arrays/arrays01.html",{loader:()=>m(()=>import("./arrays01.html-DbzvuSJa.js"),__vite__mapDeps([129,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","数组"],e:`
<p><strong>数组是存放在连续内存空间上的相同类型数据的集合。</strong></p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<ul>
<li>数组下标都是从 0 开始的。</li>
<li>数组内存空间的地址是连续的</li>
</ul>
</div>
<p>正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。</p>
<p><strong>数组的元素是不能删的，只能覆盖。</strong></p>
`,r:{minutes:.42,words:127},t:"数组理论基础",O:1,y:"a"}}],["/ComputerBasics/Algorithm/01Arrays/arrays02.html",{loader:()=>m(()=>import("./arrays02.html-Dvjiy2lA.js"),__vite__mapDeps([130,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","数组"],e:`
<p>O(logn)</p>
<h2>相关题目推荐</h2>
<ul>
<li><a href="https://leetcode.cn/problems/binary-search/" target="_blank" rel="noopener noreferrer">704. 二分查找</a></li>
<li><a href="https://leetcode.cn/problems/search-insert-position/" target="_blank" rel="noopener noreferrer">35. 搜索插入位置</a></li>
<li><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/" target="_blank" rel="noopener noreferrer">34. 在排序数组中查找元素的第一个和最后一个位置</a></li>
<li><a href="https://leetcode.cn/problems/sqrtx/" target="_blank" rel="noopener noreferrer">69. x 的平方根</a></li>
<li><a href="https://leetcode.cn/problems/valid-perfect-square/" target="_blank" rel="noopener noreferrer">367. 有效的完全平方数</a></li>
</ul>`,r:{minutes:1.1,words:330},t:"二分法",O:2,y:"a"}}],["/ComputerBasics/Algorithm/01Arrays/arrays03.html",{loader:()=>m(()=>import("./arrays03.html-3ks9qFkO.js"),__vite__mapDeps([131,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","数组"],e:`
<p>双指针算法</p>
<h2>相关题目推荐</h2>
<ul>
<li><a href="https://leetcode.cn/problems/remove-element/" target="_blank" rel="noopener noreferrer">27. 移除元素</a></li>
<li><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener noreferrer">26. 删除排序数组中的重复项</a></li>
<li><a href="https://leetcode.cn/problems/move-zeroes/" target="_blank" rel="noopener noreferrer">283. 移动零</a></li>
<li><a href="https://leetcode.cn/problems/backspace-string-compare/" target="_blank" rel="noopener noreferrer">844. 比较含退格的字符串</a></li>
<li><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/" target="_blank" rel="noopener noreferrer">977. 有序数组的平方</a></li>
</ul>`,r:{minutes:.96,words:287},t:"移除元素",O:3,y:"a"}}],["/ComputerBasics/Algorithm/01Arrays/arrays04.html",{loader:()=>m(()=>import("./arrays04.html-wwWa9g4g.js"),__vite__mapDeps([132,1])),meta:{d:16862688e5,l:"2023年6月9日",c:["算法","数组"],e:`
<h2>相关题目推荐</h2>
<ul>
<li><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/" target="_blank" rel="noopener noreferrer">209. 长度最小的子数组</a></li>
<li><a href="https://leetcode.cn/problems/fruit-into-baskets/" target="_blank" rel="noopener noreferrer">904. 水果成篮</a></li>
<li><a href="https://leetcode.cn/problems/minimum-window-substring/" target="_blank" rel="noopener noreferrer">76. 最小覆盖子串</a></li>
</ul>`,r:{minutes:.36,words:108},t:"滑动窗口",O:4,y:"a"}}],["/ComputerBasics/Algorithm/01Arrays/arrays05.html",{loader:()=>m(()=>import("./arrays05.html-FMkLu23N.js"),__vite__mapDeps([133,1])),meta:{d:16862688e5,l:"2023年6月9日",c:["算法","数组"],e:`
<p>本题不涉及到什么算法，就是模拟过程，但却十分考察对代码的掌控能力</p>
<h2>相关题目推荐</h2>
<ul>
<li><a href="https://leetcode.cn/problems/spiral-matrix-ii/" target="_blank" rel="noopener noreferrer">59. 螺旋矩阵 II</a></li>
<li><a href="https://leetcode.cn/problems/spiral-matrix/" target="_blank" rel="noopener noreferrer">54. 螺旋矩阵</a></li>
<li><a href="https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/" target="_blank" rel="noopener noreferrer">剑指Offer 29.顺时针打印矩阵</a></li>
</ul>`,r:{minutes:1.41,words:422},t:"模拟行为",O:5,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/",{loader:()=>m(()=>import("./index.html-6aeIMPUN.js"),__vite__mapDeps([134,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","链表"],r:{minutes:.06,words:17},t:"02 链表",y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist01.html",{loader:()=>m(()=>import("./linkedlist01.html-BS9r7FZc.js"),__vite__mapDeps([135,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","链表"],e:`
<p>链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域一个是指针域（存放指向下一个节点的指针），最后一个节点的指针域指向null（空指针的意思）。</p>
<p><a href="https://programmercarl.com/%E9%93%BE%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E9%93%BE%E8%A1%A8%E7%9A%84%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener noreferrer">链表理论基础</a></p>
<h2>写法</h2>`,r:{minutes:.69,words:206},t:"链表理论基础",O:1,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist02.html",{loader:()=>m(()=>import("./linkedlist02.html-BSN3GsJS.js"),__vite__mapDeps([136,1])),meta:{d:16867008e5,l:"2023年6月14日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/remove-linked-list-elements/" target="_blank" rel="noopener noreferrer">203.移除链表元素</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 添加虚节点方式
 * 时间复杂度 O(n)
 * 空间复杂度 O(1)
 * <span class="token keyword">@param</span> <span class="token parameter">head</span>
 * <span class="token keyword">@param</span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeElements</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> head<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 因为删除可能涉及到头节点，所以设置dummy节点，统一操作</span>
    <span class="token class-name">ListNode</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> dummy<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>val <span class="token operator">==</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pre<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            pre <span class="token operator">=</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 不添加虚拟节点方式
 * 时间复杂度 O(n)
 * 空间复杂度 O(1)
 * <span class="token keyword">@param</span> <span class="token parameter">head</span>
 * <span class="token keyword">@param</span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeElements</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> head<span class="token punctuation">.</span>val <span class="token operator">==</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 已经为null，提前退出</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> head<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 已确定当前head.val != val</span>
    <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>val <span class="token operator">==</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pre<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            pre <span class="token operator">=</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> head<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 不添加虚拟节点and pre Node方式
 * 时间复杂度 O(n)
 * 空间复杂度 O(1)
 * <span class="token keyword">@param</span> <span class="token parameter">head</span>
 * <span class="token keyword">@param</span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeElements</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>head<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> head<span class="token punctuation">.</span>val<span class="token operator">==</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
        head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">ListNode</span> curr <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>curr<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>curr<span class="token punctuation">.</span>next<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> curr<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val <span class="token operator">==</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>
            curr<span class="token punctuation">.</span>next <span class="token operator">=</span> curr<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        curr <span class="token operator">=</span> curr<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> head<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.93,words:280},t:"移除链表元素",O:2,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist03.html",{loader:()=>m(()=>import("./linkedlist03.html-BxBJ7Ink.js"),__vite__mapDeps([137,1])),meta:{d:16867008e5,l:"2023年6月14日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/design-linked-list/" target="_blank" rel="noopener noreferrer">707.设计链表</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//单链表</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> next<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val<span class="token operator">=</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">MyLinkedList</span> <span class="token punctuation">{</span>
    <span class="token comment">//size存储链表元素的个数</span>
    <span class="token keyword">int</span> size<span class="token punctuation">;</span>
    <span class="token comment">//虚拟头结点</span>
    <span class="token class-name">ListNode</span> head<span class="token punctuation">;</span>

    <span class="token comment">//初始化链表</span>
    <span class="token keyword">public</span> <span class="token class-name">MyLinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//获取第index个节点的数值，注意index是从0开始的，第0个节点就是头结点</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//如果index非法，返回-1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ListNode</span> currentNode <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token comment">//包含一个虚拟头节点，所以查找第 index+1 个节点</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            currentNode <span class="token operator">=</span> currentNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> currentNode<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//在链表最前面插入一个节点，等价于在第0个元素前添加</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addAtHead</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addAtIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//在链表的最后插入一个节点，等价于在(末尾+1)个元素前添加</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addAtTail</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addAtIndex</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 在第 index 个节点之前插入一个新节点，例如index为0，那么新插入的节点为链表的新头节点。</span>
    <span class="token comment">// 如果 index 等于链表的长度，则说明是新插入的节点为链表的尾结点</span>
    <span class="token comment">// 如果 index 大于链表的长度，则返回空</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addAtIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        size<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">//找到要插入节点的前驱</span>
        <span class="token class-name">ListNode</span> pred <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pred <span class="token operator">=</span> pred<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ListNode</span> toAdd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        toAdd<span class="token punctuation">.</span>next <span class="token operator">=</span> pred<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> toAdd<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//删除第index个节点</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteAtIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        size<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ListNode</span> pred <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pred <span class="token operator">=</span> pred<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> pred<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div>`,r:{minutes:2.51,words:752},t:"设计链表",O:3,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist04.html",{loader:()=>m(()=>import("./linkedlist04.html-Bg0gxBTU.js"),__vite__mapDeps([138,1])),meta:{d:16867008e5,l:"2023年6月14日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/reverse-linked-list/" target="_blank" rel="noopener noreferrer">206.反转链表</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 双指针</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseList</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            temp <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token comment">// 保存下一个节点</span>
            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> prev<span class="token punctuation">;</span>
            prev <span class="token operator">=</span> cur<span class="token punctuation">;</span>
            cur <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.76,words:229},t:"翻转链表",O:4,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist05.html",{loader:()=>m(()=>import("./linkedlist05.html-HE33HRCl.js"),__vite__mapDeps([139,1])),meta:{d:16867008e5,l:"2023年6月14日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/" target="_blank" rel="noopener noreferrer">24. 两两交换链表中的节点</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 递归版本</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">swapPairs</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// base case 退出提交</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> head<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> head<span class="token punctuation">;</span>
        <span class="token comment">// 获取当前节点的下一个节点</span>
        <span class="token class-name">ListNode</span> next <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token comment">// 进行递归</span>
        <span class="token class-name">ListNode</span> newNode <span class="token operator">=</span> <span class="token function">swapPairs</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这里进行交换</span>
        next<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>
        head<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>

        <span class="token keyword">return</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre></div>`,r:{minutes:.88,words:263},t:"两两交换链表中的节点",O:5,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist06.html",{loader:()=>m(()=>import("./linkedlist06.html-Dbd4-zFH.js"),__vite__mapDeps([140,1])),meta:{d:16867008e5,l:"2023年6月14日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="noopener noreferrer">19.删除链表的倒数第N个节点</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeNthFromEnd</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">ListNode</span> dummyNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dummyNode<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>

    <span class="token class-name">ListNode</span> fastIndex <span class="token operator">=</span> dummyNode<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> slowIndex <span class="token operator">=</span> dummyNode<span class="token punctuation">;</span>

    <span class="token comment">//只要快慢指针相差 n 个结点即可</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n  <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        fastIndex <span class="token operator">=</span> fastIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>fastIndex<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        fastIndex <span class="token operator">=</span> fastIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        slowIndex <span class="token operator">=</span> slowIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//此时 slowIndex 的位置就是待删除元素的前一个位置。</span>
    <span class="token comment">//具体情况可自己画一个链表长度为 3 的图来模拟代码来理解</span>
    slowIndex<span class="token punctuation">.</span>next <span class="token operator">=</span> slowIndex<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">return</span> dummyNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.52,words:155},t:"删除链表的倒数第N个节点",O:6,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist07.html",{loader:()=>m(()=>import("./linkedlist07.html-BYW3910E.js"),__vite__mapDeps([141,1])),meta:{d:16867008e5,l:"2023年6月14日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/" target="_blank" rel="noopener noreferrer">面试题 02.07. 链表相交</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">getIntersectionNode</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> headA<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> headB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> curA <span class="token operator">=</span> headA<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> curB <span class="token operator">=</span> headB<span class="token punctuation">;</span>
        <span class="token keyword">int</span> lenA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> lenB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>curA <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 求链表A的长度</span>
            lenA<span class="token operator">++</span><span class="token punctuation">;</span>
            curA <span class="token operator">=</span> curA<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>curB <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 求链表B的长度</span>
            lenB<span class="token operator">++</span><span class="token punctuation">;</span>
            curB <span class="token operator">=</span> curB<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        curA <span class="token operator">=</span> headA<span class="token punctuation">;</span>
        curB <span class="token operator">=</span> headB<span class="token punctuation">;</span>
        <span class="token comment">// 让curA为最长链表的头，lenA为其长度</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lenB <span class="token operator">&gt;</span> lenA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//1. swap (lenA, lenB);</span>
            <span class="token keyword">int</span> tmpLen <span class="token operator">=</span> lenA<span class="token punctuation">;</span>
            lenA <span class="token operator">=</span> lenB<span class="token punctuation">;</span>
            lenB <span class="token operator">=</span> tmpLen<span class="token punctuation">;</span>
            <span class="token comment">//2. swap (curA, curB);</span>
            <span class="token class-name">ListNode</span> tmpNode <span class="token operator">=</span> curA<span class="token punctuation">;</span>
            curA <span class="token operator">=</span> curB<span class="token punctuation">;</span>
            curB <span class="token operator">=</span> tmpNode<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 求长度差</span>
        <span class="token keyword">int</span> gap <span class="token operator">=</span> lenA <span class="token operator">-</span> lenB<span class="token punctuation">;</span>
        <span class="token comment">// 让curA和curB在同一起点上（末尾位置对齐）</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>gap<span class="token operator">--</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            curA <span class="token operator">=</span> curA<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 遍历curA 和 curB，遇到相同则直接返回</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>curA <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>curA <span class="token operator">==</span> curB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> curA<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            curA <span class="token operator">=</span> curA<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            curB <span class="token operator">=</span> curB<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.64,words:192},t:"链表相交",O:7,y:"a"}}],["/ComputerBasics/Algorithm/02LinkedList/linkedlist08.html",{loader:()=>m(()=>import("./linkedlist08.html-hESHbwgD.js"),__vite__mapDeps([142,1])),meta:{d:16867872e5,l:"2023年6月15日",c:["算法","链表"],e:`
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/linked-list-cycle-ii/" target="_blank" rel="noopener noreferrer">142.环形链表II</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">detectCycle</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>fast <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>slow <span class="token operator">==</span> fast<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 有环</span>
                <span class="token class-name">ListNode</span> index1 <span class="token operator">=</span> fast<span class="token punctuation">;</span>
                <span class="token class-name">ListNode</span> index2 <span class="token operator">=</span> head<span class="token punctuation">;</span>
                <span class="token comment">// 两个指针，从头结点和相遇结点，各走一步，直到相遇，相遇点即为环入口</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>index1 <span class="token operator">!=</span> index2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    index1 <span class="token operator">=</span> index1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                    index2 <span class="token operator">=</span> index2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> index1<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.37,words:112},t:"环形链表II",O:8,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/",{loader:()=>m(()=>import("./index.html-JDPSVqNQ.js"),__vite__mapDeps([143,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","哈希表"],r:{minutes:.06,words:19},t:"03 哈希表",y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable01.html",{loader:()=>m(()=>import("./hashtable01.html-C_CXd64Q.js"),__vite__mapDeps([144,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<blockquote>
<p>哈希表是根据关键码的值而直接进行访问的数据结构。</p>
</blockquote>
<h2>总结</h2>
<p>当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法。</p>
<p>但是哈希法也是牺牲了空间换取了时间，因为我们要使用额外的数组，set或者是map来存放数据，才能实现快速的查找。</p>
`,r:{minutes:.41,words:124},t:"哈希表理论基础",O:1,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable02.html",{loader:()=>m(()=>import("./hashtable02.html-8pbS065n.js"),__vite__mapDeps([145,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/valid-anagram/description/" target="_blank" rel="noopener noreferrer">242.有效的字母异位词</a></p>
<h2>相关题目推荐</h2>
<p><a href="https://leetcode.cn/problems/ransom-note/description/" target="_blank" rel="noopener noreferrer">383.赎金信</a><br>
<a href="https://leetcode.cn/problems/group-anagrams/description/" target="_blank" rel="noopener noreferrer">49. 字母异位词分组</a><br>
<a href="https://leetcode.cn/problems/find-all-anagrams-in-a-string/description/" target="_blank" rel="noopener noreferrer">438.找到字符串中所有字母异位词</a></p>`,r:{minutes:.82,words:246},t:"有效的字母异位词",O:2,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable03.html",{loader:()=>m(()=>import("./hashtable03.html-CbzQAq-4.js"),__vite__mapDeps([146,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/intersection-of-two-arrays/" target="_blank" rel="noopener noreferrer">349. 两个数组的交集</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">intersection</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> nums2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums2<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> resSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//遍历数组1</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            set1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//遍历数组2的过程中判断哈希表中是否存在该元素</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>set1<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                resSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      
        <span class="token comment">//方法1：将结果集合转为数组</span>

        <span class="token keyword">return</span> resSet<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//方法2：另外申请一个数组存放setRes中的元素,最后返回数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>resSet<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> resSet<span class="token punctuation">)</span><span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.82,words:246},t:"两个数组的交集",O:3,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable04.html",{loader:()=>m(()=>import("./hashtable04.html-Dr3RF76N.js"),__vite__mapDeps([147,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/happy-number/description/" target="_blank" rel="noopener noreferrer">第202题. 快乐数</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isHappy</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>record<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            record<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
            n <span class="token operator">=</span> <span class="token function">getNextNumber</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getNextNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            res <span class="token operator">+=</span> temp <span class="token operator">*</span> temp<span class="token punctuation">;</span>
            n <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.26,words:77},t:"快乐数",O:4,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable05.html",{loader:()=>m(()=>import("./hashtable05.html-DfLH_2fw.js"),__vite__mapDeps([148,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/two-sum/description/" target="_blank" rel="noopener noreferrer">1. 两数之和</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> temp <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">// 遍历当前元素，并在map中寻找是否有匹配的key</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
            res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 如果没找到匹配对，就把访问过的元素和下标加入到map中</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.42,words:126},t:"两数之和",O:5,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable06.html",{loader:()=>m(()=>import("./hashtable06.html-D31MGquM.js"),__vite__mapDeps([149,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/4sum-ii/description/" target="_blank" rel="noopener noreferrer">第454题.四数相加II</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fourSumCount</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums3<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//统计两个数组中的元素之和，同时统计出现的次数，放入map</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">:</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//统计剩余的两个元素的和，在map中找是否存在相加为0的情况，同时记录次数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">:</span> nums4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">+=</span> map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> i <span class="token operator">-</span> j<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.49,words:148},t:"四数相加II",O:6,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable07.html",{loader:()=>m(()=>import("./hashtable07.html-CZlJHQHS.js"),__vite__mapDeps([150,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/ransom-note/description/" target="_blank" rel="noopener noreferrer">383. 赎金信</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canConstruct</span><span class="token punctuation">(</span><span class="token class-name">String</span> ransomNote<span class="token punctuation">,</span> <span class="token class-name">String</span> magazine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// shortcut</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ransomNote<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> magazine<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 定义一个哈希映射数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// 遍历</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> magazine<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            record<span class="token punctuation">[</span>c <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> ransomNote<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            record<span class="token punctuation">[</span>c <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// 如果数组中存在负数，说明ransomNote字符串总存在magazine中没有的字符</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> record<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.38,words:113},t:"赎金信",O:7,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable08.html",{loader:()=>m(()=>import("./hashtable08.html-rIC0gUzX.js"),__vite__mapDeps([151,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/3sum/" target="_blank" rel="noopener noreferrer">第15题. 三数之和</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">threeSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 找出a + b + c = 0</span>
        <span class="token comment">// a = nums[i], b = nums[left], c = nums[right]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 排序之后如果第一个元素已经大于零，那么无论如何组合都不可能凑成三元组，直接返回结果就可以了</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 去重a</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> left <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    right<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 去重逻辑应该放在找到一个三元组之后，对b 和 c去重</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> left<span class="token operator">++</span><span class="token punctuation">;</span>
                    
                    right<span class="token operator">--</span><span class="token punctuation">;</span> 
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.72,words:216},t:"三数之和",O:8,y:"a"}}],["/ComputerBasics/Algorithm/03HashTable/hashtable09.html",{loader:()=>m(()=>import("./hashtable09.html-CfMBqrDk.js"),__vite__mapDeps([152,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法","哈希表"],e:`
<p><a href="https://leetcode.cn/problems/4sum/description/" target="_blank" rel="noopener noreferrer">第18题. 四数之和</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">fourSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
       
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  
            <span class="token comment">// nums[i] &gt; target 直接返回, 剪枝操作</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 对nums[i]去重</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 对nums[j]去重</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">int</span> left <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// nums[k] + nums[i] + nums[left] + nums[right] &gt; target int会溢出</span>
                    <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// 对nums[left]和nums[right]去重</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> right<span class="token operator">--</span><span class="token punctuation">;</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> left<span class="token operator">++</span><span class="token punctuation">;</span>

                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                        right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.67,words:202},t:"四数之和",O:9,y:"a"}}],["/ComputerBasics/Algorithm/04String/",{loader:()=>m(()=>import("./index.html-Dr5ax0cF.js"),__vite__mapDeps([153,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","字符串"],r:{minutes:.06,words:19},t:"04 字符串",y:"a"}}],["/ComputerBasics/Algorithm/04String/String01.html",{loader:()=>m(()=>import("./String01.html-hq4JeTnN.js"),__vite__mapDeps([154,1])),meta:{d:17093376e5,l:"2024年3月2日",c:["算法","字符串"],e:`
<p><a href="https://leetcode.cn/problems/reverse-string/description/" target="_blank" rel="noopener noreferrer">344. 反转字符串</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//构造 a ^ b 的结果，并放在 a 中</span>
            s<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//将 a ^ b 这一结果再 ^ b ，存入b中，此时 b = a, a = a ^ b</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//a ^ b 的结果再 ^ a ，存入 a 中，此时 b = a, a = b 完成交换</span>
            l<span class="token operator">++</span><span class="token punctuation">;</span>
            r<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 第二种方法用temp来交换数值更多人容易理解些</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">char</span> temp <span class="token operator">=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            l<span class="token operator">++</span><span class="token punctuation">;</span>
            r<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.55,words:166},t:"反转字符串",O:1,y:"a"}}],["/ComputerBasics/Algorithm/04String/String02.html",{loader:()=>m(()=>import("./String02.html-q6YIHjSD.js"),__vite__mapDeps([155,1])),meta:{d:17093376e5,l:"2024年3月2日",c:["算法","字符串"],e:`
<p><a href="https://leetcode.cn/problems/reverse-string-ii/" target="_blank" rel="noopener noreferrer">541. 反转字符串II</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//解法一</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">reverseStr</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuffer</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> length <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 找到k处和2k处</span>
            <span class="token class-name">StringBuffer</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 与length进行判断，如果大于length了，那就将其置为length</span>
            <span class="token keyword">int</span> firstK <span class="token operator">=</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> k <span class="token operator">&gt;</span> length<span class="token punctuation">)</span> <span class="token operator">?</span> length <span class="token operator">:</span> start <span class="token operator">+</span> k<span class="token punctuation">;</span>
            <span class="token keyword">int</span> secondK <span class="token operator">=</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span> <span class="token operator">&gt;</span> length<span class="token punctuation">)</span> <span class="token operator">?</span> length <span class="token operator">:</span> start <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//无论start所处位置，至少会反转一次</span>
            temp<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> firstK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 如果firstK到secondK之间有元素，这些元素直接放入res里即可。</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>firstK <span class="token operator">&lt;</span> secondK<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//此时剩余长度一定大于k。</span>
                res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>firstK<span class="token punctuation">,</span> secondK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            start <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//解法二（似乎更容易理解点）</span>
<span class="token comment">//题目的意思其实概括为 每隔2k个反转前k个，尾数不够k个时候全部反转</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">reverseStr</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ch<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> start <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token comment">//这里是判断尾数够不够k个来取决end指针的位置</span>
            <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//用异或运算反转 </span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span><span class="token punctuation">{</span>
                ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
                ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
                ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
                start<span class="token operator">++</span><span class="token punctuation">;</span>
                end<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">// 解法二还可以用temp来交换数值，会的人更多些</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">reverseStr</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> ch<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i <span class="token operator">+=</span> <span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> start <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token comment">// 判断尾数够不够k个来取决end指针的位置</span>
            <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>start <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span><span class="token punctuation">{</span>
                
                <span class="token keyword">char</span> temp <span class="token operator">=</span> ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
                ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
                ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>

                start<span class="token operator">++</span><span class="token punctuation">;</span>
                end<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.31,words:394},t:"反转字符串II",O:2,y:"a"}}],["/ComputerBasics/Algorithm/04String/String03.html",{loader:()=>m(()=>import("./String03.html-D_4a4BWs.js"),__vite__mapDeps([156,1])),meta:{d:17093376e5,l:"2024年3月2日",c:["算法","字符串"],e:`
<p><a href="https://kamacoder.com/problempage.php?pid=1064" target="_blank" rel="noopener noreferrer">替换数字</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"number"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.23,words:68},t:"替换数字",O:3,y:"a"}}],["/ComputerBasics/Algorithm/04String/String04.html",{loader:()=>m(()=>import("./String04.html-CBMnBLXx.js"),__vite__mapDeps([157,1])),meta:{d:1709424e6,l:"2024年3月3日",c:["算法","字符串"],e:`
<p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/" target="_blank" rel="noopener noreferrer">151.翻转字符串里的单词</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
   <span class="token doc-comment comment">/**
     * 不使用Java内置方法实现
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 1.去除首尾以及中间多余空格
     * 2.反转整个字符串
     * 3.反转各个单词
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">reverseWords</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("ReverseWords.reverseWords2() called with: s = [" + s + "]");</span>
        <span class="token comment">// 1.去除首尾以及中间多余空格</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token function">removeSpace</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.反转整个字符串</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>sb<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.反转各个单词</span>
        <span class="token function">reverseEachWord</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> <span class="token function">removeSpace</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("ReverseWords.removeSpace() called with: s = [" + s + "]");</span>
        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> end <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> start<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> end<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token char">' '</span> <span class="token operator">||</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            start<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// System.out.println("ReverseWords.removeSpace returned: sb = [" + sb + "]");</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 反转字符串指定区间[start, end]的字符
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> sb<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("ReverseWords.reverseString() called with: sb = [" + sb + "], start = [" + start + "], end = [" + end + "]");</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> temp <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            start<span class="token operator">++</span><span class="token punctuation">;</span>
            end<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// System.out.println("ReverseWords.reverseString returned: sb = [" + sb + "]");</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reverseEachWord</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> sb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>end <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                end<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">reverseString</span><span class="token punctuation">(</span>sb<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            start <span class="token operator">=</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            end <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div>`,r:{minutes:4.45,words:1336},t:"翻转字符串里的单词",O:4,y:"a"}}],["/ComputerBasics/Algorithm/04String/String05.html",{loader:()=>m(()=>import("./String05.html-D9q1Koe8.js"),__vite__mapDeps([158,1])),meta:{d:1709424e6,l:"2024年3月3日",c:["算法","字符串"],e:`
<p><a href="https://kamacoder.com/problempage.php?pid=1065" target="_blank" rel="noopener noreferrer">右旋字符串</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 版本一</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取字符串长度</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//反转整个字符串</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//反转前一段字符串，此时的字符串首尾尾是0,n - 1</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> n<span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//反转后一段字符串，此时的字符串首尾尾是n,len - 1</span>
        
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//异或法反转字符串，参照题目 344.反转字符串的解释</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
            ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
            ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
            start<span class="token operator">++</span><span class="token punctuation">;</span>
            end<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">// 版本二</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取字符串长度</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//反转前一段字符串，此时的字符串首尾是0,len - n - 1</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> len <span class="token operator">-</span> n<span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//反转后一段字符串，此时的字符串首尾是len - n,len - 1</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//反转整个字符串</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//异或法反转字符串，参照题目 344.反转字符串的解释</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
            ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
            ch<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">^=</span> ch<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
            start<span class="token operator">++</span><span class="token punctuation">;</span>
            end<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.16,words:349},t:"右旋字符串",O:5,y:"a"}}],["/ComputerBasics/Algorithm/04String/String06.html",{loader:()=>m(()=>import("./String06.html-ByTE_qrN.js"),__vite__mapDeps([159,1])),meta:{d:1709424e6,l:"2024年3月3日",c:["算法","字符串"],e:`
<p><a href="https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/" target="_blank" rel="noopener noreferrer">28. 找出字符串中第一个匹配项的下标</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 基于窗口滑动的算法
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 时间复杂度：O(m*n)
     * 空间复杂度：O(1)
     * 注：n为haystack的长度，m为needle的长度
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">strStr</span><span class="token punctuation">(</span><span class="token class-name">String</span> haystack<span class="token punctuation">,</span> <span class="token class-name">String</span> needle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> needle<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 当 needle 是空字符串时我们应当返回 0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> haystack<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n <span class="token operator">-</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 找到首字母相等</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> haystack<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 没有首字母相等的</span>
                <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 遍历后续字符，判断是否相等</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
            j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> haystack<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
                j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 找到</span>
                <span class="token keyword">return</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// 未找到</span>
                i <span class="token operator">-=</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.43,words:429},t:"实现 strStr()",O:6,y:"a"}}],["/ComputerBasics/Algorithm/04String/String07.html",{loader:()=>m(()=>import("./String07.html-BlUGPVZm.js"),__vite__mapDeps([160,1])),meta:{d:1709424e6,l:"2024年3月3日",c:["算法","字符串"],e:`
<p><a href="https://leetcode.cn/problems/repeated-substring-pattern/" target="_blank" rel="noopener noreferrer">459.重复的子字符串</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">repeatedSubstringPattern</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 原串加个空格(哨兵)，使下标从1开始，这样j从0开始，也不用初始化了</span>
        s <span class="token operator">=</span> <span class="token string">" "</span> <span class="token operator">+</span> s<span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// 构造 next 数组过程，j从0开始(空格)，i从2开始</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 匹配不成功，j回到前一位置 next 数组所对应的值</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> chars<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> j <span class="token operator">=</span> next<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 匹配成功，j往后移</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> chars<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token comment">// 更新 next 数组的值</span>
            next<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 最后判断是否是重复的子字符串，这里 next[len] 即代表next数组末尾的值</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> len <span class="token operator">%</span> <span class="token punctuation">(</span>len <span class="token operator">-</span> next<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.73,words:219},t:"重复的子字符串",O:7,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/",{loader:()=>m(()=>import("./index.html-6GG36VRl.js"),__vite__mapDeps([161,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","双指针法"],r:{minutes:.07,words:21},t:"05 双指针法",y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer01.html",{loader:()=>m(()=>import("./doublePointer01.html-ClnDph_W.js"),__vite__mapDeps([162,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/remove-element/" target="_blank" rel="noopener noreferrer">27. 移除元素</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeElement</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 快慢指针</span>
        <span class="token keyword">int</span> slowIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> fastIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> fastIndex <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> fastIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>fastIndex<span class="token punctuation">]</span> <span class="token operator">!=</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span>slowIndex<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>fastIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
                slowIndex<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> slowIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.75,words:224},t:"移除元素",O:1,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer02.html",{loader:()=>m(()=>import("./doublePointer02.html-BUlc2Jqz.js"),__vite__mapDeps([163,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/reverse-string/" target="_blank" rel="noopener noreferrer">344.反转字符串</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//构造 a ^ b 的结果，并放在 a 中</span>
            s<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//将 a ^ b 这一结果再 ^ b ，存入b中，此时 b = a, a = a ^ b</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//a ^ b 的结果再 ^ a ，存入 a 中，此时 b = a, a = b 完成交换</span>
            l<span class="token operator">++</span><span class="token punctuation">;</span>
            r<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 第二种方法用temp来交换数值更多人容易理解些</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">char</span> temp <span class="token operator">=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            l<span class="token operator">++</span><span class="token punctuation">;</span>
            r<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.55,words:166},t:"反转字符串",O:2,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer03.html",{loader:()=>m(()=>import("./doublePointer03.html-BuceQznF.js"),__vite__mapDeps([164,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://kamacoder.com/problempage.php?pid=1064" target="_blank" rel="noopener noreferrer">替换数字</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"number"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.23,words:68},t:"替换数字",O:3,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer04.html",{loader:()=>m(()=>import("./doublePointer04.html-BX9fuRiE.js"),__vite__mapDeps([165,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/" target="_blank" rel="noopener noreferrer">151.翻转字符串里的单词</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
   <span class="token doc-comment comment">/**
     * 不使用Java内置方法实现
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 1.去除首尾以及中间多余空格
     * 2.反转整个字符串
     * 3.反转各个单词
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">reverseWords</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("ReverseWords.reverseWords2() called with: s = [" + s + "]");</span>
        <span class="token comment">// 1.去除首尾以及中间多余空格</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token function">removeSpace</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.反转整个字符串</span>
        <span class="token function">reverseString</span><span class="token punctuation">(</span>sb<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.反转各个单词</span>
        <span class="token function">reverseEachWord</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> <span class="token function">removeSpace</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("ReverseWords.removeSpace() called with: s = [" + s + "]");</span>
        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> end <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> start<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> end<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token char">' '</span> <span class="token operator">||</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            start<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// System.out.println("ReverseWords.removeSpace returned: sb = [" + sb + "]");</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 反转字符串指定区间[start, end]的字符
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> sb<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println("ReverseWords.reverseString() called with: sb = [" + sb + "], start = [" + start + "], end = [" + end + "]");</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> temp <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            start<span class="token operator">++</span><span class="token punctuation">;</span>
            end<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// System.out.println("ReverseWords.reverseString returned: sb = [" + sb + "]");</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reverseEachWord</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> sb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>end <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                end<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">reverseString</span><span class="token punctuation">(</span>sb<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            start <span class="token operator">=</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            end <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.45,words:1336},t:"翻转字符串里的单词",O:4,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer05.html",{loader:()=>m(()=>import("./doublePointer05.html-BI5msC1U.js"),__vite__mapDeps([166,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/reverse-linked-list/" target="_blank" rel="noopener noreferrer">206.反转链表</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 双指针</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseList</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            temp <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span><span class="token comment">// 保存下一个节点</span>
            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> prev<span class="token punctuation">;</span>
            prev <span class="token operator">=</span> cur<span class="token punctuation">;</span>
            cur <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.75,words:224},t:"反转链表",O:5,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer06.html",{loader:()=>m(()=>import("./doublePointer06.html-aOF3p1Zh.js"),__vite__mapDeps([167,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="noopener noreferrer">19.删除链表的倒数第N个节点</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeNthFromEnd</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">ListNode</span> dummyNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dummyNode<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>

    <span class="token class-name">ListNode</span> fastIndex <span class="token operator">=</span> dummyNode<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> slowIndex <span class="token operator">=</span> dummyNode<span class="token punctuation">;</span>

    <span class="token comment">// 只要快慢指针相差 n 个结点即可</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n  <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
        fastIndex <span class="token operator">=</span> fastIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>fastIndex <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        fastIndex <span class="token operator">=</span> fastIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        slowIndex <span class="token operator">=</span> slowIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//此时 slowIndex 的位置就是待删除元素的前一个位置。</span>
    <span class="token comment">//具体情况可自己画一个链表长度为 3 的图来模拟代码来理解</span>
    slowIndex<span class="token punctuation">.</span>next <span class="token operator">=</span> slowIndex<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">return</span> dummyNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.5,words:150},t:"删除链表的倒数第N个节点",O:6,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer07.html",{loader:()=>m(()=>import("./doublePointer07.html-CGbaLmsu.js"),__vite__mapDeps([168,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/" target="_blank" rel="noopener noreferrer">面试题 02.07. 链表相交</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">getIntersectionNode</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> headA<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> headB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> curA <span class="token operator">=</span> headA<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> curB <span class="token operator">=</span> headB<span class="token punctuation">;</span>
        <span class="token keyword">int</span> lenA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> lenB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>curA <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 求链表A的长度</span>
            lenA<span class="token operator">++</span><span class="token punctuation">;</span>
            curA <span class="token operator">=</span> curA<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>curB <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 求链表B的长度</span>
            lenB<span class="token operator">++</span><span class="token punctuation">;</span>
            curB <span class="token operator">=</span> curB<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        curA <span class="token operator">=</span> headA<span class="token punctuation">;</span>
        curB <span class="token operator">=</span> headB<span class="token punctuation">;</span>
        <span class="token comment">// 让curA为最长链表的头，lenA为其长度</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lenB <span class="token operator">&gt;</span> lenA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//1. swap (lenA, lenB);</span>
            <span class="token keyword">int</span> tmpLen <span class="token operator">=</span> lenA<span class="token punctuation">;</span>
            lenA <span class="token operator">=</span> lenB<span class="token punctuation">;</span>
            lenB <span class="token operator">=</span> tmpLen<span class="token punctuation">;</span>
            <span class="token comment">//2. swap (curA, curB);</span>
            <span class="token class-name">ListNode</span> tmpNode <span class="token operator">=</span> curA<span class="token punctuation">;</span>
            curA <span class="token operator">=</span> curB<span class="token punctuation">;</span>
            curB <span class="token operator">=</span> tmpNode<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 求长度差</span>
        <span class="token keyword">int</span> gap <span class="token operator">=</span> lenA <span class="token operator">-</span> lenB<span class="token punctuation">;</span>
        <span class="token comment">// 让curA和curB在同一起点上（末尾位置对齐）</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>gap<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            curA <span class="token operator">=</span> curA<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 遍历curA 和 curB，遇到相同则直接返回</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>curA <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>curA <span class="token operator">==</span> curB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> curA<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            curA <span class="token operator">=</span> curA<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            curB <span class="token operator">=</span> curB<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.62,words:187},t:"链表相交",O:7,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer08.html",{loader:()=>m(()=>import("./doublePointer08.html-CxZUdwhR.js"),__vite__mapDeps([169,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/linked-list-cycle-ii/" target="_blank" rel="noopener noreferrer">142.环形链表II</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">detectCycle</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>fast <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>slow <span class="token operator">==</span> fast<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 有环</span>
                <span class="token class-name">ListNode</span> index1 <span class="token operator">=</span> fast<span class="token punctuation">;</span>
                <span class="token class-name">ListNode</span> index2 <span class="token operator">=</span> head<span class="token punctuation">;</span>
                <span class="token comment">// 两个指针，从头结点和相遇结点，各走一步，直到相遇，相遇点即为环入口</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>index1 <span class="token operator">!=</span> index2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    index1 <span class="token operator">=</span> index1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                    index2 <span class="token operator">=</span> index2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> index1<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.36,words:107},t:"环形链表II",O:8,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer09.html",{loader:()=>m(()=>import("./doublePointer09.html-OuxU4iW6.js"),__vite__mapDeps([170,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/3sum/" target="_blank" rel="noopener noreferrer">第15题. 三数之和</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">threeSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 找出a + b + c = 0</span>
        <span class="token comment">// a = nums[i], b = nums[left], c = nums[right]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 排序之后如果第一个元素已经大于零，那么无论如何组合都不可能凑成三元组，直接返回结果就可以了</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 去重a</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> left <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    right<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">// 去重逻辑应该放在找到一个三元组之后，对b 和 c去重</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> left<span class="token operator">++</span><span class="token punctuation">;</span>
                    
                    right<span class="token operator">--</span><span class="token punctuation">;</span> 
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.72,words:216},t:"三数之和",O:9,y:"a"}}],["/ComputerBasics/Algorithm/05DoublePointer/doublePointer10.html",{loader:()=>m(()=>import("./doublePointer10.html-DVuzpDSC.js"),__vite__mapDeps([171,1])),meta:{d:17095104e5,l:"2024年3月4日",c:["算法","双指针"],e:`
<p><a href="https://leetcode.cn/problems/4sum/" target="_blank" rel="noopener noreferrer">第18题. 四数之和</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">fourSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
       
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              
            <span class="token comment">// nums[i] &gt; target 直接返回, 剪枝操作</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 对nums[i]去重</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 对nums[j]去重</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">int</span> left <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// nums[k] + nums[i] + nums[left] + nums[right] &gt; target int会溢出</span>
                    <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// 对nums[left]和nums[right]去重</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> right<span class="token operator">--</span><span class="token punctuation">;</span>
                        <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> left<span class="token operator">++</span><span class="token punctuation">;</span>

                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                        right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.67,words:202},t:"四数之和",O:10,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/",{loader:()=>m(()=>import("./index.html-CTff6vIe.js"),__vite__mapDeps([172,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","栈与队列"],r:{minutes:.07,words:21},t:"06 栈与队列",y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues01.html",{loader:()=>m(()=>import("./stacksAndQueues01.html-S2F81C8r.js"),__vite__mapDeps([173,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/implement-queue-using-stacks/" target="_blank" rel="noopener noreferrer">232.用栈实现队列</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyQueue</span> <span class="token punctuation">{</span>

    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stackIn<span class="token punctuation">;</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stackOut<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** Initialize your data structure here. */</span>
    <span class="token keyword">public</span> <span class="token class-name">MyQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stackIn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 负责进栈</span>
        stackOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 负责出栈</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Push element x to the back of queue. */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stackIn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Removes the element from in front of queue and returns that element. */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
        <span class="token function">dumpstackIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> stackOut<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Get the front element. */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">dumpstackIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> stackOut<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Returns whether the queue is empty. */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> stackIn<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> stackOut<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 如果stackOut为空，那么将stackIn中的元素全部放到stackOut中</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">dumpstackIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>stackOut<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> 
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stackIn<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                stackOut<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stackIn<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.53,words:160},t:"用栈实现队列",O:1,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues02.html",{loader:()=>m(()=>import("./stacksAndQueues02.html-5vs6K0Ex.js"),__vite__mapDeps([174,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/implement-stack-using-queues/" target="_blank" rel="noopener noreferrer">225. 用队列实现栈</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyStack</span> <span class="token punctuation">{</span>

    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue1<span class="token punctuation">;</span> <span class="token comment">// 和栈中保持一样元素的队列</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue2<span class="token punctuation">;</span> <span class="token comment">// 辅助队列</span>

    <span class="token doc-comment comment">/** Initialize your data structure here. */</span>
    <span class="token keyword">public</span> <span class="token class-name">MyStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Push element x onto stack. */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue2<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 先放在辅助队列中</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue1<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            queue2<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>queue1<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queueTemp<span class="token punctuation">;</span>
        queueTemp <span class="token operator">=</span> queue1<span class="token punctuation">;</span>
        queue1 <span class="token operator">=</span> queue2<span class="token punctuation">;</span>
        queue2 <span class="token operator">=</span> queueTemp<span class="token punctuation">;</span> <span class="token comment">// 最后交换queue1和queue2，将元素都放到queue1中</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Removes the element on top of the stack and returns that element. */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queue1<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 因为queue1中的元素和栈中的保持一致，所以这个和下面两个的操作只看queue1即可</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Get the top element. */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queue1<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/** Returns whether the stack is empty. */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queue1<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.65,words:795},t:"用队列实现栈",O:2,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues03.html",{loader:()=>m(()=>import("./stacksAndQueues03.html-DBjRv8cl.js"),__vite__mapDeps([175,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/valid-parentheses/" target="_blank" rel="noopener noreferrer">20. 有效的括号</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> deque <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> ch<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//碰到左括号，就把相应的右括号入栈</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'('</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char">')'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'{'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char">'}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'['</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char">']'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> deque<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//如果是右括号判断是否和栈顶元素匹配</span>
                deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//最后判断栈中元素是否匹配</span>
        <span class="token keyword">return</span> deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.41,words:123},t:"有效的括号",O:3,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues04.html",{loader:()=>m(()=>import("./stacksAndQueues04.html-BjFAObs9.js"),__vite__mapDeps([176,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/remove-all-adjacent-duplicates-in-string/" target="_blank" rel="noopener noreferrer">1047. 删除字符串中的所有相邻重复项</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//ArrayDeque会比LinkedList在除了删除元素这一点外会快一点</span>
        <span class="token comment">//参考：https://stackoverflow.com/questions/6163166/why-is-arraydeque-better-than-linkedlist</span>
        <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> deque <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> ch<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch <span class="token operator">=</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> deque<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token comment">//剩余的元素即为不重复的元素</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            str <span class="token operator">=</span> deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.45,words:136},t:"删除字符串中的所有相邻重复项",O:4,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues05.html",{loader:()=>m(()=>import("./stacksAndQueues05.html-BcRQ6fJQ.js"),__vite__mapDeps([177,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/evaluate-reverse-polish-notation/" target="_blank" rel="noopener noreferrer">150. 逆波兰表达式求值</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">evalRPN</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tokens<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> tokens<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// leetcode 内置jdk的问题，不能使用==判断字符串是否相等</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 注意 - 和/ 需要特殊处理</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">-</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> temp1 <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> temp2 <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp2 <span class="token operator">/</span> temp1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.42,words:127},t:"逆波兰表达式求值",O:5,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues06.html",{loader:()=>m(()=>import("./stacksAndQueues06.html-DPraJmDm.js"),__vite__mapDeps([178,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/sliding-window-maximum/" target="_blank" rel="noopener noreferrer">239. 滑动窗口最大值</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//解法一</span>
<span class="token comment">//自定义数组</span>
<span class="token keyword">class</span> <span class="token class-name">MyQueue</span> <span class="token punctuation">{</span>
    <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> deque <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//弹出元素时，比较当前要弹出的数值是否等于队列出口的数值，如果相等则弹出</span>
    <span class="token comment">//同时判断队列当前是否为空</span>
    <span class="token keyword">void</span> <span class="token function">poll</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> val <span class="token operator">==</span> deque<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            deque<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//添加元素时，如果要添加的元素大于入口处的元素，就将入口元素弹出</span>
    <span class="token comment">//保证队列元素单调递减</span>
    <span class="token comment">//比如此时队列元素3,1，2将要入队，比1大，所以1弹出，此时队列：3,2</span>
    <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> val <span class="token operator">&gt;</span> deque<span class="token punctuation">.</span><span class="token function">getLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            deque<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        deque<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//队列队顶元素始终为最大值</span>
    <span class="token keyword">int</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> deque<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">maxSlidingWindow</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> nums<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">//存放结果元素的数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//自定义队列</span>
        <span class="token class-name">MyQueue</span> myQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//先将前k的元素放入队列</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            myQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        res<span class="token punctuation">[</span>num<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> myQueue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> k<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//滑动窗口移除最前面的元素，移除是判断该元素是否放入队列</span>
            myQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i <span class="token operator">-</span> k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//滑动窗口加入最后面的元素</span>
            myQueue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//记录对应的最大值</span>
            res<span class="token punctuation">[</span>num<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> myQueue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.08,words:624},t:"滑动窗口最大值",O:6,y:"a"}}],["/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues07.html",{loader:()=>m(()=>import("./stacksAndQueues07.html-CEYCRy0h.js"),__vite__mapDeps([179,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["算法","栈与队列"],e:`
<p><a href="https://leetcode.cn/problems/top-k-frequent-elements/" target="_blank" rel="noopener noreferrer">347.前 K 个高频元素</a></p>
<h2>写法</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">/*Comparator接口说明:
 * 返回负数，形参中第一个参数排在前面；返回正数，形参中第二个参数排在前面
 * 对于队列：排在前面意味着往队头靠
 * 对于堆（使用PriorityQueue实现）：从队头到队尾按从小到大排就是最小堆（小顶堆），
 *                                从队头到队尾按从大到小排就是最大堆（大顶堆）---&gt;队头元素相当于堆的根节点
 * */</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token comment">//解法1：基于大顶堆实现</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">topKFrequent1</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//key为数组元素值,val为对应出现次数</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token operator">:</span>nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//在优先队列中存储二元组(num,cnt),cnt表示元素值num在数组中的出现次数</span>
        <span class="token comment">//出现次数按从队头到队尾的顺序是从大到小排,出现次数最多的在队头(相当于大顶堆)</span>
        <span class="token class-name">PriorityQueue</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>pair1<span class="token punctuation">,</span> pair2<span class="token punctuation">)</span><span class="token operator">-&gt;</span>pair2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pair1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry<span class="token operator">:</span>map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//大顶堆需要对所有元素进行排序</span>
            pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//依次从队头弹出k个,就是出现频率前k高的元素</span>
            ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//解法2：基于小顶堆实现</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">topKFrequent2</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//key为数组元素值,val为对应出现次数</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token operator">:</span>nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//在优先队列中存储二元组(num,cnt),cnt表示元素值num在数组中的出现次数</span>
        <span class="token comment">//出现次数按从队头到队尾的顺序是从小到大排,出现次数最低的在队头(相当于小顶堆)</span>
        <span class="token class-name">PriorityQueue</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>pair1<span class="token punctuation">,</span>pair2<span class="token punctuation">)</span><span class="token operator">-&gt;</span>pair1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pair2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry<span class="token operator">:</span>map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//小顶堆只需要维持k个元素有序</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>k<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//小顶堆元素个数小于k个时直接加</span>
                pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>pq<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//当前元素出现次数大于小顶堆的根结点(这k个元素中出现次数最少的那个)</span>
                    pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//弹出队头(小顶堆的根结点),即把堆里出现次数最少的那个删除,留下的就是出现次数多的了</span>
                    pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//依次弹出小顶堆,先弹出的是堆的根,出现次数少,后面弹出的出现次数多</span>
            ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.91,words:874},t:"前 K 个高频元素",O:7,y:"a"}}],["/ComputerBasics/Algorithm/07BinaryTree/",{loader:()=>m(()=>import("./index.html-Be9bVd1w.js"),__vite__mapDeps([180,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","二叉树"],r:{minutes:.06,words:19},t:"07 二叉树",y:"a"}}],["/ComputerBasics/Algorithm/08BacktrackingAlgorithm/",{loader:()=>m(()=>import("./index.html-DToUPnxF.js"),__vite__mapDeps([181,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","回溯算法"],r:{minutes:.07,words:21},t:"08 回溯算法",y:"a"}}],["/ComputerBasics/Algorithm/09GreedyAlgorithm/",{loader:()=>m(()=>import("./index.html-Ckpt_gWt.js"),__vite__mapDeps([182,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","贪心算法"],r:{minutes:.07,words:21},t:"09 贪心算法",y:"a"}}],["/ComputerBasics/Algorithm/10DynamicProgramming/",{loader:()=>m(()=>import("./index.html-DRVzXEtT.js"),__vite__mapDeps([183,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","动态规划"],r:{minutes:.07,words:21},t:"10 动态规划",y:"a"}}],["/ComputerBasics/Algorithm/11MonotonicStack/",{loader:()=>m(()=>import("./index.html-DOkJ1b_d.js"),__vite__mapDeps([184,1])),meta:{d:16861824e5,l:"2023年6月8日",c:["算法","单调栈"],r:{minutes:.06,words:19},t:"11 单调栈",y:"a"}}],["/ComputerBasics/Algorithm/12Summary/",{loader:()=>m(()=>import("./index.html-CO0keFzc.js"),__vite__mapDeps([185,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法"],r:{minutes:.05,words:15},t:"12 总结",y:"a"}}],["/ComputerBasics/Algorithm/12Summary/summary01.html",{loader:()=>m(()=>import("./summary01.html-DRqgijWy.js"),__vite__mapDeps([186,1])),meta:{d:17092512e5,l:"2024年3月1日",c:["算法"],e:`
`,r:{minutes:.04,words:11},t:"总结",O:1,y:"a"}}],["/ComputerBasics/ComputerNetwork/01cn/",{loader:()=>m(()=>import("./index.html-P8PjADB9.js"),__vite__mapDeps([187,1])),meta:{d:17097696e5,l:"2024年3月7日",c:["计算机网络"],r:{minutes:.08,words:23},t:"计算机网络面试题",y:"a"}}],["/ComputerBasics/ComputerNetwork/01cn/cn01.html",{loader:()=>m(()=>import("./cn01.html-DSibKUVD.js"),__vite__mapDeps([188,1])),meta:{d:17097696e5,l:"2024年3月7日",c:["计算机网络"],e:`
<h2>OSI 七层网络模型及各层协议</h2>
<p><strong>OSI（Open System Interconnect）七层网络模型</strong> 是国际标准化组织提出的一个网络分层模型</p>
<table>
<thead>
<tr>
<th>结构</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层</td>
<td>为计算机用户提供服务</td>
</tr>
<tr>
<td>表示层</td>
<td>负责数据格式的转换（编码解码、加密解密、压缩解压缩）</td>
</tr>
<tr>
<td>会话层</td>
<td>管理（建立、维护、重连）应用程序之间的会话</td>
</tr>
<tr>
<td>传输层</td>
<td>提供端到端的通信，数据的分段、流量控制和错误恢复。</td>
</tr>
<tr>
<td>网络层</td>
<td>路由和寻址（决定数据在网络的游走路径）</td>
</tr>
<tr>
<td>数据链路层</td>
<td>提供物理层上的逻辑连接，进行帧的同步、错误检测和流量控制</td>
</tr>
<tr>
<td>物理层</td>
<td>传输比特流，定义了物理介质和设备之间的连接标准</td>
</tr>
</tbody>
</table>`,r:{minutes:1.24,words:371},t:"基础级问题",O:1,y:"a"}}],["/ComputerBasics/ComputerNetwork/01cn/cn02.html",{loader:()=>m(()=>import("./cn02.html-BhLgef6E.js"),__vite__mapDeps([189,1])),meta:{d:17097696e5,l:"2024年3月7日",c:["计算机网络"],e:`
<h2>tcp 如何保证可靠性传输</h2>
<h3>拥塞控制</h3>
<h3>流量控制</h3>
<h3>重传机制</h3>
<h2>常见协议工作原理</h2>
<h3>https</h3>
<h3>ARP</h3>
<h3>ICMP</h3>
<h3>DHCP</h3>
<h3>PING</h3>
<h2>session 和 cookie 的区别</h2>
`,r:{minutes:.19,words:58},t:"进阶级问题",O:2,y:"a"}}],["/ComputerBasics/ComputerNetwork/01cn/cn03.html",{loader:()=>m(()=>import("./cn03.html-STEk-ged.js"),__vite__mapDeps([190,1])),meta:{d:17097696e5,l:"2024年3月7日",c:["计算机网络"],e:`
<h2>tcp 的粘包和拆包以解决方案</h2>
<h2>Dos、DDos、DRDos 攻击</h2>
<h2>http长连接原理</h2>
`,r:{minutes:.13,words:40},t:"挑战级问题",O:3,y:"a"}}],["/ComputerBasics/DataStructure/01DS/",{loader:()=>m(()=>import("./index.html-BvxklgnO.js"),__vite__mapDeps([191,1])),meta:{d:17097696e5,l:"2024年3月7日",c:["数据结构"],r:{minutes:.08,words:24},t:"数据结构与算法面试题",y:"a"}}],["/ComputerBasics/DataStructure/01DS/ds01.html",{loader:()=>m(()=>import("./ds01.html-NOQ7yFtG.js"),__vite__mapDeps([192,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["数据结构"],e:`
<h2>栈的概念、性质、应用</h2>
<h3>栈的基本概念</h3>
<p><strong>栈（Stack）</strong> 是一种基本的数据结构，它遵循 <strong>先进后出</strong> （Last In, First Out，LIFO）的原则。这意味着最后进入栈的元素将首先被移除。</p>
<p>栈常用一维数组或链表来实现，用数组实现的栈叫作 <strong>顺序栈</strong> ，用链表实现的栈叫作 <strong>链式栈</strong> 。</p>
<h3>栈的基本操作</h3>
<ol>
<li>
<p><strong>push</strong>：将元素插入栈顶，栈顶元素被移除。</p>
</li>
<li>
<p><strong>pop</strong>：将栈顶元素移除。</p>
</li>
<li>
<p><strong>Peek</strong>：查看栈顶元素，但不移除。</p>
</li>
<li>
<p><strong>isEmpty</strong>：判断栈是否为空。</p>
</li>
<li>
<p><strong>size</strong>：返回栈中元素的个数。</p>
</li>
<li>
<p><strong>toString</strong>：返回栈中元素的字符串表示。</p>
</li>
</ol>`,r:{minutes:4.47,words:1342},t:"基础级问题",O:1,y:"a"}}],["/ComputerBasics/DataStructure/01DS/ds02_.html",{loader:()=>m(()=>import("./ds02_.html-BS343ZhP.js"),__vite__mapDeps([193,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["数据结构"],e:`
<h2>常见哈希函数</h2>
<h2>堆的概念、性质及其插入、删除</h2>
<h2>huffman树概念、构造方法及huffman编码</h2>
<h2>AVL树及其性质</h2>
<h2>红黑树概念及其性质</h2>
<h2>B树、B+树、B*树</h2>
<h2>图的最小生成树</h2>
<h2>图的最短路径查找算法</h2>
<h2>基本算法思想</h2>
<h3>穷举</h3>
<h3>分治</h3>
<h3>贪心</h3>
<h3>回溯</h3>
<h3>动态规划</h3>
`,r:{minutes:.34,words:102},t:"进阶级问题",O:2,y:"a"}}],["/ComputerBasics/DataStructure/01DS/ds03.html",{loader:()=>m(()=>import("./ds03.html-UaWeVrzB.js"),__vite__mapDeps([194,1])),meta:{d:17095968e5,l:"2024年3月5日",c:["数据结构"],e:`
<h2>布隆过滤器</h2>
<h2>字符串匹配算法</h2>
<h2>红黑树与AVL树的比较</h2>
<h2>A*算法</h2>
<h2>tim排序</h2>
`,r:{minutes:.14,words:43},t:"挑战级问题",O:3,y:"a"}}],["/ComputerBasics/DataStructure/02MO/",{loader:()=>m(()=>import("./index.html-BZ8Q-7wY.js"),__vite__mapDeps([195,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["中间件与其他专业技能"],r:{minutes:.1,words:30},t:"中间件与其他专业技能",y:"a"}}],["/ComputerBasics/DataStructure/02MO/mo01.html",{loader:()=>m(()=>import("./mo01.html-DAmAKyEw.js"),__vite__mapDeps([196,1])),meta:{d:17101152e5,l:"2024年3月11日",e:`
<h2>Spring控制翻转与依赖注入</h2>
<h2>Spring AOP概念与动机</h2>
<h2>依赖注入的基本原则</h2>
<h2>Spring factoryBean与beanFactory</h2>
<h2>Spring BeanFactory和ApplicationContext区别</h2>
<h2>Spring事务及传播机制</h2>
<h2>Redis的常见数据类型</h2>
<h2>设计模式原则</h2>
`,r:{minutes:.23,words:69},t:"基础级问题",O:1,y:"a"}}],["/ComputerBasics/DataStructure/02MO/mo02.html",{loader:()=>m(()=>import("./mo02.html-CPqdkFDN.js"),__vite__mapDeps([197,1])),meta:{d:17101152e5,l:"2024年3月11日",e:`
<h2>Spring ioc实现机制</h2>
<h2>Redis内存淘汰机制</h2>
<h2>Redis过期删除实现原理</h2>
<h2>Redis持久化机制</h2>
<h2>一致性哈希算法</h2>
<h2>Nginx的特性</h2>
<h2>常见的设计模式及应用</h2>
<h2>MQ的作用</h2>
`,r:{minutes:.21,words:64},t:"进阶级问题",O:2,y:"a"}}],["/ComputerBasics/DataStructure/02MO/mo03.html",{loader:()=>m(()=>import("./mo03.html-E1Js4usx.js"),__vite__mapDeps([198,1])),meta:{d:17101152e5,l:"2024年3月11日",e:`
<h2>AOP的实现原理</h2>
<h2>Spring Bean的生命周期</h2>
<h2>Redis数据结构的实现原理</h2>
<h2>Redis线程模型</h2>
<h2>缓存双写一致性问题</h2>
<h2>分布式事务CAP理论及2pc、3pc协议</h2>
<h2>分布式锁实现机制原理</h2>
<h2>领域驱动设计</h2>
<h2>Kafka的设计架构</h2>
<h2>Kafka的高性能设计</h2>
<h2>Kafka的持久化设计</h2>
`,r:{minutes:.32,words:97},t:"挑战级问题",O:3,y:"a"}}],["/ComputerBasics/OpreatingSystem/OSInterview/",{loader:()=>m(()=>import("./index.html-DJIZXCwb.js"),__vite__mapDeps([199,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["操作系统"],r:{minutes:.08,words:23},t:"操作系统面试题",y:"a"}}],["/ComputerBasics/OpreatingSystem/OSInterview/osi01.html",{loader:()=>m(()=>import("./osi01.html-cRABMthP.js"),__vite__mapDeps([200,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["操作系统"],e:`
<h2>进程、线程的区别</h2>
<p>首先介绍什么是进程，什么是线程？</p>
<p>进程是操作系统分配资源的基本单位，是一个程序的执行实例。<br>
线程是操作系统能够进行运算调度的最小单位，它被包含在进程之中，是进程中的实际运作单位。</p>
<ul>
<li>
<p>进程是资源（包括内存、打开的文件等）分配的单位，线程是 CPU 调度的单位；</p>
</li>
<li>
<p>进程拥有一个完整的资源平台，而线程只独享必不可少的资源，如寄存器和栈；</p>
</li>
<li>
<p>线程同样具有就绪、阻塞、执行三种基本状态，同样具有状态之间的转换关系；</p>
</li>
<li>
<p>线程能减少并发执行的时间和空间开销；</p>
</li>
<li>
<p>线程是进程划分成的更小的运行单位,一个进程在其执行的过程中可以产生多个线程。</p>
</li>
<li>
<p>线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同一进程中的线程极有可能会相互影响。</p>
</li>
<li>
<p>线程执行开销小，但不利于资源的管理和保护；而进程正相反。</p>
</li>
</ul>`,r:{minutes:1.23,words:370},t:"基础级问题",O:1,y:"a"}}],["/ComputerBasics/OpreatingSystem/OSInterview/osi02.html",{loader:()=>m(()=>import("./osi02.html-Cr_-vxja.js"),__vite__mapDeps([201,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["操作系统"],e:`
<h2>进程间通信方式</h2>
<h2>进程调度算法</h2>
<h2>死锁的处理策略和常用方法</h2>
<h2>用户态和内核态及其切换</h2>
<h2>硬链接和软连接的区别</h2>
<h2>Linux基础操作命令</h2>
`,r:{minutes:.23,words:69},t:"进阶级问题",O:2,y:"a"}}],["/ComputerBasics/OpreatingSystem/OSInterview/osi03.html",{loader:()=>m(()=>import("./osi03.html-Bh6kZ3UV.js"),__vite__mapDeps([202,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["操作系统"],e:`
<h2>IO多路复用(select、pol、epoll)</h2>
<h2>零拷贝技术</h2>
<h2>线程实现方式</h2>
<h2>Linux管道式操作命令</h2>
`,r:{minutes:.14,words:43},t:"挑战级问题",O:3,y:"a"}}],["/Database/Basic/Language/",{loader:()=>m(()=>import("./index.html-riBoyrbA.js"),__vite__mapDeps([203,1])),meta:{d:1681268086e3,e:`
`,r:{minutes:.03,words:8},t:"Language",y:"a"}}],["/Database/Basic/Principle/",{loader:()=>m(()=>import("./index.html-BFQH5LJF.js"),__vite__mapDeps([204,1])),meta:{d:1681268086e3,e:`
`,r:{minutes:5.67,words:1702},t:"数据库基础知识",y:"a"}}],["/Database/SQL/01Basics/",{loader:()=>m(()=>import("./index.html-C6da71DG.js"),__vite__mapDeps([205,1])),meta:{d:16807392e5,l:"2023年4月6日",c:["SQL基础"],e:`
`,r:{minutes:.06,words:17},t:"MySQL基础篇",O:1,y:"a"}}],["/Database/SQL/01Basics/sql01.html",{loader:()=>m(()=>import("./sql01.html-DZGhvL5y.js"),__vite__mapDeps([206,1])),meta:{d:16807392e5,l:"2023年4月6日",c:["SQL基础","DDL"],e:`
`,r:{minutes:1.44,words:432},t:"DDL",O:1,y:"a"}}],["/Database/SQL/01Basics/sql02.html",{loader:()=>m(()=>import("./sql02.html-BSuLsu8z.js"),__vite__mapDeps([207,1])),meta:{d:16807392e5,l:"2023年4月6日",c:["SQL基础","DML"],e:`
`,r:{minutes:1.33,words:399},t:"DML",O:2,y:"a"}}],["/Database/SQL/01Basics/sql03.html",{loader:()=>m(()=>import("./sql03.html-BA5dg6b_.js"),__vite__mapDeps([208,1])),meta:{d:16807392e5,l:"2023年4月6日",c:["SQL基础","DQL"],e:`
`,r:{minutes:5.42,words:1627},t:"DQL",O:3,y:"a"}}],["/Database/SQL/01Basics/sql04.html",{loader:()=>m(()=>import("./sql04.html-C0mK7xCd.js"),__vite__mapDeps([209,1])),meta:{d:16807392e5,l:"2023年4月6日",c:["SQL基础"],e:`
`,r:{minutes:12.75,words:3825},t:"MySQL高级",O:4,y:"a"}}],["/Database/SQL/02Advanced/",{loader:()=>m(()=>import("./index.html-Dw3Lwdu9.js"),__vite__mapDeps([210,1])),meta:{d:169992e7,l:"2023年11月14日",c:["SQL进阶"],e:`
`,r:{minutes:.06,words:19},t:"MySQL进阶篇",O:2,y:"a"}}],["/Database/SQL/02Advanced/advanced01.html",{loader:()=>m(()=>import("./advanced01.html-CjPiGXxG.js"),__vite__mapDeps([211,1])),meta:{d:169992e7,l:"2023年11月14日",c:["SQL进阶"],e:`
`,r:{minutes:.04,words:11},t:"01",O:1,y:"a"}}],["/Database/SQL/03OperationAndMaintenance/",{loader:()=>m(()=>import("./index.html-DCp9tkiJ.js"),__vite__mapDeps([212,1])),meta:{d:169992e7,l:"2023年11月14日",c:["SQL运维"],e:`
`,r:{minutes:.06,words:19},t:"MySQL运维篇",O:3,y:"a"}}],["/Database/SQL/03OperationAndMaintenance/oam01.html",{loader:()=>m(()=>import("./oam01.html-oLoRFy0y.js"),__vite__mapDeps([213,1])),meta:{d:169992e7,l:"2023年11月14日",c:["SQL运维"],e:`
`,r:{minutes:.04,words:11},t:"01",O:1,y:"a"}}],["/Projects/reggietakeout/01projectbasic/",{loader:()=>m(()=>import("./index.html-vcFZg0EJ.js"),__vite__mapDeps([214,1])),meta:{d:16811712e5,l:"2023年4月11日",r:{minutes:.05,words:14},t:"项目基础",O:1,y:"a"}}],["/Projects/reggietakeout/01projectbasic/day01.html",{loader:()=>m(()=>import("./day01.html-BqCoIctN.js"),__vite__mapDeps([215,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 开发环境搭建</h2>
<h3>1.1 数据库环境搭建</h3>
<h4>1.1.1 创建数据库</h4>
<p>以下两种方式中的任意一种，创建项目数据库</p>
<p>1.<strong>图形界面</strong></p>
<figure><figcaption> </figcaption></figure>
<blockquote>
<p>注意: 本项目数据库的字符串，选择 utf8mb4</p>
</blockquote>
<p>2.<strong>命令行</strong></p>
<figure><figcaption> </figcaption></figure>
<h4>1.1.2 数据库表导入</h4>`,r:{minutes:8.21,words:2463},t:"瑞吉外卖基础-Day01",O:1,y:"a"}}],["/Projects/reggietakeout/01projectbasic/day02.html",{loader:()=>m(()=>import("./day02.html-BiI0gD-G.js"),__vite__mapDeps([216,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 完善登录功能</h2>
<h3>1.1 问题分析</h3>
<p>1.<strong>目前现状</strong></p>
<p>用户如果不登录直接访问系统首页面，照样可以正常访问</p>
<figure><figcaption> </figcaption></figure>
<p>2.<strong>理想效果</strong></p>
<p>上述这种设计并不合理，只有登录成功后才可以访问系统中的页面，如果没有登录，访问系统中的任何界面都直接跳转到登录页面</p>
<figure><figcaption> </figcaption></figure>
<p>3.<strong>具体应该怎么实现呢？</strong></p>`,r:{minutes:17.41,words:5223},t:"瑞吉外卖基础-Day02",O:2,y:"a"}}],["/Projects/reggietakeout/01projectbasic/day03.html",{loader:()=>m(()=>import("./day03.html-F88VqzQQ.js"),__vite__mapDeps([217,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 公共字段自动填充</h2>
<h3>1.1 问题分析</h3>
<p>公共字段，也就是很多表中都会有这些字段</p>
<figure><figcaption> </figcaption></figure>
<blockquote>
<ol>
<li>在新增数据时，将 createTime、updateTime 设置为当前时间，createUser、updateUser设置为当前登录用户ID</li>
<li>在更新数据时，将 updateTime 设置为当前时间，updateUser 设置为当前登录用户ID</li>
</ol>
</blockquote>
<p>目前项目中处理这些字段都是在每一个业务方法中进行赋值操作</p>`,r:{minutes:15.97,words:4792},t:"瑞吉外卖基础-Day03",O:3,y:"a"}}],["/Projects/reggietakeout/01projectbasic/day04.html",{loader:()=>m(()=>import("./day04.html-BEW8_IJV.js"),__vite__mapDeps([218,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 文件上传下载</h2>
<h3>1.1 上传介绍</h3>
<h4>1.1.1 概述</h4>
<p>文件上传，也称为upload，是指将本地图片、视频、音频等文件上传到服务器上，可以供其他用户浏览或下载的过程</p>
<figure><figcaption> </figcaption></figure>
<p>文件上传时，对页面的form表单有如下要求：</p>
<table>
<thead>
<tr>
<th>表单属性</th>
<th>取值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>method</td>
<td>post</td>
<td>必须选择post方式提交</td>
</tr>
<tr>
<td>enctype</td>
<td>multipart/form-data</td>
<td>采用multipart格式上传文件</td>
</tr>
<tr>
<td>type</td>
<td>file</td>
<td>使用input的file控件上传</td>
</tr>
</tbody>
</table>`,r:{minutes:19.9,words:5969},t:"瑞吉外卖基础-Day04",O:4,y:"a"}}],["/Projects/reggietakeout/01projectbasic/day05.html",{loader:()=>m(()=>import("./day05.html-DB6kg-D8.js"),__vite__mapDeps([219,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 新增套餐</h2>
<h3>1.1 需求分析</h3>
<p>套餐就是菜品的集合</p>
<p>后台系统中可以管理套餐信息，通过新增套餐功能来添加一个新的套餐，在添加套餐时需要选择当前套餐所属的套餐分类和包含的菜品，并且需要上传套餐对应的图片，在移动端会按照套餐分类来展示对应的套餐</p>
<figure><figcaption> </figcaption></figure>
<h3>1.2 数据模型</h3>
<p>新增套餐，其实就是将新增页面录入的套餐信息插入到setmeal表，还需要向setmeal_dish表插入套餐和菜品关联数据<br>
所以在新增套餐时，涉及到两个表</p>`,r:{minutes:26.07,words:7821},t:"瑞吉外卖基础-Day05",O:5,y:"a"}}],["/Projects/reggietakeout/01projectbasic/day06.html",{loader:()=>m(()=>import("./day06.html-CPbk_9gs.js"),__vite__mapDeps([220,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 用户地址簿功能</h2>
<h3>1.1 需求分析</h3>
<p>地址簿：指的是移动端消费者用户的地址信息，用户登录成功后可以维护自己的地址信息，同一个用户可以有多个地址信息，但是只能有一个<strong>默认地址</strong></p>
<figure><figcaption> </figcaption></figure>
<figure><figcaption> </figcaption></figure>
<p>对于地址簿管理，需要实现以下几个功能：</p>
<ul>
<li>新增地址</li>
<li>地址列表查询</li>
<li>设置默认地址</li>
<li>编辑地址</li>
<li>删除地址</li>
</ul>`,r:{minutes:19.84,words:5952},t:"瑞吉外卖基础-Day06",O:6,y:"a"}}],["/Projects/reggietakeout/02git/",{loader:()=>m(()=>import("./index.html-DAA_srm6.js"),__vite__mapDeps([221,1])),meta:{d:16811712e5,l:"2023年4月11日",r:{minutes:.04,words:11},t:"Git",O:2,y:"a"}}],["/Projects/reggietakeout/02git/git01.html",{loader:()=>m(()=>import("./git01.html-nsNVW8JQ.js"),__vite__mapDeps([222,1])),meta:{d:16828128e5,l:"2023年4月30日",c:["Git"],e:`
<blockquote>
<p>掌握 Git 本地仓库操作命令<br>
掌握 Git 远程仓库操作命令<br>
掌握 Git 分支操作命令<br>
了解 Git 标签操作命令<br>
掌握 IDEA 中使用 Git 的方法</p>
</blockquote>
<h2>1. 前言</h2>
<h3>1.1 什么是Git</h3>
<p>Git是一个分布式版本控制工具，主要用于管理开发过程中的源代码文件（Java类、xml文件、html页面等），在软件开发过程中被广泛使用。</p>
<div class="hint-container tip">
<p class="hint-container-title">其他的版本控制工具</p>
<ul>
<li>SVN</li>
<li>CVS</li>
<li>VSS</li>
</ul>
</div>`,r:{minutes:7.22,words:2165},t:"Git-Day01",O:1,y:"a"}}],["/Projects/reggietakeout/03linux/",{loader:()=>m(()=>import("./index.html-3cgzB9uB.js"),__vite__mapDeps([223,1])),meta:{d:16811712e5,l:"2023年4月11日",r:{minutes:.04,words:11},t:"Linux",O:3,y:"a"}}],["/Projects/reggietakeout/03linux/day01.html",{loader:()=>m(()=>import("./day01.html-BLRlWhx6.js"),__vite__mapDeps([224,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖"],e:`
<h2>1. 前言</h2>
<h3>1.1 什么是Linux</h3>
<p>Linux是一套免费使用和自由传播的操作系统</p>
<h3>1.2 为什么要学Linux</h3>
<ol>
<li>
<p>企业用人要求</p>
<p>Linux操作系统提供了很多稳定的发行版本，广泛的应用在各种服务器操作系统领域，将来开发出来的项目，最终要上线运行，就需要将项目部署在Linux服务器中</p>
</li>
<li>
<p>个人发展需要</p>
<p>作为javaEE开发工程师，将来在企业中开发时会涉及到很多的数据库、中间件等技术，比如MySQL、Redis、MQ等技术，而这些应用软件大多都是需要安装在Linux系统中使用的</p>
<p>做为开发人员，是需要通过远程工具连接Linux操作系统，然后来操作这些软件的</p>
</li>
</ol>`,r:{minutes:13.62,words:4087},t:"Linux-Day01",O:1,y:"a"}}],["/Projects/reggietakeout/03linux/day02.html",{loader:()=>m(()=>import("./day02.html-ClBMgQe2.js"),__vite__mapDeps([225,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["瑞吉外卖","Linux"],e:`
<h2>网络常识</h2>
<p>桥接模式：使用你的真实网卡,相当于你的局域网中多了一台电脑</p>
<p>仅主机模式：通过虚拟网卡将消息转发给真机,真机再把消息发到外部局域网,虚拟机里面装的软件,外部机器访问不到</p>
<p>NAT模式：可以把虚拟机的端口映射到真机上,外部机器可以访问真机的ip和端口从而访问到虚拟机</p>
<h2>1. 软件安装</h2>
<p><a href="https://www.bilibili.com/video/BV13a411q753?p=132&amp;vd_source=8a1412d04d200fa33278d2b150f9b8df" target="_blank" rel="noopener noreferrer">软件安装视频地址</a></p>`,r:{minutes:2.18,words:654},t:"Linux-Day02",O:2,y:"a"}}],["/Projects/reggietakeout/04Redis/",{loader:()=>m(()=>import("./index.html-Cx4Rfm_Z.js"),__vite__mapDeps([226,1])),meta:{d:16811712e5,l:"2023年4月11日",r:{minutes:.04,words:11},t:"Redis",O:3,y:"a"}}],["/Projects/reggietakeout/04Redis/redis01.html",{loader:()=>m(()=>import("./redis01.html-B4DtKT7n.js"),__vite__mapDeps([227,1])),meta:{d:16828128e5,l:"2023年4月30日",c:["Redis"],e:`
<blockquote>
<ul>
<li>Redis入门</li>
<li>Redis数据类型</li>
<li>Redis常用命令</li>
<li>在Java中操作Redis</li>
</ul>
</blockquote>
<h2>1. 前言</h2>
<h3>1.1 什么是Redis</h3>
<p>Redis是一个基于<strong>内存</strong>的key-value结构数据库。Redis 是互联网技术领域使用最为广泛的存储中间件，它是「<strong>Re</strong>mote <strong>Di</strong>ctionary <strong>S</strong>ervice」的首字母缩写，也就是「远程字典服务」</p>`,r:{minutes:11.08,words:3323},t:"Redis-Day01",O:1,y:"a"}}],["/Tools/Git/01Manual/",{loader:()=>m(()=>import("./index.html-CE4Wqq_x.js"),__vite__mapDeps([228,1])),meta:{d:16841088e5,l:"2023年5月15日",r:{minutes:.04,words:12},t:"1 手册",y:"a"}}],["/Tools/Git/01Manual/manual01.html",{loader:()=>m(()=>import("./manual01.html-BmLb20xv.js"),__vite__mapDeps([229,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</p>
<figure><figcaption> </figcaption></figure>
<p>几个专用名词的译名</p>
<blockquote>
<ul>
<li>Workspace：工作区</li>
<li>Index / Stage：暂存区</li>
<li>Repository：仓库区（或本地仓库）</li>
<li>Remote：远程仓库</li>
</ul>
</blockquote>
<h2>1 新建代码库</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 在当前目录新建一个Git代码库</span>
$ <span class="token function">git</span> init

<span class="token comment"># 新建一个目录，将其初始化为Git代码库</span>
$ <span class="token function">git</span> init <span class="token punctuation">[</span>project-name<span class="token punctuation">]</span>

<span class="token comment"># 下载一个项目和它的整个代码历史</span>
$ <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token punctuation">]</span>
</code></pre></div>`,r:{minutes:5.94,words:1782},t:"1. 常用Git命令清单",O:1,y:"a"}}],["/Tools/Git/01Manual/manual02.html",{loader:()=>m(()=>import("./manual02.html-CvudO1XN.js"),__vite__mapDeps([230,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<h2>1 rebase分支合并</h2>
<h3>1.1 说明</h3>
<p>以下 <code>v2</code> 是某个需求的开发分支， <code>dev</code>是总的开发分支，<code>v2</code> 是基于<code>dev</code>分支签出的。</p>
<p>当完成<code>v2</code>的开发后，需要把代码合并到<code>dev</code>，我们可以使用<code>rebase</code>进行合并：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 首先将 v2 push到远程仓库</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">'xxx'</span>
<span class="token function">git</span> push origin v2

<span class="token comment"># 切换到 dev 拉取最新代码</span>
<span class="token function">git</span> checkout dev
<span class="token function">git</span> pull origin dev

<span class="token comment"># 切换到 v2</span>
<span class="token function">git</span> checkout v2
<span class="token function">git</span> rebase dev <span class="token comment"># 将 v2 的所有[commit] 变基到(应用到) dev</span>

<span class="token comment"># 切换到 dev</span>
<span class="token function">git</span> checkout dev
<span class="token function">git</span> merge v2  <span class="token comment"># 将 dev分支 快进合并 （此时 (HEAD -&gt; dev, v2) [commit] 两个分支指向同一个提交）</span>

<span class="token comment"># 查看 原v2的[commit]记录 是否在dev分支的最前面（变基成功会把v2的提交记录应用到dev分支的最前面）</span>
<span class="token function">git</span> log

<span class="token comment"># 如果到这一步发现有问题，尝试使用 git --abort中止变基，如果还是有问题的可以在dev分支上使用《后悔药》操作， 再到v2分支上使用《后悔药》操作，即可使两个分支都回退到 rebase变基 之前的状态</span>

<span class="token comment"># 试运行项目是否有问题</span>
<span class="token function">yarn</span> start

<span class="token function">git</span> status <span class="token comment"># 查看状态是否有问题</span>
<span class="token function">git</span> push origin dev <span class="token comment"># 推送到远程仓库的 dev</span>

</code></pre></div>`,r:{minutes:4.29,words:1288},t:"2. Git变基合并",O:2,y:"a"}}],["/Tools/Git/01Manual/manual03.html",{loader:()=>m(()=>import("./manual03.html-Cc0IpqlH.js"),__vite__mapDeps([231,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<figure><figcaption> </figcaption></figure>
`,r:{minutes:.06,words:17},t:"3. Git命令思维导图",O:3,y:"a"}}],["/Tools/Git/02DocumentNotes/",{loader:()=>m(()=>import("./index.html-CWJsqdVW.js"),__vite__mapDeps([232,1])),meta:{d:16841088e5,l:"2023年5月15日",r:{minutes:.05,words:14},t:"2 文档笔记",y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes01.html",{loader:()=>m(()=>import("./documentnotes01.html-vmcUuVLn.js"),__vite__mapDeps([233,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>官方文档（中文）：<a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener noreferrer">https://git-scm.com/book/zh/v2</a></p>
<h2>Git基础</h2>
<h3>全局配置</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">'your name'</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">'xxx@xx.com'</span>
</code></pre></div>`,r:{minutes:12.78,words:3834},t:"1. Git基础与命令",O:1,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes02.html",{loader:()=>m(()=>import("./documentnotes02.html-BkHIZ_Pi.js"),__vite__mapDeps([234,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>Git 处理分支的方式可谓是难以置信的轻量，创建新分支这一操作几乎能在瞬间完成，并且在不同分支之间的切换操作也是一样便捷。 与许多其它版本控制系统不同，Git 鼓励在工作流程中频繁地使用分支与合并，哪怕一天之内进行许多次。</p>
<h2>首次提交</h2>
<p>在进行提交操作时，Git 会保存一个提交对象（commit object）。</p>
<p>假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用 SHA-1 哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中 （Git 使用 <em>blob</em> 对象来保存它们），最终将校验和加入到暂存区域等待提交：</p>`,r:{minutes:6.35,words:1904},t:"2. Git分支-分支原理",O:2,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes03.html",{loader:()=>m(()=>import("./documentnotes03.html-Djztxwr5.js"),__vite__mapDeps([235,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>文档：<a href="https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6" target="_blank" rel="noopener noreferrer">Git 分支 - 分支的新建与合并</a></p>
<h2>创建分支并切换</h2>
<p>此时有一个需求需要在新的分支<code>iss53</code>上工作：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> iss53  <span class="token comment"># b表示branch</span>
</code></pre></div>`,r:{minutes:3.05,words:915},t:"3. Git分支的新建与合并-分支操作",O:3,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes04.html",{loader:()=>m(()=>import("./documentnotes04.html-5fBeGwsu.js"),__vite__mapDeps([236,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<h2>查看分支</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> branch
  iss53
* master  <span class="token comment"># 带星号*表示当前所在分支</span>
  testing
</code></pre></div><p><code>git branch</code> 命令不只是可以创建与删除分支。 如果不加任何参数运行它，会得到当前所有分支的一个列表。</p>`,r:{minutes:1.3,words:391},t:"4. Git分支管理-查看分支",O:4,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes05.html",{loader:()=>m(()=>import("./documentnotes05.html-CmxPPhiB.js"),__vite__mapDeps([237,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>文档：<a href="https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E4%BD%9C%E6%B5%81" target="_blank" rel="noopener noreferrer">Git分支开发工作流</a></p>
<h2>长期分支</h2>
<p>因为 Git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些主题分支合并入其他分支中。</p>`,r:{minutes:4.01,words:1204},t:"5. Git分支开发工作流",O:5,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes06.html",{loader:()=>m(()=>import("./documentnotes06.html-et8Vm_T8.js"),__vite__mapDeps([238,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p><strong>远程引用是对远程仓库的引用（指针）</strong>，包括分支、标签等等。</p>
<blockquote>
<p>远程分支本质上也是一个指针，指向远程地址</p>
</blockquote>
<h2>查看远程引用列表与信息</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-remote <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token comment"># 远程引用的完整列表</span>
<span class="token function">git</span> remote show <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token comment"># 远程分支的更多信息</span>
</code></pre></div>`,r:{minutes:10.85,words:3255},t:"6. Git分支-远程分支",O:6,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes07.html",{loader:()=>m(()=>import("./documentnotes07.html-Dgo-4eZ2.js"),__vite__mapDeps([239,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>在 Git 中整合来自不同分支的修改主要有两种方法：<code>merge</code> 以及 <code>rebase</code>。 在本节中我们将学习什么是“变基”，怎样使用“变基”，并将展示该操作的惊艳之处，以及指出在何种情况下你应避免使用它。</p>
<h2>变基的基本操作</h2>
<p>请回顾之前在 <a href="https://git-scm.com/book/zh/v2/ch00/_basic_merging" target="_blank" rel="noopener noreferrer">分支的合并</a> 中的一个例子，你会看到开发任务分叉到两个不同分支，又各自提交了更新。</p>`,r:{minutes:13.89,words:4166},t:"7. Git分支-变基",O:7,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes08.html",{loader:()=>m(()=>import("./documentnotes08.html-CPzQpGF0.js"),__vite__mapDeps([240,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>Git 能够以多种方式来指定单个提交、一组提交、或者一定范围内的提交。 了解它们并不是必需的，但是了解一下总没坏处。</p>
<p>修订版本指的是：<strong>提交</strong></p>
<h2>单个修订版本</h2>
<p>你可以通过任意一个提交的 40 个字符的完整 SHA-1 散列值来指定它， 不过还有很多更人性化的方式来做同样的事情。本节将会介绍获取单个提交的多种方法。</p>
<h2>简短的 SHA-1</h2>
<p>Git 十分智能，你只需要提供 SHA-1 的前几个字符就可以获得对应的那次提交， 当然你提供的 SHA-1 字符数量<strong>不得少于 4 个</strong>，并且没有歧义——也就是说， 当前对象数据库中没有其它对象以这段 SHA-1 开头。</p>`,r:{minutes:11.57,words:3472},t:"8. Git工具-查看修订版本",O:8,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes09.html",{loader:()=>m(()=>import("./documentnotes09.html-D82NeklJ.js"),__vite__mapDeps([241,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>本节中的几个交互式 Git 命令可以帮助你将文件的特定部分组合成提交。 当你在修改了大量文件后，希望这些改动能拆分为若干提交而不是混杂在一起成为一个提交时，这几个工具会非常有用。 通过这种方式，可以确保提交是逻辑上独立的变更集，同时也会使其他开发者在与你工作时很容易地审核。 如果运行 <code>git add</code> 时使用 <code>-i</code> 或者 <code>--interactive</code> 选项，Git 将会进入一个交互式终端模式，显示类似下面的东西：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-i</span>
           staged     unstaged path
  <span class="token number">1</span>:    unchanged        +0/-1 TODO
  <span class="token number">2</span>:    unchanged        +1/-1 index.html
  <span class="token number">3</span>:    unchanged        +5/-1 lib/simplegit.rb

*** Commands ***
  <span class="token number">1</span>: <span class="token punctuation">[</span>s<span class="token punctuation">]</span>tatus     <span class="token number">2</span>: <span class="token punctuation">[</span>u<span class="token punctuation">]</span>pdate      <span class="token number">3</span>: <span class="token punctuation">[</span>r<span class="token punctuation">]</span>evert     <span class="token number">4</span>: <span class="token punctuation">[</span>a<span class="token punctuation">]</span>dd untracked
  <span class="token number">5</span>: <span class="token punctuation">[</span>p<span class="token punctuation">]</span>atch      <span class="token number">6</span>: <span class="token punctuation">[</span>d<span class="token punctuation">]</span>iff        <span class="token number">7</span>: <span class="token punctuation">[</span>q<span class="token punctuation">]</span>uit       <span class="token number">8</span>: <span class="token punctuation">[</span>h<span class="token punctuation">]</span>elp
What now<span class="token operator">&gt;</span>
</code></pre></div>`,r:{minutes:5.15,words:1545},t:"9. Git工具-交互式暂存",O:9,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes10.html",{loader:()=>m(()=>import("./documentnotes10.html-Yfdan08v.js"),__vite__mapDeps([242,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>许多时候，在使用 Git 时，你可能想要修订提交历史。 Git 很棒的一点是它允许你在最后时刻做决定。 你可以在将暂存区内容提交前决定哪些文件进入提交，可以通过 <code>git stash</code> 来决定不与某些内容工作， 也可以重写已经发生的提交就像它们以另一种方式发生的一样。 这可能涉及改变提交的顺序，改变提交中的信息或修改文件，将提交压缩或是拆分， 或完全地移除提交——在将你的工作成果与他人共享之前。</p>
<p>在本节中，你可以学到如何完成这些工作，这样在与他人分享你的工作成果时你的提交历史将如你所愿地展示出来。</p>
<table>
<thead>
<tr>
<th>Note</th>
<th>在满意之前不要推送你的工作Git 的基本原则之一是，由于克隆中有很多工作是本地的，因此你可以 <strong>在本地</strong> 随便重写历史记录。 然而一旦推送了你的工作，那就完全是另一回事了，除非你有充分的理由进行更改，否则应该将推送的工作视为最终结果。 简而言之，在对它感到满意并准备与他人分享之前，应当避免推送你的工作。</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>`,r:{minutes:12.89,words:3868},t:"10. Git工具-重写历史",O:10,y:"a"}}],["/Tools/Git/02DocumentNotes/documentnotes11.html",{loader:()=>m(()=>import("./documentnotes11.html-BY56x5-S.js"),__vite__mapDeps([243,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["Git"],e:`
<p>在继续了解更专业的工具前，我们先探讨一下 Git 的 <code>reset</code> 和 <code>checkout</code> 命令。 在初遇的 Git 命令中，这两个是最让人困惑的。 它们能做很多事情，所以看起来我们很难真正地理解并恰当地运用它们。 针对这一点，我们先来做一个简单的比喻。</p>
<h2>三棵树</h2>
<p>理解 <code>reset</code> 和 <code>checkout</code> 的最简方法，就是以 Git 的思维框架（将其作为内容管理器）来管理三棵不同的树。 “树” 在我们这里的实际意思是 “文件的集合”，而不是指特定的数据结构。 （在某些情况下索引看起来并不像一棵树，不过我们现在的目的是用简单的方式思考它。）</p>`,r:{minutes:13.1,words:3931},t:"11. Git工具-重置揭密",O:11,y:"a"}}],["/Database/Basic/Principle/DBInterview/",{loader:()=>m(()=>import("./index.html-DqVRhM5q.js"),__vite__mapDeps([244,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["数据库"],r:{minutes:.07,words:21},t:"数据库面试题",y:"a"}}],["/Database/Basic/Principle/DBInterview/dbi01.html",{loader:()=>m(()=>import("./dbi01.html-CoOgYZGS.js"),__vite__mapDeps([245,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["数据库"],e:`
<h2>varchar和char的区别</h2>
<h2>drop \\ delete \\ truncate的区别</h2>
<h2>mysql存储引擎及比较</h2>
<h2>mysql索引类型</h2>
<h2>关系数据库事务特性</h2>
<h2>数据库事务隔离级别及解决的问题</h2>
<h2>数据库内连接、外连接、笛卡尔积</h2>
`,r:{minutes:.26,words:77},t:"基础级问题",O:1,y:"a"}}],["/Database/Basic/Principle/DBInterview/dbi02.html",{loader:()=>m(()=>import("./dbi02.html-DQNbP0vC.js"),__vite__mapDeps([246,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["数据库"],e:`
<h2>innodb的行锁种类，死锁原因及解法</h2>
<h2>innodb索引使用原则</h2>
<h2>自适应哈希索引</h2>
<h2>数据库崩溃恢复机制</h2>
`,r:{minutes:.17,words:51},t:"进阶级问题",O:2,y:"a"}}],["/Database/Basic/Principle/DBInterview/dbi03.html",{loader:()=>m(()=>import("./dbi03.html-DRCVHyqU.js"),__vite__mapDeps([247,1])),meta:{d:17100288e5,l:"2024年3月10日",c:["数据库"],e:`
<h2>mysql事务隔离级别实现原理</h2>
<h2>innodb索引实现原理及动机</h2>
<h2>查询语句中不同关键字的执行顺序</h2>
<h2>关系数据库范式与反范式及其取合</h2>
<h2>数据库主从架构及数据同步机制</h2>
<h2>SQL调优</h2>
<h2>倒排索引原理</h2>
`,r:{minutes:.3,words:89},t:"挑战级问题",O:3,y:"a"}}],["/404.html",{loader:()=>m(()=>import("./404.html-DydzzYiX.js"),__vite__mapDeps([248,1])),meta:{t:""}}],["/BackEnd/",{loader:()=>m(()=>import("./index.html-C5uv90cu.js"),__vite__mapDeps([249,1])),meta:{t:"Back End"}}],["/ComputerBasics/",{loader:()=>m(()=>import("./index.html-C4h7CRIP.js"),__vite__mapDeps([250,1])),meta:{t:"Computer Basics"}}],["/Database/",{loader:()=>m(()=>import("./index.html-DdbMxofd.js"),__vite__mapDeps([251,1])),meta:{t:"Database"}}],["/FrontEnd/",{loader:()=>m(()=>import("./index.html-DHvGxK5Q.js"),__vite__mapDeps([252,1])),meta:{t:"Front End"}}],["/Others/",{loader:()=>m(()=>import("./index.html-BYZ8Rgoo.js"),__vite__mapDeps([253,1])),meta:{t:"Others"}}],["/Tools/",{loader:()=>m(()=>import("./index.html-BhvKuIrt.js"),__vite__mapDeps([254,1])),meta:{t:"Tools"}}],["/Database/Basic/",{loader:()=>m(()=>import("./index.html-D45-8j5x.js"),__vite__mapDeps([255,1])),meta:{t:"Basic"}}],["/category/",{loader:()=>m(()=>import("./index.html-BcEVAmGE.js"),__vite__mapDeps([256,1])),meta:{t:"分类",I:!1}}],["/category/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/",{loader:()=>m(()=>import("./index.html-CrYRrAbQ.js"),__vite__mapDeps([257,1])),meta:{t:"个人简介 分类",I:!1}}],["/category/javase/",{loader:()=>m(()=>import("./index.html-BV74a2wL.js"),__vite__mapDeps([258,1])),meta:{t:"JavaSE 分类",I:!1}}],["/category/javaweb/",{loader:()=>m(()=>import("./index.html-DwTtcnq-.js"),__vite__mapDeps([259,1])),meta:{t:"JavaWeb 分类",I:!1}}],["/category/maven/",{loader:()=>m(()=>import("./index.html-DT13nA-q.js"),__vite__mapDeps([260,1])),meta:{t:"Maven 分类",I:!1}}],["/category/mybatis/",{loader:()=>m(()=>import("./index.html-CbZZxvQi.js"),__vite__mapDeps([261,1])),meta:{t:"MyBatis 分类",I:!1}}],["/category/jdbc/",{loader:()=>m(()=>import("./index.html-BsPJDoxh.js"),__vite__mapDeps([262,1])),meta:{t:"JDBC 分类",I:!1}}],["/category/lombok/",{loader:()=>m(()=>import("./index.html-D1_kZriU.js"),__vite__mapDeps([263,1])),meta:{t:"lombok 分类",I:!1}}],["/category/mybatisplus/",{loader:()=>m(()=>import("./index.html-DG7RtT85.js"),__vite__mapDeps([264,1])),meta:{t:"MyBatisPlus 分类",I:!1}}],["/category/spring/",{loader:()=>m(()=>import("./index.html-BSKLdqtg.js"),__vite__mapDeps([265,1])),meta:{t:"Spring 分类",I:!1}}],["/category/ioc/",{loader:()=>m(()=>import("./index.html-DX5gWcmo.js"),__vite__mapDeps([266,1])),meta:{t:"Ioc 分类",I:!1}}],["/category/di/",{loader:()=>m(()=>import("./index.html-0lMwa-yY.js"),__vite__mapDeps([267,1])),meta:{t:"DI 分类",I:!1}}],["/category/springboot/",{loader:()=>m(()=>import("./index.html-BbZcQSLa.js"),__vite__mapDeps([268,1])),meta:{t:"SpringBoot 分类",I:!1}}],["/category/springboot%E6%A1%88%E4%BE%8B/",{loader:()=>m(()=>import("./index.html-BoJQX7ES.js"),__vite__mapDeps([269,1])),meta:{t:"SpringBoot案例 分类",I:!1}}],["/category/%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/",{loader:()=>m(()=>import("./index.html-UZga_1yq.js"),__vite__mapDeps([270,1])),meta:{t:"文件存储 分类",I:!1}}],["/category/%E9%98%BF%E9%87%8C%E4%BA%91oss/",{loader:()=>m(()=>import("./index.html-Bx9krroT.js"),__vite__mapDeps([271,1])),meta:{t:"阿里云OSS 分类",I:!1}}],["/category/cookie/",{loader:()=>m(()=>import("./index.html-CqT1HgL7.js"),__vite__mapDeps([272,1])),meta:{t:"Cookie 分类",I:!1}}],["/category/session/",{loader:()=>m(()=>import("./index.html-DVOLmt5r.js"),__vite__mapDeps([273,1])),meta:{t:"Session 分类",I:!1}}],["/category/%E4%BB%A4%E7%89%8C%E6%8A%80%E6%9C%AF/",{loader:()=>m(()=>import("./index.html-aC0OSlG_.js"),__vite__mapDeps([274,1])),meta:{t:"令牌技术 分类",I:!1}}],["/category/aop/",{loader:()=>m(()=>import("./index.html-Bbe8KNfJ.js"),__vite__mapDeps([275,1])),meta:{t:"AOP 分类",I:!1}}],["/category/springcloud/",{loader:()=>m(()=>import("./index.html-CSQ2aWE4.js"),__vite__mapDeps([276,1])),meta:{t:"SpringCloud 分类",I:!1}}],["/category/enreka/",{loader:()=>m(()=>import("./index.html-D994XBqK.js"),__vite__mapDeps([277,1])),meta:{t:"Enreka 分类",I:!1}}],["/category/nacos/",{loader:()=>m(()=>import("./index.html-DlWK_8Yd.js"),__vite__mapDeps([278,1])),meta:{t:"Nacos 分类",I:!1}}],["/category/feign/",{loader:()=>m(()=>import("./index.html-DAmkVlxP.js"),__vite__mapDeps([279,1])),meta:{t:"Feign 分类",I:!1}}],["/category/gateway/",{loader:()=>m(()=>import("./index.html-Cc02_Ids.js"),__vite__mapDeps([280,1])),meta:{t:"Gateway 分类",I:!1}}],["/category/docker/",{loader:()=>m(()=>import("./index.html-D8MyjzeX.js"),__vite__mapDeps([281,1])),meta:{t:"Docker 分类",I:!1}}],["/category/rabbitmq/",{loader:()=>m(()=>import("./index.html-arCX56TI.js"),__vite__mapDeps([282,1])),meta:{t:"RabbitMQ 分类",I:!1}}],["/category/elasticsearch/",{loader:()=>m(()=>import("./index.html-DpZwi3Fq.js"),__vite__mapDeps([283,1])),meta:{t:"ElasticSearch 分类",I:!1}}],["/category/springmvc/",{loader:()=>m(()=>import("./index.html-wOXgXDiK.js"),__vite__mapDeps([284,1])),meta:{t:"SpringMVC 分类",I:!1}}],["/category/ssm/",{loader:()=>m(()=>import("./index.html-DwHRQb9z.js"),__vite__mapDeps([285,1])),meta:{t:"SSM 分类",I:!1}}],["/category/%E7%AE%97%E6%B3%95/",{loader:()=>m(()=>import("./index.html-BCegwl-d.js"),__vite__mapDeps([286,1])),meta:{t:"算法 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>m(()=>import("./index.html-DT9Mou88.js"),__vite__mapDeps([287,1])),meta:{t:"计算机网络 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>m(()=>import("./index.html-C7a3joKS.js"),__vite__mapDeps([288,1])),meta:{t:"数据结构 分类",I:!1}}],["/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{loader:()=>m(()=>import("./index.html-Dv7LR3ZY.js"),__vite__mapDeps([289,1])),meta:{t:"操作系统 分类",I:!1}}],["/category/sql%E5%9F%BA%E7%A1%80/",{loader:()=>m(()=>import("./index.html-CxE2wrRc.js"),__vite__mapDeps([290,1])),meta:{t:"SQL基础 分类",I:!1}}],["/category/front-end/",{loader:()=>m(()=>import("./index.html-B7dPKI9P.js"),__vite__mapDeps([291,1])),meta:{t:"Front End 分类",I:!1}}],["/category/css/",{loader:()=>m(()=>import("./index.html-DCSTNmlU.js"),__vite__mapDeps([292,1])),meta:{t:"CSS 分类",I:!1}}],["/category/html/",{loader:()=>m(()=>import("./index.html-Cejj1j9L.js"),__vite__mapDeps([293,1])),meta:{t:"HTML 分类",I:!1}}],["/category/javascript/",{loader:()=>m(()=>import("./index.html-DHQAEvga.js"),__vite__mapDeps([294,1])),meta:{t:"JavaScript 分类",I:!1}}],["/category/vue/",{loader:()=>m(()=>import("./index.html-DFvcBqd5.js"),__vite__mapDeps([295,1])),meta:{t:"Vue 分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>m(()=>import("./index.html-CRCxEXLU.js"),__vite__mapDeps([296,1])),meta:{t:"使用指南 分类",I:!1}}],["/category/%E9%A1%B9%E7%9B%AE/",{loader:()=>m(()=>import("./index.html-CZdbMq1g.js"),__vite__mapDeps([297,1])),meta:{t:"项目 分类",I:!1}}],["/category/%E6%B1%87%E5%AE%A2crm/",{loader:()=>m(()=>import("./index.html-JGjsUnA2.js"),__vite__mapDeps([298,1])),meta:{t:"汇客CRM 分类",I:!1}}],["/category/%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96/",{loader:()=>m(()=>import("./index.html-DAXvy0ko.js"),__vite__mapDeps([299,1])),meta:{t:"瑞吉外卖 分类",I:!1}}],["/category/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/",{loader:()=>m(()=>import("./index.html-C231TxT9.js"),__vite__mapDeps([300,1])),meta:{t:"苍穹外卖 分类",I:!1}}],["/category/%E5%A4%A9%E6%9C%BA%E5%AD%A6%E5%A0%82/",{loader:()=>m(()=>import("./index.html-ClAa1RLt.js"),__vite__mapDeps([301,1])),meta:{t:"天机学堂 分类",I:!1}}],["/category/git/",{loader:()=>m(()=>import("./index.html-4BshNhkH.js"),__vite__mapDeps([302,1])),meta:{t:"Git 分类",I:!1}}],["/category/markdown/",{loader:()=>m(()=>import("./index.html-DEig30ps.js"),__vite__mapDeps([303,1])),meta:{t:"Markdown 分类",I:!1}}],["/category/%E6%95%B0%E7%BB%84/",{loader:()=>m(()=>import("./index.html-CJk1MOQh.js"),__vite__mapDeps([304,1])),meta:{t:"数组 分类",I:!1}}],["/category/%E9%93%BE%E8%A1%A8/",{loader:()=>m(()=>import("./index.html-JnQTlnM8.js"),__vite__mapDeps([305,1])),meta:{t:"链表 分类",I:!1}}],["/category/%E5%93%88%E5%B8%8C%E8%A1%A8/",{loader:()=>m(()=>import("./index.html-gOABCAqB.js"),__vite__mapDeps([306,1])),meta:{t:"哈希表 分类",I:!1}}],["/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>m(()=>import("./index.html-DcNpoqZA.js"),__vite__mapDeps([307,1])),meta:{t:"字符串 分类",I:!1}}],["/category/%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95/",{loader:()=>m(()=>import("./index.html-BadU7Iii.js"),__vite__mapDeps([308,1])),meta:{t:"双指针法 分类",I:!1}}],["/category/%E5%8F%8C%E6%8C%87%E9%92%88/",{loader:()=>m(()=>import("./index.html-DvsUq7fG.js"),__vite__mapDeps([309,1])),meta:{t:"双指针 分类",I:!1}}],["/category/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/",{loader:()=>m(()=>import("./index.html-BllgKmwA.js"),__vite__mapDeps([310,1])),meta:{t:"栈与队列 分类",I:!1}}],["/category/%E4%BA%8C%E5%8F%89%E6%A0%91/",{loader:()=>m(()=>import("./index.html-CDMcEuvk.js"),__vite__mapDeps([311,1])),meta:{t:"二叉树 分类",I:!1}}],["/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/",{loader:()=>m(()=>import("./index.html-CdSCu9X7.js"),__vite__mapDeps([312,1])),meta:{t:"回溯算法 分类",I:!1}}],["/category/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",{loader:()=>m(()=>import("./index.html-CzQU24pq.js"),__vite__mapDeps([313,1])),meta:{t:"贪心算法 分类",I:!1}}],["/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",{loader:()=>m(()=>import("./index.html-0cHf2kwS.js"),__vite__mapDeps([314,1])),meta:{t:"动态规划 分类",I:!1}}],["/category/%E5%8D%95%E8%B0%83%E6%A0%88/",{loader:()=>m(()=>import("./index.html-BwZS1dRT.js"),__vite__mapDeps([315,1])),meta:{t:"单调栈 分类",I:!1}}],["/category/%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B8%8E%E5%85%B6%E4%BB%96%E4%B8%93%E4%B8%9A%E6%8A%80%E8%83%BD/",{loader:()=>m(()=>import("./index.html-Ba6y8zaD.js"),__vite__mapDeps([316,1])),meta:{t:"中间件与其他专业技能 分类",I:!1}}],["/category/ddl/",{loader:()=>m(()=>import("./index.html-VzxLAqRZ.js"),__vite__mapDeps([317,1])),meta:{t:"DDL 分类",I:!1}}],["/category/dml/",{loader:()=>m(()=>import("./index.html-D5arooag.js"),__vite__mapDeps([318,1])),meta:{t:"DML 分类",I:!1}}],["/category/dql/",{loader:()=>m(()=>import("./index.html-DA_p439G.js"),__vite__mapDeps([319,1])),meta:{t:"DQL 分类",I:!1}}],["/category/sql%E8%BF%9B%E9%98%B6/",{loader:()=>m(()=>import("./index.html-B0uXckbF.js"),__vite__mapDeps([320,1])),meta:{t:"SQL进阶 分类",I:!1}}],["/category/sql%E8%BF%90%E7%BB%B4/",{loader:()=>m(()=>import("./index.html-B3vNR-Om.js"),__vite__mapDeps([321,1])),meta:{t:"SQL运维 分类",I:!1}}],["/category/linux/",{loader:()=>m(()=>import("./index.html-BvM4yeAk.js"),__vite__mapDeps([322,1])),meta:{t:"Linux 分类",I:!1}}],["/category/redis/",{loader:()=>m(()=>import("./index.html-CsB4Iw-q.js"),__vite__mapDeps([323,1])),meta:{t:"Redis 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>m(()=>import("./index.html-CDy05Ly4.js"),__vite__mapDeps([324,1])),meta:{t:"数据库 分类",I:!1}}],["/tag/",{loader:()=>m(()=>import("./index.html-D5Ju04Ie.js"),__vite__mapDeps([325,1])),meta:{t:"标签",I:!1}}],["/tag/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/",{loader:()=>m(()=>import("./index.html-BGbKkSwC.js"),__vite__mapDeps([326,1])),meta:{t:"标签: 个人简介",I:!1}}],["/tag/%E5%AE%BD%E5%B8%A6/",{loader:()=>m(()=>import("./index.html-BCx_3m1K.js"),__vite__mapDeps([327,1])),meta:{t:"标签: 宽带",I:!1}}],["/tag/%E7%A6%81%E7%94%A8/",{loader:()=>m(()=>import("./index.html-BsRBgHLZ.js"),__vite__mapDeps([328,1])),meta:{t:"标签: 禁用",I:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>m(()=>import("./index.html-DLT37-Py.js"),__vite__mapDeps([329,1])),meta:{t:"标签: 页面配置",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>m(()=>import("./index.html-N_s1fqxN.js"),__vite__mapDeps([330,1])),meta:{t:"标签: 使用指南",I:!1}}],["/tag/%E8%B5%84%E6%BA%90%E6%95%B4%E5%90%88/",{loader:()=>m(()=>import("./index.html-Dbj-LoCu.js"),__vite__mapDeps([331,1])),meta:{t:"标签: 资源整合",I:!1}}],["/article/",{loader:()=>m(()=>import("./index.html-CHte0ihd.js"),__vite__mapDeps([332,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>m(()=>import("./index.html-Ca25tD9s.js"),__vite__mapDeps([333,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>m(()=>import("./index.html-Ct6yjA5U.js"),__vite__mapDeps([334,1])),meta:{t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.3.2
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const La=typeof document<"u";function g0(n){return n.__esModule||n[Symbol.toStringTag]==="Module"}const fn=Object.assign;function Fe(n,s){const a={};for(const t in s){const e=s[t];a[t]=_s(e)?e.map(n):n(e)}return a}const et=()=>{},_s=Array.isArray,kr=/#/g,v0=/&/g,y0=/\//g,b0=/=/g,_0=/\?/g,dr=/\+/g,w0=/%5B/g,E0=/%5D/g,mr=/%5E/g,S0=/%60/g,hr=/%7B/g,A0=/%7C/g,fr=/%7D/g,L0=/%20/g;function np(n){return encodeURI(""+n).replace(A0,"|").replace(w0,"[").replace(E0,"]")}function x0(n){return np(n).replace(hr,"{").replace(fr,"}").replace(mr,"^")}function mo(n){return np(n).replace(dr,"%2B").replace(L0,"+").replace(kr,"%23").replace(v0,"%26").replace(S0,"`").replace(hr,"{").replace(fr,"}").replace(mr,"^")}function C0(n){return mo(n).replace(b0,"%3D")}function O0(n){return np(n).replace(kr,"%23").replace(_0,"%3F")}function B0(n){return n==null?"":O0(n).replace(y0,"%2F")}function mt(n){try{return decodeURIComponent(""+n)}catch{}return""+n}const I0=/\/$/,T0=n=>n.replace(I0,"");function qe(n,s,a="/"){let t,e={},o="",c="";const l=s.indexOf("#");let r=s.indexOf("?");return l<r&&l>=0&&(r=-1),r>-1&&(t=s.slice(0,r),o=s.slice(r+1,l>-1?l:s.length),e=n(o)),l>-1&&(t=t||s.slice(0,l),c=s.slice(l,s.length)),t=M0(t??s,a),{fullPath:t+(o&&"?")+o+c,path:t,query:e,hash:mt(c)}}function P0(n,s){const a=s.query?n(s.query):"";return s.path+(a&&"?")+a+(s.hash||"")}function gc(n,s){return!s||!n.toLowerCase().startsWith(s.toLowerCase())?n:n.slice(s.length)||"/"}function D0(n,s,a){const t=s.matched.length-1,e=a.matched.length-1;return t>-1&&t===e&&ja(s.matched[t],a.matched[e])&&gr(s.params,a.params)&&n(s.query)===n(a.query)&&s.hash===a.hash}function ja(n,s){return(n.aliasOf||n)===(s.aliasOf||s)}function gr(n,s){if(Object.keys(n).length!==Object.keys(s).length)return!1;for(const a in n)if(!R0(n[a],s[a]))return!1;return!0}function R0(n,s){return _s(n)?vc(n,s):_s(s)?vc(s,n):n===s}function vc(n,s){return _s(s)?n.length===s.length&&n.every((a,t)=>a===s[t]):n.length===1&&n[0]===s}function M0(n,s){if(n.startsWith("/"))return n;if(!n)return s;const a=s.split("/"),t=n.split("/"),e=t[t.length-1];(e===".."||e===".")&&t.push("");let o=a.length-1,c,l;for(c=0;c<t.length;c++)if(l=t[c],l!==".")if(l==="..")o>1&&o--;else break;return a.slice(0,o).join("/")+"/"+t.slice(c).join("/")}var ht;(function(n){n.pop="pop",n.push="push"})(ht||(ht={}));var ot;(function(n){n.back="back",n.forward="forward",n.unknown=""})(ot||(ot={}));function j0(n){if(!n)if(La){const s=document.querySelector("base");n=s&&s.getAttribute("href")||"/",n=n.replace(/^\w+:\/\/[^\/]+/,"")}else n="/";return n[0]!=="/"&&n[0]!=="#"&&(n="/"+n),T0(n)}const V0=/^[^#]+#/;function N0(n,s){return n.replace(V0,"#")+s}function $0(n,s){const a=document.documentElement.getBoundingClientRect(),t=n.getBoundingClientRect();return{behavior:s.behavior,left:t.left-a.left-(s.left||0),top:t.top-a.top-(s.top||0)}}const _e=()=>({left:window.scrollX,top:window.scrollY});function H0(n){let s;if("el"in n){const a=n.el,t=typeof a=="string"&&a.startsWith("#"),e=typeof a=="string"?t?document.getElementById(a.slice(1)):document.querySelector(a):a;if(!e)return;s=$0(e,n)}else s=n;"scrollBehavior"in document.documentElement.style?window.scrollTo(s):window.scrollTo(s.left!=null?s.left:window.scrollX,s.top!=null?s.top:window.scrollY)}function yc(n,s){return(history.state?history.state.position-s:-1)+n}const ho=new Map;function F0(n,s){ho.set(n,s)}function q0(n){const s=ho.get(n);return ho.delete(n),s}let z0=()=>location.protocol+"//"+location.host;function vr(n,s){const{pathname:a,search:t,hash:e}=s,o=n.indexOf("#");if(o>-1){let l=e.includes(n.slice(o))?n.slice(o).length:1,r=e.slice(l);return r[0]!=="/"&&(r="/"+r),gc(r,"")}return gc(a,n)+t+e}function G0(n,s,a,t){let e=[],o=[],c=null;const l=({state:d})=>{const h=vr(n,location),g=a.value,w=s.value;let E=0;if(d){if(a.value=h,s.value=d,c&&c===g){c=null;return}E=w?d.position-w.position:0}else t(h);e.forEach(b=>{b(a.value,g,{delta:E,type:ht.pop,direction:E?E>0?ot.forward:ot.back:ot.unknown})})};function r(){c=a.value}function i(d){e.push(d);const h=()=>{const g=e.indexOf(d);g>-1&&e.splice(g,1)};return o.push(h),h}function u(){const{history:d}=window;d.state&&d.replaceState(fn({},d.state,{scroll:_e()}),"")}function k(){for(const d of o)d();o=[],window.removeEventListener("popstate",l),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",l),window.addEventListener("beforeunload",u,{passive:!0}),{pauseListeners:r,listen:i,destroy:k}}function bc(n,s,a,t=!1,e=!1){return{back:n,current:s,forward:a,replaced:t,position:window.history.length,scroll:e?_e():null}}function J0(n){const{history:s,location:a}=window,t={value:vr(n,a)},e={value:s.state};e.value||o(t.value,{back:null,current:t.value,forward:null,position:s.length-1,replaced:!0,scroll:null},!0);function o(r,i,u){const k=n.indexOf("#"),d=k>-1?(a.host&&document.querySelector("base")?n:n.slice(k))+r:z0()+n+r;try{s[u?"replaceState":"pushState"](i,"",d),e.value=i}catch(h){console.error(h),a[u?"replace":"assign"](d)}}function c(r,i){const u=fn({},s.state,bc(e.value.back,r,e.value.forward,!0),i,{position:e.value.position});o(r,u,!0),t.value=r}function l(r,i){const u=fn({},e.value,s.state,{forward:r,scroll:_e()});o(u.current,u,!0);const k=fn({},bc(t.value,r,null),{position:u.position+1},i);o(r,k,!1),t.value=r}return{location:t,state:e,push:l,replace:c}}function U0(n){n=j0(n);const s=J0(n),a=G0(n,s.state,s.location,s.replace);function t(o,c=!0){c||a.pauseListeners(),history.go(o)}const e=fn({location:"",base:n,go:t,createHref:N0.bind(null,n)},s,a);return Object.defineProperty(e,"location",{enumerable:!0,get:()=>s.location.value}),Object.defineProperty(e,"state",{enumerable:!0,get:()=>s.state.value}),e}function W0(n){return typeof n=="string"||n&&typeof n=="object"}function yr(n){return typeof n=="string"||typeof n=="symbol"}const js={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},br=Symbol("");var _c;(function(n){n[n.aborted=4]="aborted",n[n.cancelled=8]="cancelled",n[n.duplicated=16]="duplicated"})(_c||(_c={}));function Va(n,s){return fn(new Error,{type:n,[br]:!0},s)}function Rs(n,s){return n instanceof Error&&br in n&&(s==null||!!(n.type&s))}const wc="[^/]+?",Q0={sensitive:!1,strict:!1,start:!0,end:!0},K0=/[.+*?^${}()[\]/\\]/g;function Y0(n,s){const a=fn({},Q0,s),t=[];let e=a.start?"^":"";const o=[];for(const i of n){const u=i.length?[]:[90];a.strict&&!i.length&&(e+="/");for(let k=0;k<i.length;k++){const d=i[k];let h=40+(a.sensitive?.25:0);if(d.type===0)k||(e+="/"),e+=d.value.replace(K0,"\\$&"),h+=40;else if(d.type===1){const{value:g,repeatable:w,optional:E,regexp:b}=d;o.push({name:g,repeatable:w,optional:E});const S=b||wc;if(S!==wc){h+=10;try{new RegExp(`(${S})`)}catch(L){throw new Error(`Invalid custom RegExp for param "${g}" (${S}): `+L.message)}}let y=w?`((?:${S})(?:/(?:${S}))*)`:`(${S})`;k||(y=E&&i.length<2?`(?:/${y})`:"/"+y),E&&(y+="?"),e+=y,h+=20,E&&(h+=-8),w&&(h+=-20),S===".*"&&(h+=-50)}u.push(h)}t.push(u)}if(a.strict&&a.end){const i=t.length-1;t[i][t[i].length-1]+=.7000000000000001}a.strict||(e+="/?"),a.end?e+="$":a.strict&&(e+="(?:/|$)");const c=new RegExp(e,a.sensitive?"":"i");function l(i){const u=i.match(c),k={};if(!u)return null;for(let d=1;d<u.length;d++){const h=u[d]||"",g=o[d-1];k[g.name]=h&&g.repeatable?h.split("/"):h}return k}function r(i){let u="",k=!1;for(const d of n){(!k||!u.endsWith("/"))&&(u+="/"),k=!1;for(const h of d)if(h.type===0)u+=h.value;else if(h.type===1){const{value:g,repeatable:w,optional:E}=h,b=g in i?i[g]:"";if(_s(b)&&!w)throw new Error(`Provided param "${g}" is an array but it is not repeatable (* or + modifiers)`);const S=_s(b)?b.join("/"):b;if(!S)if(E)d.length<2&&(u.endsWith("/")?u=u.slice(0,-1):k=!0);else throw new Error(`Missing required param "${g}"`);u+=S}}return u||"/"}return{re:c,score:t,keys:o,parse:l,stringify:r}}function X0(n,s){let a=0;for(;a<n.length&&a<s.length;){const t=s[a]-n[a];if(t)return t;a++}return n.length<s.length?n.length===1&&n[0]===80?-1:1:n.length>s.length?s.length===1&&s[0]===80?1:-1:0}function Z0(n,s){let a=0;const t=n.score,e=s.score;for(;a<t.length&&a<e.length;){const o=X0(t[a],e[a]);if(o)return o;a++}if(Math.abs(e.length-t.length)===1){if(Ec(t))return 1;if(Ec(e))return-1}return e.length-t.length}function Ec(n){const s=n[n.length-1];return n.length>0&&s[s.length-1]<0}const nm={type:0,value:""},sm=/[a-zA-Z0-9_]/;function am(n){if(!n)return[[]];if(n==="/")return[[nm]];if(!n.startsWith("/"))throw new Error(`Invalid path "${n}"`);function s(h){throw new Error(`ERR (${a})/"${i}": ${h}`)}let a=0,t=a;const e=[];let o;function c(){o&&e.push(o),o=[]}let l=0,r,i="",u="";function k(){i&&(a===0?o.push({type:0,value:i}):a===1||a===2||a===3?(o.length>1&&(r==="*"||r==="+")&&s(`A repeatable param (${i}) must be alone in its segment. eg: '/:ids+.`),o.push({type:1,value:i,regexp:u,repeatable:r==="*"||r==="+",optional:r==="*"||r==="?"})):s("Invalid state to consume buffer"),i="")}function d(){i+=r}for(;l<n.length;){if(r=n[l++],r==="\\"&&a!==2){t=a,a=4;continue}switch(a){case 0:r==="/"?(i&&k(),c()):r===":"?(k(),a=1):d();break;case 4:d(),a=t;break;case 1:r==="("?a=2:sm.test(r)?d():(k(),a=0,r!=="*"&&r!=="?"&&r!=="+"&&l--);break;case 2:r===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+r:a=3:u+=r;break;case 3:k(),a=0,r!=="*"&&r!=="?"&&r!=="+"&&l--,u="";break;default:s("Unknown state");break}}return a===2&&s(`Unfinished custom RegExp for param "${i}"`),k(),c(),e}function tm(n,s,a){const t=Y0(am(n.path),a),e=fn(t,{record:n,parent:s,children:[],alias:[]});return s&&!e.record.aliasOf==!s.record.aliasOf&&s.children.push(e),e}function em(n,s){const a=[],t=new Map;s=Lc({strict:!1,end:!0,sensitive:!1},s);function e(u){return t.get(u)}function o(u,k,d){const h=!d,g=om(u);g.aliasOf=d&&d.record;const w=Lc(s,u),E=[g];if("alias"in u){const y=typeof u.alias=="string"?[u.alias]:u.alias;for(const L of y)E.push(fn({},g,{components:d?d.record.components:g.components,path:L,aliasOf:d?d.record:g}))}let b,S;for(const y of E){const{path:L}=y;if(k&&L[0]!=="/"){const V=k.record.path,T=V[V.length-1]==="/"?"":"/";y.path=k.record.path+(L&&T+L)}if(b=tm(y,k,w),d?d.alias.push(b):(S=S||b,S!==b&&S.alias.push(b),h&&u.name&&!Ac(b)&&c(u.name)),g.children){const V=g.children;for(let T=0;T<V.length;T++)o(V[T],b,d&&d.children[T])}d=d||b,(b.record.components&&Object.keys(b.record.components).length||b.record.name||b.record.redirect)&&r(b)}return S?()=>{c(S)}:et}function c(u){if(yr(u)){const k=t.get(u);k&&(t.delete(u),a.splice(a.indexOf(k),1),k.children.forEach(c),k.alias.forEach(c))}else{const k=a.indexOf(u);k>-1&&(a.splice(k,1),u.record.name&&t.delete(u.record.name),u.children.forEach(c),u.alias.forEach(c))}}function l(){return a}function r(u){let k=0;for(;k<a.length&&Z0(u,a[k])>=0&&(u.record.path!==a[k].record.path||!_r(u,a[k]));)k++;a.splice(k,0,u),u.record.name&&!Ac(u)&&t.set(u.record.name,u)}function i(u,k){let d,h={},g,w;if("name"in u&&u.name){if(d=t.get(u.name),!d)throw Va(1,{location:u});w=d.record.name,h=fn(Sc(k.params,d.keys.filter(S=>!S.optional).concat(d.parent?d.parent.keys.filter(S=>S.optional):[]).map(S=>S.name)),u.params&&Sc(u.params,d.keys.map(S=>S.name))),g=d.stringify(h)}else if(u.path!=null)g=u.path,d=a.find(S=>S.re.test(g)),d&&(h=d.parse(g),w=d.record.name);else{if(d=k.name?t.get(k.name):a.find(S=>S.re.test(k.path)),!d)throw Va(1,{location:u,currentLocation:k});w=d.record.name,h=fn({},k.params,u.params),g=d.stringify(h)}const E=[];let b=d;for(;b;)E.unshift(b.record),b=b.parent;return{name:w,path:g,params:h,matched:E,meta:cm(E)}}return n.forEach(u=>o(u)),{addRoute:o,resolve:i,removeRoute:c,getRoutes:l,getRecordMatcher:e}}function Sc(n,s){const a={};for(const t of s)t in n&&(a[t]=n[t]);return a}function om(n){return{path:n.path,redirect:n.redirect,name:n.name,meta:n.meta||{},aliasOf:void 0,beforeEnter:n.beforeEnter,props:pm(n),children:n.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in n?n.components||null:n.component&&{default:n.component}}}function pm(n){const s={},a=n.props||!1;if("component"in n)s.default=a;else for(const t in n.components)s[t]=typeof a=="object"?a[t]:a;return s}function Ac(n){for(;n;){if(n.record.aliasOf)return!0;n=n.parent}return!1}function cm(n){return n.reduce((s,a)=>fn(s,a.meta),{})}function Lc(n,s){const a={};for(const t in n)a[t]=t in s?s[t]:n[t];return a}function _r(n,s){return s.children.some(a=>a===n||_r(n,a))}function lm(n){const s={};if(n===""||n==="?")return s;const t=(n[0]==="?"?n.slice(1):n).split("&");for(let e=0;e<t.length;++e){const o=t[e].replace(dr," "),c=o.indexOf("="),l=mt(c<0?o:o.slice(0,c)),r=c<0?null:mt(o.slice(c+1));if(l in s){let i=s[l];_s(i)||(i=s[l]=[i]),i.push(r)}else s[l]=r}return s}function xc(n){let s="";for(let a in n){const t=n[a];if(a=C0(a),t==null){t!==void 0&&(s+=(s.length?"&":"")+a);continue}(_s(t)?t.map(o=>o&&mo(o)):[t&&mo(t)]).forEach(o=>{o!==void 0&&(s+=(s.length?"&":"")+a,o!=null&&(s+="="+o))})}return s}function rm(n){const s={};for(const a in n){const t=n[a];t!==void 0&&(s[a]=_s(t)?t.map(e=>e==null?null:""+e):t==null?t:""+t)}return s}const im=Symbol(""),Cc=Symbol(""),we=Symbol(""),sp=Symbol(""),fo=Symbol("");function Ua(){let n=[];function s(t){return n.push(t),()=>{const e=n.indexOf(t);e>-1&&n.splice(e,1)}}function a(){n=[]}return{add:s,list:()=>n.slice(),reset:a}}function na(n,s,a,t,e,o=c=>c()){const c=t&&(t.enterCallbacks[e]=t.enterCallbacks[e]||[]);return()=>new Promise((l,r)=>{const i=d=>{d===!1?r(Va(4,{from:a,to:s})):d instanceof Error?r(d):W0(d)?r(Va(2,{from:s,to:d})):(c&&t.enterCallbacks[e]===c&&typeof d=="function"&&c.push(d),l())},u=o(()=>n.call(t&&t.instances[e],s,a,i));let k=Promise.resolve(u);n.length<3&&(k=k.then(i)),k.catch(d=>r(d))})}function ze(n,s,a,t,e=o=>o()){const o=[];for(const c of n)for(const l in c.components){let r=c.components[l];if(!(s!=="beforeRouteEnter"&&!c.instances[l]))if(um(r)){const u=(r.__vccOpts||r)[s];u&&o.push(na(u,a,t,c,l,e))}else{let i=r();o.push(()=>i.then(u=>{if(!u)return Promise.reject(new Error(`Couldn't resolve component "${l}" at "${c.path}"`));const k=g0(u)?u.default:u;c.components[l]=k;const h=(k.__vccOpts||k)[s];return h&&na(h,a,t,c,l,e)()}))}}return o}function um(n){return typeof n=="object"||"displayName"in n||"props"in n||"__vccOpts"in n}function Oc(n){const s=yn(we),a=yn(sp),t=_(()=>{const r=ga(n.to);return s.resolve(r)}),e=_(()=>{const{matched:r}=t.value,{length:i}=r,u=r[i-1],k=a.matched;if(!u||!k.length)return-1;const d=k.findIndex(ja.bind(null,u));if(d>-1)return d;const h=Bc(r[i-2]);return i>1&&Bc(u)===h&&k[k.length-1].path!==h?k.findIndex(ja.bind(null,r[i-2])):d}),o=_(()=>e.value>-1&&hm(a.params,t.value.params)),c=_(()=>e.value>-1&&e.value===a.matched.length-1&&gr(a.params,t.value.params));function l(r={}){return mm(r)?s[ga(n.replace)?"replace":"push"](ga(n.to)).catch(et):Promise.resolve()}return{route:t,href:_(()=>t.value.href),isActive:o,isExactActive:c,navigate:l}}const km=j({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Oc,setup(n,{slots:s}){const a=Et(Oc(n)),{options:t}=yn(we),e=_(()=>({[Ic(n.activeClass,t.linkActiveClass,"router-link-active")]:a.isActive,[Ic(n.exactActiveClass,t.linkExactActiveClass,"router-link-exact-active")]:a.isExactActive}));return()=>{const o=s.default&&s.default(a);return n.custom?o:p("a",{"aria-current":a.isExactActive?n.ariaCurrentValue:null,href:a.href,onClick:a.navigate,class:e.value},o)}}}),dm=km;function mm(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)&&!n.defaultPrevented&&!(n.button!==void 0&&n.button!==0)){if(n.currentTarget&&n.currentTarget.getAttribute){const s=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(s))return}return n.preventDefault&&n.preventDefault(),!0}}function hm(n,s){for(const a in s){const t=s[a],e=n[a];if(typeof t=="string"){if(t!==e)return!1}else if(!_s(e)||e.length!==t.length||t.some((o,c)=>o!==e[c]))return!1}return!0}function Bc(n){return n?n.aliasOf?n.aliasOf.path:n.path:""}const Ic=(n,s,a)=>n??s??a,fm=j({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(n,{attrs:s,slots:a}){const t=yn(fo),e=_(()=>n.route||t.value),o=yn(Cc,0),c=_(()=>{let i=ga(o);const{matched:u}=e.value;let k;for(;(k=u[i])&&!k.components;)i++;return i}),l=_(()=>e.value.matched[c.value]);ds(Cc,_(()=>c.value+1)),ds(im,l),ds(fo,e);const r=J();return en(()=>[r.value,l.value,n.name],([i,u,k],[d,h,g])=>{u&&(u.instances[k]=i,h&&h!==u&&i&&i===d&&(u.leaveGuards.size||(u.leaveGuards=h.leaveGuards),u.updateGuards.size||(u.updateGuards=h.updateGuards))),i&&u&&(!h||!ja(u,h)||!d)&&(u.enterCallbacks[k]||[]).forEach(w=>w(i))},{flush:"post"}),()=>{const i=e.value,u=n.name,k=l.value,d=k&&k.components[u];if(!d)return Tc(a.default,{Component:d,route:i});const h=k.props[u],g=h?h===!0?i.params:typeof h=="function"?h(i):h:null,E=p(d,fn({},g,s,{onVnodeUnmounted:b=>{b.component.isUnmounted&&(k.instances[u]=null)},ref:r}));return Tc(a.default,{Component:E,route:i})||E}}});function Tc(n,s){if(!n)return null;const a=n(s);return a.length===1?a[0]:a}const gm=fm;function vm(n){const s=em(n.routes,n),a=n.parseQuery||lm,t=n.stringifyQuery||xc,e=n.history,o=Ua(),c=Ua(),l=Ua(),r=Bn(js);let i=js;La&&n.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=Fe.bind(null,x=>""+x),k=Fe.bind(null,B0),d=Fe.bind(null,mt);function h(x,q){let $,K;return yr(x)?($=s.getRecordMatcher(x),K=q):K=x,s.addRoute(K,$)}function g(x){const q=s.getRecordMatcher(x);q&&s.removeRoute(q)}function w(){return s.getRoutes().map(x=>x.record)}function E(x){return!!s.getRecordMatcher(x)}function b(x,q){if(q=fn({},q||r.value),typeof x=="string"){const v=qe(a,x,q.path),A=s.resolve({path:v.path},q),O=e.createHref(v.fullPath);return fn(v,A,{params:d(A.params),hash:mt(v.hash),redirectedFrom:void 0,href:O})}let $;if(x.path!=null)$=fn({},x,{path:qe(a,x.path,q.path).path});else{const v=fn({},x.params);for(const A in v)v[A]==null&&delete v[A];$=fn({},x,{params:k(v)}),q.params=k(q.params)}const K=s.resolve($,q),rn=x.hash||"";K.params=u(d(K.params));const bn=P0(t,fn({},x,{hash:x0(rn),path:K.path})),f=e.createHref(bn);return fn({fullPath:bn,hash:rn,query:t===xc?rm(x.query):x.query||{}},K,{redirectedFrom:void 0,href:f})}function S(x){return typeof x=="string"?qe(a,x,r.value.path):fn({},x)}function y(x,q){if(i!==x)return Va(8,{from:q,to:x})}function L(x){return H(x)}function V(x){return L(fn(S(x),{replace:!0}))}function T(x){const q=x.matched[x.matched.length-1];if(q&&q.redirect){const{redirect:$}=q;let K=typeof $=="function"?$(x):$;return typeof K=="string"&&(K=K.includes("?")||K.includes("#")?K=S(K):{path:K},K.params={}),fn({query:x.query,hash:x.hash,params:K.path!=null?{}:x.params},K)}}function H(x,q){const $=i=b(x),K=r.value,rn=x.state,bn=x.force,f=x.replace===!0,v=T($);if(v)return H(fn(S(v),{state:typeof v=="object"?fn({},rn,v.state):rn,force:bn,replace:f}),q||$);const A=$;A.redirectedFrom=q;let O;return!bn&&D0(t,K,$)&&(O=Va(16,{to:A,from:K}),os(K,K,!0,!1)),(O?Promise.resolve(O):I(A,K)).catch(C=>Rs(C)?Rs(C,2)?C:As(C):Q(C,A,K)).then(C=>{if(C){if(Rs(C,2))return H(fn({replace:f},S(C.to),{state:typeof C.to=="object"?fn({},rn,C.to.state):rn,force:bn}),q||A)}else C=P(A,K,!0,f,rn);return G(A,K,C),C})}function M(x,q){const $=y(x,q);return $?Promise.reject($):Promise.resolve()}function W(x){const q=Ds.values().next().value;return q&&typeof q.runWithContext=="function"?q.runWithContext(x):x()}function I(x,q){let $;const[K,rn,bn]=ym(x,q);$=ze(K.reverse(),"beforeRouteLeave",x,q);for(const v of K)v.leaveGuards.forEach(A=>{$.push(na(A,x,q))});const f=M.bind(null,x,q);return $.push(f),Pn($).then(()=>{$=[];for(const v of o.list())$.push(na(v,x,q));return $.push(f),Pn($)}).then(()=>{$=ze(rn,"beforeRouteUpdate",x,q);for(const v of rn)v.updateGuards.forEach(A=>{$.push(na(A,x,q))});return $.push(f),Pn($)}).then(()=>{$=[];for(const v of bn)if(v.beforeEnter)if(_s(v.beforeEnter))for(const A of v.beforeEnter)$.push(na(A,x,q));else $.push(na(v.beforeEnter,x,q));return $.push(f),Pn($)}).then(()=>(x.matched.forEach(v=>v.enterCallbacks={}),$=ze(bn,"beforeRouteEnter",x,q,W),$.push(f),Pn($))).then(()=>{$=[];for(const v of c.list())$.push(na(v,x,q));return $.push(f),Pn($)}).catch(v=>Rs(v,8)?v:Promise.reject(v))}function G(x,q,$){l.list().forEach(K=>W(()=>K(x,q,$)))}function P(x,q,$,K,rn){const bn=y(x,q);if(bn)return bn;const f=q===js,v=La?history.state:{};$&&(K||f?e.replace(x.fullPath,fn({scroll:f&&v&&v.scroll},rn)):e.push(x.fullPath,rn)),r.value=x,os(x,q,$,f),As()}let nn;function On(){nn||(nn=e.listen((x,q,$)=>{if(!Ls.listening)return;const K=b(x),rn=T(K);if(rn){H(fn(rn,{replace:!0}),K).catch(et);return}i=K;const bn=r.value;La&&F0(yc(bn.fullPath,$.delta),_e()),I(K,bn).catch(f=>Rs(f,12)?f:Rs(f,2)?(H(f.to,K).then(v=>{Rs(v,20)&&!$.delta&&$.type===ht.pop&&e.go(-1,!1)}).catch(et),Promise.reject()):($.delta&&e.go(-$.delta,!1),Q(f,K,bn))).then(f=>{f=f||P(K,bn,!1),f&&($.delta&&!Rs(f,8)?e.go(-$.delta,!1):$.type===ht.pop&&Rs(f,20)&&e.go(-1,!1)),G(K,bn,f)}).catch(et)}))}let Sn=Ua(),U=Ua(),sn;function Q(x,q,$){As(x);const K=U.list();return K.length?K.forEach(rn=>rn(x,q,$)):console.error(x),Promise.reject(x)}function Tn(){return sn&&r.value!==js?Promise.resolve():new Promise((x,q)=>{Sn.add([x,q])})}function As(x){return sn||(sn=!x,On(),Sn.list().forEach(([q,$])=>x?$(x):q()),Sn.reset()),x}function os(x,q,$,K){const{scrollBehavior:rn}=n;if(!La||!rn)return Promise.resolve();const bn=!$&&q0(yc(x.fullPath,0))||(K||!$)&&history.state&&history.state.scroll||null;return Hs().then(()=>rn(x,q,bn)).then(f=>f&&H0(f)).catch(f=>Q(f,x,q))}const Vn=x=>e.go(x);let Xn;const Ds=new Set,Ls={currentRoute:r,listening:!0,addRoute:h,removeRoute:g,hasRoute:E,getRoutes:w,resolve:b,options:n,push:L,replace:V,go:Vn,back:()=>Vn(-1),forward:()=>Vn(1),beforeEach:o.add,beforeResolve:c.add,afterEach:l.add,onError:U.add,isReady:Tn,install(x){const q=this;x.component("RouterLink",dm),x.component("RouterView",gm),x.config.globalProperties.$router=q,Object.defineProperty(x.config.globalProperties,"$route",{enumerable:!0,get:()=>ga(r)}),La&&!Xn&&r.value===js&&(Xn=!0,L(e.location).catch(rn=>{}));const $={};for(const rn in js)Object.defineProperty($,rn,{get:()=>r.value[rn],enumerable:!0});x.provide(we,q),x.provide(sp,gl($)),x.provide(fo,r);const K=x.unmount;Ds.add(x),x.unmount=function(){Ds.delete(x),Ds.size<1&&(i=js,nn&&nn(),nn=null,r.value=js,Xn=!1,sn=!1),K()}}};function Pn(x){return x.reduce((q,$)=>q.then(()=>W($)),Promise.resolve())}return Ls}function ym(n,s){const a=[],t=[],e=[],o=Math.max(s.matched.length,n.matched.length);for(let c=0;c<o;c++){const l=s.matched[c];l&&(n.matched.find(i=>ja(i,l))?t.push(l):a.push(l));const r=n.matched[c];r&&(s.matched.find(i=>ja(i,r))||e.push(r))}return[a,t,e]}function wa(){return yn(we)}function Ts(){return yn(sp)}var ap=Symbol(""),Es=()=>{const n=yn(ap);if(!n)throw new Error("useClientData() is called without provider.");return n},bm=()=>Es().pageComponent,_n=()=>Es().pageData,hn=()=>Es().pageFrontmatter,_m=()=>Es().pageHead,tp=()=>Es().pageLang,wm=()=>Es().pageLayout,Ss=()=>Es().routeLocale,Em=()=>Es().routePath,Sm=()=>Es().routes,wr=()=>Es().siteData,za=()=>Es().siteLocaleData,Am=Symbol(""),go=Bn(h0),ft=Bn(f0),Er=(n,s)=>{const a=u0(n,s);if(ft.value[a])return a;const t=encodeURI(a);return ft.value[t]?t:go.value[a]||go.value[t]||a},Bs=(n,s)=>{const a=Er(n,s),t=ft.value[a]??{...ft.value["/404.html"],notFound:!0};return{path:a,notFound:!1,...t}},Lm=n=>{if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)&&!n.defaultPrevented&&!(n.button!==void 0&&n.button!==0)){if(n.currentTarget){const s=n.currentTarget.getAttribute("target");if(s!=null&&s.match(/\b_blank\b/i))return}return n.preventDefault(),!0}},Dn=j({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(n,{slots:s}){const a=wa(),t=Ts(),e=_(()=>n.to.startsWith("#")||n.to.startsWith("?")?n.to:`/${Er(n.to,t.path).substring(1)}`);return()=>{var o;return p("a",{class:["route-link",{[n.activeClass]:n.active}],href:e.value,onClick:(c={})=>{Lm(c)&&a.push(n.to).catch()}},(o=s.default)==null?void 0:o.call(s))}}}),Ee=j({name:"ClientOnly",setup(n,s){const a=J(!1);return mn(()=>{a.value=!0}),()=>{var t,e;return a.value?(e=(t=s.slots).default)==null?void 0:e.call(t):null}}}),Sr=j({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(n){const s=bm(),a=_(()=>{if(!n.path)return s.value;const t=Bs(n.path);return Rl(()=>t.loader().then(({comp:e})=>e))});return()=>p(a.value)}}),xm="Layout",Cm="en-US",ua=Et({resolveLayouts:n=>n.reduce((s,a)=>({...s,...a.layouts}),{}),resolvePageHead:(n,s,a)=>{const t=xn(s.description)?s.description:a.description,e=[...Array.isArray(s.head)?s.head:[],...a.head,["title",{},n],["meta",{name:"description",content:t}]];return c0(e)},resolvePageHeadTitle:(n,s)=>[n.title,s.title].filter(a=>!!a).join(" | "),resolvePageLang:(n,s)=>n.lang||s.lang||Cm,resolvePageLayout:(n,s)=>{const a=xn(n.frontmatter.layout)?n.frontmatter.layout:xm;if(!s[a])throw new Error(`[vuepress] Cannot resolve layout: ${a}`);return s[a]},resolveRouteLocale:(n,s)=>k0(n,s),resolveSiteLocaleData:({base:n,locales:s,...a},t)=>{var e;return{...a,...s[t],head:[...((e=s[t])==null?void 0:e.head)??[],...a.head??[]]}}}),es=(n={})=>n,vn=n=>_a(n)?n:`/${ur(n)}`;const Om={},qs=n=>{const s=Ss();return _(()=>n[s.value]??{})};var as=Uint8Array,Ca=Uint16Array,Bm=Int32Array,Ar=new as([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Lr=new as([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Im=new as([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),xr=function(n,s){for(var a=new Ca(31),t=0;t<31;++t)a[t]=s+=1<<n[t-1];for(var e=new Bm(a[30]),t=1;t<30;++t)for(var o=a[t];o<a[t+1];++o)e[o]=o-a[t]<<5|t;return{b:a,r:e}},Cr=xr(Ar,2),Or=Cr.b,Tm=Cr.r;Or[28]=258,Tm[258]=28;var Pm=xr(Lr,0),Dm=Pm.b,vo=new Ca(32768);for(var wn=0;wn<32768;++wn){var Ws=(wn&43690)>>1|(wn&21845)<<1;Ws=(Ws&52428)>>2|(Ws&13107)<<2,Ws=(Ws&61680)>>4|(Ws&3855)<<4,vo[wn]=((Ws&65280)>>8|(Ws&255)<<8)>>1}var pt=function(n,s,a){for(var t=n.length,e=0,o=new Ca(s);e<t;++e)n[e]&&++o[n[e]-1];var c=new Ca(s);for(e=1;e<s;++e)c[e]=c[e-1]+o[e-1]<<1;var l;if(a){l=new Ca(1<<s);var r=15-s;for(e=0;e<t;++e)if(n[e])for(var i=e<<4|n[e],u=s-n[e],k=c[n[e]-1]++<<u,d=k|(1<<u)-1;k<=d;++k)l[vo[k]>>r]=i}else for(l=new Ca(t),e=0;e<t;++e)n[e]&&(l[e]=vo[c[n[e]-1]++]>>15-n[e]);return l},Bt=new as(288);for(var wn=0;wn<144;++wn)Bt[wn]=8;for(var wn=144;wn<256;++wn)Bt[wn]=9;for(var wn=256;wn<280;++wn)Bt[wn]=7;for(var wn=280;wn<288;++wn)Bt[wn]=8;var Br=new as(32);for(var wn=0;wn<32;++wn)Br[wn]=5;var Rm=pt(Bt,9,1),Mm=pt(Br,5,1),Ge=function(n){for(var s=n[0],a=1;a<n.length;++a)n[a]>s&&(s=n[a]);return s},gs=function(n,s,a){var t=s/8|0;return(n[t]|n[t+1]<<8)>>(s&7)&a},Je=function(n,s){var a=s/8|0;return(n[a]|n[a+1]<<8|n[a+2]<<16)>>(s&7)},jm=function(n){return(n+7)/8|0},Ir=function(n,s,a){return(s==null||s<0)&&(s=0),(a==null||a>n.length)&&(a=n.length),new as(n.subarray(s,a))},Vm=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ls=function(n,s,a){var t=new Error(s||Vm[n]);if(t.code=n,Error.captureStackTrace&&Error.captureStackTrace(t,ls),!a)throw t;return t},Nm=function(n,s,a,t){var e=n.length,o=0;if(!e||s.f&&!s.l)return a||new as(0);var c=!a,l=c||s.i!=2,r=s.i;c&&(a=new as(e*3));var i=function(rn){var bn=a.length;if(rn>bn){var f=new as(Math.max(bn*2,rn));f.set(a),a=f}},u=s.f||0,k=s.p||0,d=s.b||0,h=s.l,g=s.d,w=s.m,E=s.n,b=e*8;do{if(!h){u=gs(n,k,1);var S=gs(n,k+1,3);if(k+=3,S)if(S==1)h=Rm,g=Mm,w=9,E=5;else if(S==2){var T=gs(n,k,31)+257,H=gs(n,k+10,15)+4,M=T+gs(n,k+5,31)+1;k+=14;for(var W=new as(M),I=new as(19),G=0;G<H;++G)I[Im[G]]=gs(n,k+G*3,7);k+=H*3;for(var P=Ge(I),nn=(1<<P)-1,On=pt(I,P,1),G=0;G<M;){var Sn=On[gs(n,k,nn)];k+=Sn&15;var y=Sn>>4;if(y<16)W[G++]=y;else{var U=0,sn=0;for(y==16?(sn=3+gs(n,k,3),k+=2,U=W[G-1]):y==17?(sn=3+gs(n,k,7),k+=3):y==18&&(sn=11+gs(n,k,127),k+=7);sn--;)W[G++]=U}}var Q=W.subarray(0,T),Tn=W.subarray(T);w=Ge(Q),E=Ge(Tn),h=pt(Q,w,1),g=pt(Tn,E,1)}else ls(1);else{var y=jm(k)+4,L=n[y-4]|n[y-3]<<8,V=y+L;if(V>e){r&&ls(0);break}l&&i(d+L),a.set(n.subarray(y,V),d),s.b=d+=L,s.p=k=V*8,s.f=u;continue}if(k>b){r&&ls(0);break}}l&&i(d+131072);for(var As=(1<<w)-1,os=(1<<E)-1,Vn=k;;Vn=k){var U=h[Je(n,k)&As],Xn=U>>4;if(k+=U&15,k>b){r&&ls(0);break}if(U||ls(2),Xn<256)a[d++]=Xn;else if(Xn==256){Vn=k,h=null;break}else{var Ds=Xn-254;if(Xn>264){var G=Xn-257,Ls=Ar[G];Ds=gs(n,k,(1<<Ls)-1)+Or[G],k+=Ls}var Pn=g[Je(n,k)&os],x=Pn>>4;Pn||ls(3),k+=Pn&15;var Tn=Dm[x];if(x>3){var Ls=Lr[x];Tn+=Je(n,k)&(1<<Ls)-1,k+=Ls}if(k>b){r&&ls(0);break}l&&i(d+131072);var q=d+Ds;if(d<Tn){var $=o-Tn,K=Math.min(Tn,q);for($+d<0&&ls(3);d<K;++d)a[d]=t[$+d]}for(;d<q;++d)a[d]=a[d-Tn]}}s.l=h,s.p=Vn,s.b=d,s.f=u,h&&(u=1,s.m=w,s.d=g,s.n=E)}while(!u);return d!=a.length&&c?Ir(a,0,d):a.subarray(0,d)},$m=new as(0),Hm=function(n,s){return((n[0]&15)!=8||n[0]>>4>7||(n[0]<<8|n[1])%31)&&ls(6,"invalid zlib data"),(n[1]>>5&1)==+!s&&ls(6,"invalid zlib data: "+(n[1]&32?"need":"unexpected")+" dictionary"),(n[1]>>3&4)+2};function Fm(n,s){return Nm(n.subarray(Hm(n,s),-4),{i:2},s,s)}var yo=typeof TextDecoder<"u"&&new TextDecoder,qm=0;try{yo.decode($m,{stream:!0}),qm=1}catch{}var zm=function(n){for(var s="",a=0;;){var t=n[a++],e=(t>127)+(t>223)+(t>239);if(a+e>n.length)return{s,r:Ir(n,a-1)};e?e==3?(t=((t&15)<<18|(n[a++]&63)<<12|(n[a++]&63)<<6|n[a++]&63)-65536,s+=String.fromCharCode(55296|t>>10,56320|t&1023)):e&1?s+=String.fromCharCode((t&31)<<6|n[a++]&63):s+=String.fromCharCode((t&15)<<12|(n[a++]&63)<<6|n[a++]&63):s+=String.fromCharCode(t)}};function Gm(n,s){{for(var a=new as(n.length),t=0;t<n.length;++t)a[t]=n.charCodeAt(t);return a}for(var e=n.length,t=0;t<e;++t);}function Jm(n,s){var a;if(yo)return yo.decode(n);var t=zm(n),e=t.s,a=t.r;return a.length&&ls(8),e}const Pc=n=>{const s=atob(n);return Jm(Fm(Gm(s)))},Wn=(n,s)=>{var t;const a=(t=(s==null?void 0:s._instance)||qa())==null?void 0:t.appContext.components;return a?n in a||ms(n)in a||wt(ms(n))in a:!1},Tr=n=>typeof n<"u",Ue=n=>typeof n=="number",bo=Array.isArray,Na=(n,s)=>xn(n)&&n.startsWith(s),Um=(n,s)=>xn(n)&&n.endsWith(s),Ea=Object.entries,Wm=Object.fromEntries,hs=Object.keys,Qm=Object.values,ep=n=>{if(n){if(typeof n=="number")return new Date(n);const s=Date.parse(n.toString());if(!Number.isNaN(s))return new Date(s)}return null},It=n=>Na(n,"/"),Km="http://.",Ym=(n,s)=>{if(It(n)||typeof s!="string")return Bs(n);const a=s.slice(0,s.lastIndexOf("/"));return Bs(new URL(`${a}/${encodeURI(n)}`,Km).pathname)},Pr=n=>new Promise(s=>setTimeout(s,n));function Is(n){return ol()?(Nu(n),!0):!1}function Gn(n){return typeof n=="function"?n():ga(n)}const va=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Xm=Object.prototype.toString,Zm=n=>Xm.call(n)==="[object Object]",Ns=()=>{},_o=n1();function n1(){var n,s;return va&&((n=window==null?void 0:window.navigator)==null?void 0:n.userAgent)&&(/iP(ad|hone|od)/.test(window.navigator.userAgent)||((s=window==null?void 0:window.navigator)==null?void 0:s.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function op(n,s){function a(...t){return new Promise((e,o)=>{Promise.resolve(n(()=>s.apply(this,t),{fn:s,thisArg:this,args:t})).then(e).catch(o)})}return a}const Dr=n=>n();function s1(n,s={}){let a,t,e=Ns;const o=l=>{clearTimeout(l),e(),e=Ns};return l=>{const r=Gn(n),i=Gn(s.maxWait);return a&&o(a),r<=0||i!==void 0&&i<=0?(t&&(o(t),t=null),Promise.resolve(l())):new Promise((u,k)=>{e=s.rejectOnCancel?k:u,i&&!t&&(t=setTimeout(()=>{a&&o(a),t=null,u(l())},i)),a=setTimeout(()=>{t&&o(t),t=null,u(l())},r)})}}function a1(...n){let s=0,a,t=!0,e=Ns,o,c,l,r,i;!jn(n[0])&&typeof n[0]=="object"?{delay:c,trailing:l=!0,leading:r=!0,rejectOnCancel:i=!1}=n[0]:[c,l=!0,r=!0,i=!1]=n;const u=()=>{a&&(clearTimeout(a),a=void 0,e(),e=Ns)};return d=>{const h=Gn(c),g=Date.now()-s,w=()=>o=d();return u(),h<=0?(s=Date.now(),w()):(g>h&&(r||!t)?(s=Date.now(),w()):l&&(o=new Promise((E,b)=>{e=i?b:E,a=setTimeout(()=>{s=Date.now(),t=!0,E(w()),u()},Math.max(0,h-g))})),!r&&!a&&(a=setTimeout(()=>t=!0,h)),t=!1,o)}}function t1(n=Dr){const s=J(!0);function a(){s.value=!1}function t(){s.value=!0}const e=(...o)=>{s.value&&n(...o)};return{isActive:$s(s),pause:a,resume:t,eventFilter:e}}function e1(n){let s;function a(){return s||(s=n()),s}return a.reset=async()=>{const t=s;s=void 0,t&&await t},a}function o1(n){return qa()}function p1(...n){if(n.length!==1)return Fa(...n);const s=n[0];return typeof s=="function"?$s(wl(()=>({get:s,set:Ns}))):J(s)}function Rr(n,s=200,a={}){return op(s1(s,a),n)}function c1(n,s=200,a=!1,t=!0,e=!1){return op(a1(s,a,t,e),n)}function l1(n,s,a={}){const{eventFilter:t=Dr,...e}=a;return en(n,op(t,s),e)}function r1(n,s,a={}){const{eventFilter:t,...e}=a,{eventFilter:o,pause:c,resume:l,isActive:r}=t1(t);return{stop:l1(n,s,{...e,eventFilter:o}),pause:c,resume:l,isActive:r}}function Se(n,s=!0,a){o1()?mn(n,a):s?n():Hs(n)}function i1(n,s=1e3,a={}){const{immediate:t=!0,immediateCallback:e=!1}=a;let o=null;const c=J(!1);function l(){o&&(clearInterval(o),o=null)}function r(){c.value=!1,l()}function i(){const u=Gn(s);u<=0||(c.value=!0,e&&n(),l(),o=setInterval(n,u))}if(t&&va&&i(),jn(s)||typeof s=="function"){const u=en(s,()=>{c.value&&va&&i()});Is(u)}return Is(r),{isActive:c,pause:r,resume:i}}function u1(n,s,a={}){const{immediate:t=!0}=a,e=J(!1);let o=null;function c(){o&&(clearTimeout(o),o=null)}function l(){e.value=!1,c()}function r(...i){c(),e.value=!0,o=setTimeout(()=>{e.value=!1,o=null,n(...i)},Gn(s))}return t&&(e.value=!0,va&&r()),Is(l),{isPending:$s(e),start:r,stop:l}}function gt(n=!1,s={}){const{truthyValue:a=!0,falsyValue:t=!1}=s,e=jn(n),o=J(n);function c(l){if(arguments.length)return o.value=l,o.value;{const r=Gn(a);return o.value=o.value===r?Gn(t):r,o.value}}return e?c:[o,c]}function ts(n){var s;const a=Gn(n);return(s=a==null?void 0:a.$el)!=null?s:a}const ws=va?window:void 0,Mr=va?window.document:void 0,jr=va?window.navigator:void 0;function Cn(...n){let s,a,t,e;if(typeof n[0]=="string"||Array.isArray(n[0])?([a,t,e]=n,s=ws):[s,a,t,e]=n,!s)return Ns;Array.isArray(a)||(a=[a]),Array.isArray(t)||(t=[t]);const o=[],c=()=>{o.forEach(u=>u()),o.length=0},l=(u,k,d,h)=>(u.addEventListener(k,d,h),()=>u.removeEventListener(k,d,h)),r=en(()=>[ts(s),Gn(e)],([u,k])=>{if(c(),!u)return;const d=Zm(k)?{...k}:k;o.push(...a.flatMap(h=>t.map(g=>l(u,h,g,d))))},{immediate:!0,flush:"post"}),i=()=>{r(),c()};return Is(i),i}let Dc=!1;function k1(n,s,a={}){const{window:t=ws,ignore:e=[],capture:o=!0,detectIframe:c=!1}=a;if(!t)return Ns;_o&&!Dc&&(Dc=!0,Array.from(t.document.body.children).forEach(d=>d.addEventListener("click",Ns)),t.document.documentElement.addEventListener("click",Ns));let l=!0;const r=d=>e.some(h=>{if(typeof h=="string")return Array.from(t.document.querySelectorAll(h)).some(g=>g===d.target||d.composedPath().includes(g));{const g=ts(h);return g&&(d.target===g||d.composedPath().includes(g))}}),u=[Cn(t,"click",d=>{const h=ts(n);if(!(!h||h===d.target||d.composedPath().includes(h))){if(d.detail===0&&(l=!r(d)),!l){l=!0;return}s(d)}},{passive:!0,capture:o}),Cn(t,"pointerdown",d=>{const h=ts(n);l=!r(d)&&!!(h&&!d.composedPath().includes(h))},{passive:!0}),c&&Cn(t,"blur",d=>{setTimeout(()=>{var h;const g=ts(n);((h=t.document.activeElement)==null?void 0:h.tagName)==="IFRAME"&&!(g!=null&&g.contains(t.document.activeElement))&&s(d)},0)})].filter(Boolean);return()=>u.forEach(d=>d())}function d1(){const n=J(!1),s=qa();return s&&mn(()=>{n.value=!0},s),n}function Tt(n){const s=d1();return _(()=>(s.value,!!n()))}function m1(n,s={}){const{immediate:a=!0,fpsLimit:t=void 0,window:e=ws}=s,o=J(!1),c=t?1e3/t:null;let l=0,r=null;function i(d){if(!o.value||!e)return;l||(l=d);const h=d-l;if(c&&h<c){r=e.requestAnimationFrame(i);return}l=d,n({delta:h,timestamp:d}),r=e.requestAnimationFrame(i)}function u(){!o.value&&e&&(o.value=!0,l=0,r=e.requestAnimationFrame(i))}function k(){o.value=!1,r!=null&&e&&(e.cancelAnimationFrame(r),r=null)}return a&&u(),Is(k),{isActive:$s(o),pause:k,resume:u}}function Vr(n,s={}){const{window:a=ws}=s,t=Tt(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let e;const o=J(!1),c=i=>{o.value=i.matches},l=()=>{e&&("removeEventListener"in e?e.removeEventListener("change",c):e.removeListener(c))},r=Bl(()=>{t.value&&(l(),e=a.matchMedia(Gn(n)),"addEventListener"in e?e.addEventListener("change",c):e.addListener(c),o.value=e.matches)});return Is(()=>{r(),l(),e=void 0}),o}function Rc(n,s={}){const{controls:a=!1,navigator:t=jr}=s,e=Tt(()=>t&&"permissions"in t);let o;const c=typeof n=="string"?{name:n}:n,l=J(),r=()=>{o&&(l.value=o.state)},i=e1(async()=>{if(e.value){if(!o)try{o=await t.permissions.query(c),Cn(o,"change",r),r()}catch{l.value="prompt"}return o}});return i(),a?{state:l,isSupported:e,query:i}:l}function h1(n={}){const{navigator:s=jr,read:a=!1,source:t,copiedDuring:e=1500,legacy:o=!1}=n,c=Tt(()=>s&&"clipboard"in s),l=Rc("clipboard-read"),r=Rc("clipboard-write"),i=_(()=>c.value||o),u=J(""),k=J(!1),d=u1(()=>k.value=!1,e);function h(){c.value&&b(l.value)?s.clipboard.readText().then(S=>{u.value=S}):u.value=E()}i.value&&a&&Cn(["copy","cut"],h);async function g(S=Gn(t)){i.value&&S!=null&&(c.value&&b(r.value)?await s.clipboard.writeText(S):w(S),u.value=S,k.value=!0,d.start())}function w(S){const y=document.createElement("textarea");y.value=S??"",y.style.position="absolute",y.style.opacity="0",document.body.appendChild(y),y.select(),document.execCommand("copy"),y.remove()}function E(){var S,y,L;return(L=(y=(S=document==null?void 0:document.getSelection)==null?void 0:S.call(document))==null?void 0:y.toString())!=null?L:""}function b(S){return S==="granted"||S==="prompt"}return{isSupported:i,text:u,copied:k,copy:g}}const Kt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Yt="__vueuse_ssr_handlers__",f1=g1();function g1(){return Yt in Kt||(Kt[Yt]=Kt[Yt]||{}),Kt[Yt]}function v1(n,s){return f1[n]||s}function y1(n){return n==null?"any":n instanceof Set?"set":n instanceof Map?"map":n instanceof Date?"date":typeof n=="boolean"?"boolean":typeof n=="string"?"string":typeof n=="object"?"object":Number.isNaN(n)?"any":"number"}const b1={boolean:{read:n=>n==="true",write:n=>String(n)},object:{read:n=>JSON.parse(n),write:n=>JSON.stringify(n)},number:{read:n=>Number.parseFloat(n),write:n=>String(n)},any:{read:n=>n,write:n=>String(n)},string:{read:n=>n,write:n=>String(n)},map:{read:n=>new Map(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n.entries()))},set:{read:n=>new Set(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n))},date:{read:n=>new Date(n),write:n=>n.toISOString()}},Mc="vueuse-storage";function Ae(n,s,a,t={}){var e;const{flush:o="pre",deep:c=!0,listenToStorageChanges:l=!0,writeDefaults:r=!0,mergeDefaults:i=!1,shallow:u,window:k=ws,eventFilter:d,onError:h=I=>{console.error(I)},initOnMounted:g}=t,w=(u?Bn:J)(typeof s=="function"?s():s);if(!a)try{a=v1("getDefaultStorage",()=>{var I;return(I=ws)==null?void 0:I.localStorage})()}catch(I){h(I)}if(!a)return w;const E=Gn(s),b=y1(E),S=(e=t.serializer)!=null?e:b1[b],{pause:y,resume:L}=r1(w,()=>T(w.value),{flush:o,deep:c,eventFilter:d});k&&l&&Se(()=>{Cn(k,"storage",M),Cn(k,Mc,W),g&&M()}),g||M();function V(I,G){k&&k.dispatchEvent(new CustomEvent(Mc,{detail:{key:n,oldValue:I,newValue:G,storageArea:a}}))}function T(I){try{const G=a.getItem(n);if(I==null)V(G,null),a.removeItem(n);else{const P=S.write(I);G!==P&&(a.setItem(n,P),V(G,P))}}catch(G){h(G)}}function H(I){const G=I?I.newValue:a.getItem(n);if(G==null)return r&&E!=null&&a.setItem(n,S.write(E)),E;if(!I&&i){const P=S.read(G);return typeof i=="function"?i(P,E):b==="object"&&!Array.isArray(P)?{...E,...P}:P}else return typeof G!="string"?G:S.read(G)}function M(I){if(!(I&&I.storageArea!==a)){if(I&&I.key==null){w.value=E;return}if(!(I&&I.key!==n)){y();try{(I==null?void 0:I.newValue)!==S.write(w.value)&&(w.value=H(I))}catch(G){h(G)}finally{I?Hs(L):L()}}}}function W(I){M(I.detail)}return w}function _1(n){return Vr("(prefers-color-scheme: dark)",n)}function w1(n,s,a={}){const{window:t=ws,...e}=a;let o;const c=Tt(()=>t&&"ResizeObserver"in t),l=()=>{o&&(o.disconnect(),o=void 0)},r=_(()=>Array.isArray(n)?n.map(k=>ts(k)):[ts(n)]),i=en(r,k=>{if(l(),c.value&&t){o=new ResizeObserver(s);for(const d of k)d&&o.observe(d,e)}},{immediate:!0,flush:"post"}),u=()=>{l(),i()};return Is(u),{isSupported:c,stop:u}}function E1(n,s={width:0,height:0},a={}){const{window:t=ws,box:e="content-box"}=a,o=_(()=>{var k,d;return(d=(k=ts(n))==null?void 0:k.namespaceURI)==null?void 0:d.includes("svg")}),c=J(s.width),l=J(s.height),{stop:r}=w1(n,([k])=>{const d=e==="border-box"?k.borderBoxSize:e==="content-box"?k.contentBoxSize:k.devicePixelContentBoxSize;if(t&&o.value){const h=ts(n);if(h){const g=t.getComputedStyle(h);c.value=Number.parseFloat(g.width),l.value=Number.parseFloat(g.height)}}else if(d){const h=Array.isArray(d)?d:[d];c.value=h.reduce((g,{inlineSize:w})=>g+w,0),l.value=h.reduce((g,{blockSize:w})=>g+w,0)}else c.value=k.contentRect.width,l.value=k.contentRect.height},a);Se(()=>{const k=ts(n);k&&(c.value="offsetWidth"in k?k.offsetWidth:s.width,l.value="offsetHeight"in k?k.offsetHeight:s.height)});const i=en(()=>ts(n),k=>{c.value=k?s.width:0,l.value=k?s.height:0});function u(){r(),i()}return{width:c,height:l,stop:u}}const jc=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function pp(n,s={}){const{document:a=Mr,autoExit:t=!1}=s,e=_(()=>{var b;return(b=ts(n))!=null?b:a==null?void 0:a.querySelector("html")}),o=J(!1),c=_(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(b=>a&&b in a||e.value&&b in e.value)),l=_(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(b=>a&&b in a||e.value&&b in e.value)),r=_(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(b=>a&&b in a||e.value&&b in e.value)),i=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(b=>a&&b in a),u=Tt(()=>e.value&&a&&c.value!==void 0&&l.value!==void 0&&r.value!==void 0),k=()=>i?(a==null?void 0:a[i])===e.value:!1,d=()=>{if(r.value){if(a&&a[r.value]!=null)return a[r.value];{const b=e.value;if((b==null?void 0:b[r.value])!=null)return!!b[r.value]}}return!1};async function h(){if(!(!u.value||!o.value)){if(l.value)if((a==null?void 0:a[l.value])!=null)await a[l.value]();else{const b=e.value;(b==null?void 0:b[l.value])!=null&&await b[l.value]()}o.value=!1}}async function g(){if(!u.value||o.value)return;d()&&await h();const b=e.value;c.value&&(b==null?void 0:b[c.value])!=null&&(await b[c.value](),o.value=!0)}async function w(){await(o.value?h():g())}const E=()=>{const b=d();(!b||b&&k())&&(o.value=b)};return Cn(a,jc,E,!1),Cn(()=>ts(e),jc,E,!1),t&&Is(h),{isSupported:u,isFullscreen:o,enter:g,exit:h,toggle:w}}function We(n){return typeof Window<"u"&&n instanceof Window?n.document.documentElement:typeof Document<"u"&&n instanceof Document?n.documentElement:n}function qg(n,s,a={}){const{window:t=ws}=a;return Ae(n,s,t==null?void 0:t.localStorage,a)}function S1(n={}){const{controls:s=!1,interval:a="requestAnimationFrame"}=n,t=J(new Date),e=()=>t.value=new Date,o=a==="requestAnimationFrame"?m1(e,{immediate:!0}):i1(e,a,{immediate:!0});return s?{now:t,...o}:t}function Nr(n){const s=window.getComputedStyle(n);if(s.overflowX==="scroll"||s.overflowY==="scroll"||s.overflowX==="auto"&&n.clientWidth<n.scrollWidth||s.overflowY==="auto"&&n.clientHeight<n.scrollHeight)return!0;{const a=n.parentNode;return!a||a.tagName==="BODY"?!1:Nr(a)}}function A1(n){const s=n||window.event,a=s.target;return Nr(a)?!1:s.touches.length>1?!0:(s.preventDefault&&s.preventDefault(),!1)}const Xt=new WeakMap;function cp(n,s=!1){const a=J(s);let t=null;en(p1(n),c=>{const l=We(Gn(c));if(l){const r=l;Xt.get(r)||Xt.set(r,r.style.overflow),a.value&&(r.style.overflow="hidden")}},{immediate:!0});const e=()=>{const c=We(Gn(n));!c||a.value||(_o&&(t=Cn(c,"touchmove",l=>{A1(l)},{passive:!1})),c.style.overflow="hidden",a.value=!0)},o=()=>{var c;const l=We(Gn(n));!l||!a.value||(_o&&(t==null||t()),l.style.overflow=(c=Xt.get(l))!=null?c:"",Xt.delete(l),a.value=!1)};return Is(o),_({get(){return a.value},set(c){c?e():o()}})}let L1=0;function x1(n,s={}){const a=J(!1),{document:t=Mr,immediate:e=!0,manual:o=!1,id:c=`vueuse_styletag_${++L1}`}=s,l=J(n);let r=()=>{};const i=()=>{if(!t)return;const k=t.getElementById(c)||t.createElement("style");k.isConnected||(k.id=c,s.media&&(k.media=s.media),t.head.appendChild(k)),!a.value&&(r=en(l,d=>{k.textContent=d},{immediate:!0}),a.value=!0)},u=()=>{!t||!a.value||(r(),t.head.removeChild(t.getElementById(c)),a.value=!1)};return e&&!o&&Se(i),o||Is(u),{id:c,css:l,unload:u,load:i,isLoaded:$s(a)}}function C1(n={}){const{window:s=ws,behavior:a="auto"}=n;if(!s)return{x:J(0),y:J(0)};const t=J(s.scrollX),e=J(s.scrollY),o=_({get(){return t.value},set(l){scrollTo({left:l,behavior:a})}}),c=_({get(){return e.value},set(l){scrollTo({top:l,behavior:a})}});return Cn(s,"scroll",()=>{t.value=s.scrollX,e.value=s.scrollY},{capture:!1,passive:!0}),{x:o,y:c}}function O1(n={}){const{window:s=ws,initialWidth:a=Number.POSITIVE_INFINITY,initialHeight:t=Number.POSITIVE_INFINITY,listenOrientation:e=!0,includeScrollbar:o=!0}=n,c=J(a),l=J(t),r=()=>{s&&(o?(c.value=s.innerWidth,l.value=s.innerHeight):(c.value=s.document.documentElement.clientWidth,l.value=s.document.documentElement.clientHeight))};if(r(),Se(r),Cn("resize",r,{passive:!0}),e){const i=Vr("(orientation: portrait)");en(i,()=>r())}return{width:c,height:l}}const cn=({name:n="",color:s="currentColor",ariaLabel:a},{attrs:t,slots:e})=>{var o;return p("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${n}-icon`],viewBox:"0 0 1024 1024",fill:s,"aria-label":a??`${n} icon`,...t},(o=e.default)==null?void 0:o.call(e))};cn.displayName="IconBase";const $r=({size:n=48,stroke:s=4,wrapper:a=!0,height:t=2*n})=>{const e=p("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[p("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),p("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":s,"stroke-linecap":"round"},[p("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),p("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return a?p("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${t}px`},e):e};$r.displayName="LoadingIcon";const lp=(n,{slots:s})=>{var a;return(a=s.default)==null?void 0:a.call(s)},B1=n=>_a(n)?n:`https://github.com/${n}`,rp=(n="")=>!_a(n)||/github\.com/.test(n)?"GitHub":/bitbucket\.org/.test(n)?"Bitbucket":/gitlab\.com/.test(n)?"GitLab":/gitee\.com/.test(n)?"Gitee":null,Hr=()=>p(cn,{name:"github"},()=>p("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Hr.displayName="GitHubIcon";const Fr=()=>p(cn,{name:"gitee"},()=>p("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Fr.displayName="GiteeIcon";const qr=()=>p(cn,{name:"bitbucket"},()=>p("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));qr.displayName="BitbucketIcon";const zr=()=>p(cn,{name:"source"},()=>p("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));zr.displayName="SourceIcon";const Gr=({link:n,type:s=rp(n??"")})=>{if(!s)return null;const a=s.toLowerCase();return p(a==="bitbucket"?qr:a==="github"?Hr:a==="gitlab"?"GitLab":a==="gitee"?Fr:zr)};function I1(){const n=J(!1),s=qa();return s&&mn(()=>{n.value=!0},s),n}function T1(n){return I1(),_(()=>!!n())}const P1=()=>T1(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),D1=()=>{const n=P1();return _(()=>n.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},R1=n=>[/\((ipad);[-\w),; ]+apple/i,/applecoremedia\/[\w.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i].some(s=>s.test(n)),M1=n=>[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/cfnetwork\/.+darwin/i].some(s=>s.test(n)),j1=n=>[/(mac os x) ?([\w. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i].some(s=>s.test(n)),V1=(n,s=0)=>{let a=3735928559^s,t=1103547991^s;for(let e=0,o;e<n.length;e++)o=n.charCodeAt(e),a=Math.imul(a^o,2654435761),t=Math.imul(t^o,1597334677);return a=Math.imul(a^a>>>16,2246822507),a^=Math.imul(t^t>>>13,3266489909),t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(a^a>>>13,3266489909),4294967296*(2097151&t)+(a>>>0)},Pt=(n,s)=>V1(n)%s;let N1=class{constructor(){Oe(this,"containerElement");Oe(this,"messageElements",{});const s="message-container",a=document.getElementById(s);a?this.containerElement=a:(this.containerElement=document.createElement("div"),this.containerElement.id=s,document.body.appendChild(this.containerElement))}pop(s,a=2e3){const t=document.createElement("div"),e=Date.now();return t.className="message move-in",t.innerHTML=s,this.containerElement.appendChild(t),this.messageElements[e]=t,a>0&&setTimeout(()=>{this.close(e)},a),e}close(s){if(s){const a=this.messageElements[s];a.classList.remove("move-in"),a.classList.add("move-out"),a.addEventListener("animationend",()=>{a.remove(),delete this.messageElements[s]})}else hs(this.messageElements).forEach(a=>this.close(Number(a)))}destroy(){document.body.removeChild(this.containerElement)}};const Jr=/#.*$/u,$1=n=>{const s=Jr.exec(n);return s?s[0]:""},Vc=n=>decodeURI(n).replace(Jr,"").replace(/\/index\.html$/iu,"/").replace(/\.html$/iu,"").replace(/(README|index)?\.md$/iu,""),Ur=(n,s)=>{if(!Tr(s))return!1;const a=Vc(n.path),t=Vc(s),e=$1(s);return e?e===n.hash&&(!t||a===t):a===t};var H1=n=>Object.prototype.toString.call(n)==="[object Object]",vt=n=>typeof n=="string";const Wr=Array.isArray,Nc=n=>H1(n)&&vt(n.name),yt=(n,s=!1)=>n?Wr(n)?n.map(a=>vt(a)?{name:a}:Nc(a)?a:null).filter(a=>a!==null):vt(n)?[{name:n}]:Nc(n)?[n]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${s?"":"| false"} | undefined\`, but got`,n),[]):[],Qr=(n,s)=>{if(n){if(Wr(n)&&n.every(vt))return n;if(vt(n))return[n];console.error(`Expect ${s} to be \`string[] | string | undefined\`, but got`,n)}return[]},Kr=n=>Qr(n,"category"),Yr=n=>Qr(n,"tag");var F1={"/":{source:"源代码"}},q1=j({name:"SiteInfo",props:{name:{type:String,required:!0},desc:{type:String,default:""},logo:{type:String,default:""},url:{type:String,required:!0},preview:{type:String,required:!0},repo:{type:String,default:""}},setup(n){const s=qs(F1);return()=>p("div",{class:"vp-site-info","data-name":n.name},[p("a",{class:"vp-site-info-navigator",title:n.name,href:n.url,target:"_blank"}),p("div",{class:"vp-site-info-preview",style:{background:`url(${vn(n.preview)}) center/cover no-repeat`}}),p("div",{class:"vp-site-info-detail"},[n.logo?p("img",{class:"vp-site-info-logo",src:n.logo,alt:"",loading:"lazy","no-view":""}):null,p("div",{class:"vp-site-info-name"},n.name),p("div",{class:"vp-site-info-desc"},n.desc)]),n.repo?p("div",{class:"vp-site-info-source-wrapper"},p("a",{class:"vp-site-info-source",href:n.repo,"aria-label":s.value.source,"data-balloon-pos":"left",title:s.value.source,target:"_blank"},p(Gr,{link:n.repo}))):null])}});const Xr=({title:n,desc:s="",logo:a,background:t,color:e,link:o})=>{const c=[a?p("img",{class:"vp-card-logo",src:vn(a),loading:"lazy","no-view":""}):null,p("div",{class:"vp-card-content"},[p("div",{class:"vp-card-title",innerHTML:n}),p("hr"),p("div",{class:"vp-card-desc",innerHTML:s})])],l={};return t&&(l.background=t),e&&(l.color=e),o?be(o)?p("a",{class:"vp-card",href:o,target:"_blank",style:l},c):p(Dn,{to:o,class:"vp-card",style:l},()=>c):p("div",{class:"vp-card",style:l},c)};Xr.displayName="VPCard";var z1=j({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(n){const s=_(()=>{const t=["font-icon icon"],e=`iconfont icon-${n.icon}`;return t.push(e),t}),a=_(()=>{const t={};return n.color&&(t.color=n.color),n.size&&(t["font-size"]=Number.isNaN(Number(n.size))?n.size:`${n.size}px`),hs(t).length?t:null});return()=>n.icon?p("span",{key:n.icon,class:s.value,style:a.value}):null}});const Zr=({type:n="info",text:s="",vertical:a,color:t},{slots:e})=>{var o;return p("span",{class:["vp-badge",n,{diy:t}],style:{verticalAlign:a??!1,backgroundColor:t??!1}},((o=e.default)==null?void 0:o.call(e))??s)};Zr.displayName="Badge";const G1=es({enhance:({app:n})=>{Wn("SiteInfo")||n.component("SiteInfo",q1),Wn("VPCard")||n.component("VPCard",Xr),Wn("FontIcon")||n.component("FontIcon",z1),Wn("Badge")||n.component("Badge",Zr)},setup:()=>{x1(`@import url("//at.alicdn.com/t/c/font_4010207_lnf1z756n8m.css");
`)},rootComponents:[]}),$c=async(n,s)=>{const{path:a,query:t}=n.currentRoute.value,{scrollBehavior:e}=n.options;n.options.scrollBehavior=void 0,await n.replace({path:a,query:t,hash:s}),n.options.scrollBehavior=e},J1=({headerLinkSelector:n,headerAnchorSelector:s,delay:a,offset:t=5})=>{const e=wa();Cn("scroll",Rr(()=>{var g,w;const c=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(c-0)<t){$c(e,"");return}const r=window.innerHeight+c,i=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),u=Math.abs(i-r)<t,k=Array.from(document.querySelectorAll(n)),h=Array.from(document.querySelectorAll(s)).filter(E=>k.some(b=>b.hash===E.hash));for(let E=0;E<h.length;E++){const b=h[E],S=h[E+1],y=c>=(((g=b.parentElement)==null?void 0:g.offsetTop)??0)-t,L=!S||c<(((w=S.parentElement)==null?void 0:w.offsetTop)??0)-t;if(!(y&&L))continue;const T=decodeURIComponent(e.currentRoute.value.hash),H=decodeURIComponent(b.hash);if(T===H)return;if(u){for(let M=E+1;M<h.length;M++)if(T===decodeURIComponent(h[M].hash))return}$c(e,H);return}},a))},U1=".vp-sidebar-link, .vp-toc-link",W1=".header-anchor",Q1=200,K1=5,Y1=es({setup(){J1({headerLinkSelector:U1,headerAnchorSelector:W1,delay:Q1,offset:K1})}});let ni=n=>xn(n.title)?{title:n.title}:null;const si=Symbol(""),X1=n=>{ni=n},Z1=()=>yn(si),nh=n=>{n.provide(si,ni)};var sh={"/":{title:"目录",empty:"暂无目录"}};const ah=j({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(n){const s=Z1(),a=qs(sh),t=_n(),e=Sm(),o=wr(),l=Bn(Ea(e.value).map(([i,{meta:u}])=>{const k=s(u);if(!k)return null;const d=i.split("/").length;return{level:Um(i,"/")?d-2:d-1,base:i.replace(/\/[^/]+\/?$/,"/"),path:i,...k}}).filter(i=>Ot(i)&&xn(i.title))),r=_(()=>{const i=n.base?l0(ir(n.base)):t.value.path.replace(/\/[^/]+$/,"/"),u=i.split("/").length-2,k=[];return l.value.filter(({level:d,path:h})=>{if(!Na(h,i)||h===i)return!1;if(i==="/"){const g=hs(o.value.locales).filter(w=>w!=="/");if(h==="/404.html"||g.some(w=>Na(h,w)))return!1}return d-u<=n.level}).sort(({title:d,level:h,order:g},{title:w,level:E,order:b})=>{const S=h-E;return S||(Ue(g)?Ue(b)?g>0?b>0?g-b:-1:b<0?g-b:1:g:Ue(b)?b:d.localeCompare(w))}).forEach(d=>{var w;const{base:h,level:g}=d;switch(g-u){case 1:{k.push(d);break}case 2:{const E=k.find(b=>b.path===h);E&&(E.children??(E.children=[])).push(d);break}default:{const E=k.find(b=>b.path===h.replace(/\/[^/]+\/$/,"/"));if(E){const b=(w=E.children)==null?void 0:w.find(S=>S.path===h);b&&(b.children??(b.children=[])).push(d)}}}}),k});return()=>{const i=r.value.some(u=>u.children);return p("div",{class:["vp-catalog-wrapper",{index:n.index}]},[n.hideHeading?null:p("h2",{class:"vp-catalog-main-title"},a.value.title),r.value.length?p(n.index?"ol":"ul",{class:["vp-catalogs",{deep:i}]},r.value.map(({children:u=[],title:k,path:d,content:h})=>{const g=p(Dn,{class:"vp-catalog-title",to:d},()=>h?p(h):k);return p("li",{class:"vp-catalog"},i?[p("h3",{id:k,class:["vp-catalog-child-title",{"has-children":u.length}]},[p("a",{href:`#${k}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),g]),u.length?p(n.index?"ol":"ul",{class:"vp-child-catalogs"},u.map(({children:w=[],content:E,path:b,title:S})=>p("li",{class:"vp-child-catalog"},[p("div",{class:["vp-catalog-sub-title",{"has-children":w.length}]},[p("a",{href:`#${S}`,class:"vp-catalog-header-anchor"},"#"),p(Dn,{class:"vp-catalog-title",to:b},()=>E?p(E):S)]),w.length?p(n.index?"ol":"div",{class:n.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},w.map(({content:y,path:L,title:V})=>n.index?p("li",{class:"vp-sub-catalog"},p(Dn,{to:L},()=>y?p(y):V)):p(Dn,{class:"vp-sub-catalog-link",to:L},()=>y?p(y):V))):null]))):null]:p("div",{class:"vp-catalog-child-title"},g))})):p("p",{class:"vp-empty-catalog"},a.value.empty)])}}}),th=es({enhance:({app:n})=>{nh(n),Wn("Catalog",n)||n.component("Catalog",ah)}});var eh={"/":{backToTop:"返回顶部"}};const oh=j({name:"BackToTop",setup(){const n=hn(),s=qs(eh),a=Bn(),{height:t}=E1(a),{height:e}=O1(),{y:o}=C1(),c=_(()=>n.value.backToTop!==!1&&o.value>100),l=_(()=>o.value/(t.value-e.value)*100);return mn(()=>{a.value=document.body}),()=>p(oa,{name:"back-to-top"},()=>c.value?p("button",{type:"button",class:"vp-back-to-top-button","aria-label":s.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[p("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":l.value},p("svg",p("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*l.value*.48} ${Math.PI*(100-l.value)*.48}`}))),p("div",{class:"back-to-top-icon"})]):null)}}),ph=es({rootComponents:[oh]});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const un={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:n=>{const s=un.isStarted();n=Qe(n,un.settings.minimum,1),un.status=n===1?null:n;const a=un.render(!s),t=a.querySelector(un.settings.barSelector),e=un.settings.speed,o=un.settings.easing;return a.offsetWidth,ch(c=>{Zt(t,{transform:"translate3d("+Hc(n)+"%,0,0)",transition:"all "+e+"ms "+o}),n===1?(Zt(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(function(){Zt(a,{transition:"all "+e+"ms linear",opacity:"0"}),setTimeout(function(){un.remove(),c()},e)},e)):setTimeout(()=>c(),e)}),un},isStarted:()=>typeof un.status=="number",start:()=>{un.status||un.set(0);const n=()=>{setTimeout(()=>{un.status&&(un.trickle(),n())},un.settings.trickleSpeed)};return un.settings.trickle&&n(),un},done:n=>!n&&!un.status?un:un.inc(.3+.5*Math.random()).set(1),inc:n=>{let s=un.status;return s?(typeof n!="number"&&(n=(1-s)*Qe(Math.random()*s,.1,.95)),s=Qe(s+n,0,.994),un.set(s)):un.start()},trickle:()=>un.inc(Math.random()*un.settings.trickleRate),render:n=>{if(un.isRendered())return document.getElementById("nprogress");Fc(document.documentElement,"nprogress-busy");const s=document.createElement("div");s.id="nprogress",s.innerHTML=un.settings.template;const a=s.querySelector(un.settings.barSelector),t=n?"-100":Hc(un.status||0),e=document.querySelector(un.settings.parent);return Zt(a,{transition:"all 0 linear",transform:"translate3d("+t+"%,0,0)"}),e!==document.body&&Fc(e,"nprogress-custom-parent"),e==null||e.appendChild(s),s},remove:()=>{qc(document.documentElement,"nprogress-busy"),qc(document.querySelector(un.settings.parent),"nprogress-custom-parent");const n=document.getElementById("nprogress");n&&lh(n)},isRendered:()=>!!document.getElementById("nprogress")},Qe=(n,s,a)=>n<s?s:n>a?a:n,Hc=n=>(-1+n)*100,ch=function(){const n=[];function s(){const a=n.shift();a&&a(s)}return function(a){n.push(a),n.length===1&&s()}}(),Zt=function(){const n=["Webkit","O","Moz","ms"],s={};function a(c){return c.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(l,r){return r.toUpperCase()})}function t(c){const l=document.body.style;if(c in l)return c;let r=n.length;const i=c.charAt(0).toUpperCase()+c.slice(1);let u;for(;r--;)if(u=n[r]+i,u in l)return u;return c}function e(c){return c=a(c),s[c]??(s[c]=t(c))}function o(c,l,r){l=e(l),c.style[l]=r}return function(c,l){for(const r in l){const i=l[r];i!==void 0&&Object.prototype.hasOwnProperty.call(l,r)&&o(c,r,i)}}}(),ai=(n,s)=>(typeof n=="string"?n:ip(n)).indexOf(" "+s+" ")>=0,Fc=(n,s)=>{const a=ip(n),t=a+s;ai(a,s)||(n.className=t.substring(1))},qc=(n,s)=>{const a=ip(n);if(!ai(n,s))return;const t=a.replace(" "+s+" "," ");n.className=t.substring(1,t.length-1)},ip=n=>(" "+(n.className||"")+" ").replace(/\s+/gi," "),lh=n=>{n&&n.parentNode&&n.parentNode.removeChild(n)},rh=()=>{mn(()=>{const n=wa(),s=new Set;s.add(n.currentRoute.value.path),n.beforeEach(a=>{s.has(a.path)||un.start()}),n.afterEach(a=>{s.add(a.path),un.done()})})},ih=es({setup(){rh()}}),uh=JSON.parse(`{"encrypt":{},"author":{"name":"Dongcp","url":"https://github.com/simeis147"},"pageInfo":["Author","Date","Original","Word","ReadingTime","PageView","Category","Tag"],"docsDir":"docs","repo":"simeis147","darkmode":"toggle","contributors":true,"lastUpdated":true,"editLink":false,"breadcrumb":true,"breadcrumbIcon":true,"blog":{"description":"Master's degree in reading","intro":"/intro.html","avatar":"assets/theme/logo.png","roundAvatar":true,"medias":{"Gmail":"mailto:cpdong@gmail.com","Email":"mailto:24726259408@qq.com","GitHub":"https://github.com/simeis147","Gitee":"https://gitee.com/dong-chengpeng"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"⚙️ 便捷工具","children":[{"text":"文档","children":[{"text":"Markdown","icon":"/assets/icon/markdown.svg","link":"/Tools/MarkDown/"},{"text":"Resource","icon":"/assets/icon/resources.svg","link":"/Tools/Resource/"}]},{"text":"工具","children":[{"text":"Git","icon":"/assets/icon/git.svg","link":"/Tools/Git/"},{"text":"BugMemoir","icon":"/assets/icon/bug.svg","link":"https://simeis147.github.io/bug-memoir/"}]}]},{"text":"💻 基础知识","children":[{"text":"基础","children":[{"text":"计算机网络","icon":"/assets/icon/network.svg","link":"/ComputerBasics/ComputerNetwork/"},{"text":"操作系统","icon":"/assets/icon/os.svg","link":"/ComputerBasics/OpreatingSystem/"}]},{"text":"算法","children":[{"text":"数据结构","icon":"/assets/icon/dataStructure.svg","link":"/ComputerBasics/DataStructure/"},{"text":"算法","icon":"/assets/icon/algorithm.svg","link":"/ComputerBasics/Algorithm/"}]}]},{"text":"📑 数据存储","children":[{"text":"数据库基础和原理","children":[{"text":"数据库原理","icon":"/assets/icon/database.svg","link":"/Database/Basic/Principle/"},{"text":"SQL语言","icon":"/assets/icon/sql.svg","link":"/Database/Basic/Language/"}]},{"text":"SQL 数据库","children":[{"text":"Mysql详解","icon":"/assets/icon/mysql.svg","link":"/Database/SQL/"}]},{"text":"NoSQL 数据库","children":[{"text":"Redis详解","icon":"/assets/icon/redis.svg","link":"/Database/NoSQL/"}]}]},{"text":"🔬 后端相关","children":[{"text":"框架","children":[{"text":"MyBatisPlus","icon":"/assets/icon/mybatisplus.svg","link":"/BackEnd/MybatisPlus/"},{"text":"MyBatis","icon":"/assets/icon/mybatis.svg","link":"/BackEnd/MyBatis/"},{"text":"SpringCloud","icon":"/assets/icon/springcloud.svg","link":"/BackEnd/SpringCloud/"},{"text":"SpringBoot","icon":"/assets/icon/springboot.svg","link":"/BackEnd/SpringBoot/"},{"text":"SpringMVC","icon":"/assets/icon/springMVC.svg","link":"/BackEnd/SpringMVC/"},{"text":"Spring","icon":"/assets/icon/spring.svg","link":"/BackEnd/Spring/"}]},{"text":"理论知识","children":[{"text":"JavaWeb","icon":"/assets/icon/javaweb.svg","link":"/BackEnd/JavaWeb/"},{"text":"JavaSE","icon":"/assets/icon/java.svg","link":"/BackEnd/JavaSE/"}]}]},{"text":"🔭 前端相关","children":[{"text":"框架","children":[{"text":"Vue","icon":"/assets/icon/vue.svg","link":"/FrontEnd/Vue/"}]},{"text":"理论知识","children":[{"text":"JavaScript","icon":"/assets/icon/javascript.svg","link":"/FrontEnd/JavaScript/"},{"text":"CSS","icon":"/assets/icon/css.svg","link":"/FrontEnd/CSS/"},{"text":"HTML","icon":"/assets/icon/html.svg","link":"/FrontEnd/HTML/"}]}]},{"text":"📝 项目资源","link":"/Projects/"}],"sidebar":{"/Tools/Git/":"structure","/Tools/Git/*":"structure","/Tools/MarkDown/":"structure","/Tools/Resource/":"structure","/ComputerBasics/ComputerNetwork/":"structure","/ComputerBasics/Algorithm/":"structure","/ComputerBasics/Algorithm/*":"structure","/ComputerBasics/OpreatingSystem/":"structure","/ComputerBasics/OpreatingSystem/*":"structure","/ComputerBasics/DataStructure/":"structure","/ComputerBasics/DataStructure/*":"structure","/Database/Basic/Language/":"structure","/Database/Basic/Principle/":"structure","/Database/NoSQL/":"structure","/Database/SQL/":"structure","/BackEnd/JavaSE/":"structure","/BackEnd/JavaWeb/":"structure","/BackEnd/MyBatis/":"structure","/BackEnd/MybatisPlus/":"structure","/BackEnd/Spring/":"structure","/BackEnd/SpringBoot/":"structure","/BackEnd/SpringCloud/":"structure","/BackEnd/SpringMVC/":"structure","/FrontEnd/HTML/":"structure","/FrontEnd/CSS/":"structure","/FrontEnd/JavaScript/":"structure","/FrontEnd/Vue/":"structure","/Projects/reggietakeout/":"structure","/Projects/reggietakeout/*":"structure","/Projects/skytakeout/":"structure","/Projects/huike/":"structure","/Projects/chuanzhihealth/":"structure","/Projects/tjxt/":"structure","/Demo/":"structure"},"footer":"Powered by <a href=\\"https://v2.vuepress.vuejs.org/zh/\\" target=\\"_blank\\"> VuePress </a> | Theme <a href=\\"https://theme-hope.vuejs.press/zh/\\" target=\\"_blank\\"> Hope </a>","displayFooter":true,"copyright":"Copyright © 2023 - present  <center><script async src=\\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\\"><\/script><span id=\\"busuanzi_container_site_pv\\" style='display:none'>本站总访问量 <span id=\\"busuanzi_value_site_pv\\"></span> 次 </span> <span id=\\"busuanzi_container_site_uv\\" style='display:none'> | 本站访客数 <span id=\\"busuanzi_value_site_uv\\"></span> 人次 <span id=\\"busuanzi_container_page_pv\\" style='display:none'> | 本文总阅读量 <span id=\\"busuanzi_value_page_pv\\"></span> 次</center>"}},"navbarLayout":{"start":["Brand"],"center":["Links"],"end":["Language","Repo","Outlook","Search"]}}`),kh=J(uh),ti=()=>kh,ei=Symbol(""),dh=()=>{const n=yn(ei);if(!n)throw new Error("useThemeLocaleData() is called without provider.");return n},mh=(n,s)=>{const{locales:a,...t}=n;return{...t,...a==null?void 0:a[s]}},hh=es({enhance({app:n}){const s=ti(),a=n._context.provides[ap],t=_(()=>mh(s.value,a.routeLocale.value));n.provide(ei,t),Object.defineProperties(n.config.globalProperties,{$theme:{get(){return s.value}},$themeLocale:{get(){return t.value}}})}});var fh={provider:"Giscus",lightTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-rc.43/templates/giscus/light.css",darkTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-rc.43/templates/giscus/dark.css",repo:"simeis147/BlogGiscus",repoId:"R_kgDOKyHOLw",category:"Announcements",categoryId:"DIC_kwDOKyHOL84CbRA3"};const gh=fh,vh=J(gh),oi=Symbol(""),pi=()=>yn(oi),yh=pi,bh=n=>{n.provide(oi,vh)},ci=()=>p("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[p("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},p("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),p("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},p("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),p("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},p("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]);ci.displayName="LoadingIcon";const zc=["ar","ca","da","de","en","eo","es","fa","fr","he","id","it","ja","ko","nl","pl","pt","ro","ru","th","tr","uk","uz","vi","zh-CN","zh-TW"],_h=j({name:"GiscusComment",props:{identifier:{type:String,required:!0},darkmode:Boolean},setup(n){const s=yh(),a=tp(),t=_(()=>!!(s.value.repo&&s.value.repoId&&s.value.category&&s.value.categoryId)),e=J(!1),o=_(()=>{if(zc.includes(a.value))return a.value;const l=a.value.split("-")[0];return zc.includes(l)?l:"en"}),c=_(()=>({repo:s.value.repo,repoId:s.value.repoId,category:s.value.category,categoryId:s.value.categoryId,lang:o.value,theme:n.darkmode?s.value.darkTheme||"dark":s.value.lightTheme||"light",mapping:s.value.mapping||"pathname",term:n.identifier,inputPosition:s.value.inputPosition||"top",reactionsEnabled:s.value.reactionsEnabled===!1?"0":"1",strict:s.value.strict===!1?"0":"1",loading:s.value.lazyLoading===!1?"eager":"lazy",emitMetadata:"0"}));return mn(async()=>{await m(()=>import("./giscus--_FS5kYt.js"),[]),e.value=!0}),()=>t.value?p("div",{id:"comment",class:["giscus-wrapper",{"input-top":s.value.inputPosition!=="bottom"}]},e.value?p("giscus-widget",c.value):p(ci)):null}}),wh=j({name:"CommentService",props:{darkmode:Boolean},setup(n){const s=pi(),a=_n(),t=hn(),e=_(()=>s.value.comment!==!1),o=_(()=>t.value.comment||e.value&&t.value.comment!==!1);return()=>p(_h,{id:"vp-comment",identifier:t.value.commentID||a.value.path,darkmode:n.darkmode,style:{display:o.value?"block":"none"}})}}),Eh=es({enhance:({app:n})=>{bh(n),n.component("CommentService",wh)}}),Sh=/\b(?:Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini)/i,Ah=()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator&&Sh.test(navigator.userAgent),Lh=({delay:n=500,duration:s=2e3,locales:a,selector:t,showInMobile:e})=>{const{copy:o,copied:c}=h1({legacy:!0,copiedDuring:s}),l=qs(a),r=_n(),i=d=>{if(!d.hasAttribute("copy-code-registered")){const h=document.createElement("button");h.type="button",h.classList.add("vp-copy-code-button"),h.innerHTML='<div class="vp-copy-icon" />',h.setAttribute("aria-label",l.value.copy),h.setAttribute("data-copied",l.value.copied),d.parentElement&&d.parentElement.insertBefore(h,d),d.setAttribute("copy-code-registered","")}},u=()=>{Hs().then(()=>Pr(n)).then(()=>{t.forEach(d=>{document.querySelectorAll(d).forEach(i)})})},k=(d,h,g)=>{let{innerText:w=""}=h;/language-(shellscript|shell|bash|sh|zsh)/.test(d.classList.toString())&&(w=w.replace(/^ *(\$|>) /gm,"")),o(w).then(()=>{g.classList.add("copied"),en(c,()=>{g.classList.remove("copied"),g.blur()},{once:!0})})};mn(()=>{const d=!Ah()||e;d&&u(),Cn("click",h=>{const g=h.target;if(g.matches('div[class*="language-"] > button.copy')){const w=g.parentElement,E=g.nextElementSibling;E&&k(w,E,g)}else if(g.matches('div[class*="language-"] div.vp-copy-icon')){const w=g.parentElement,E=w.parentElement,b=w.nextElementSibling;b&&k(E,b,w)}}),en(()=>r.value.path,()=>{d&&u()})})};var xh={"/":{copy:"复制代码",copied:"已复制"}},Ch=['.theme-hope-content div[class*="language-"] pre'];const Oh=es({setup:()=>{Lh({selector:Ch,locales:xh,duration:2e3,delay:500,showInMobile:!1})}}),ne=Ae("VUEPRESS_CODE_TAB_STORE",{});var Bh=j({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(n,{slots:s}){const a=J(n.active),t=Bn([]),e=()=>{n.tabId&&(ne.value[n.tabId]=n.data[a.value].id)},o=(i=a.value)=>{a.value=i<t.value.length-1?i+1:0,t.value[a.value].focus()},c=(i=a.value)=>{a.value=i>0?i-1:t.value.length-1,t.value[a.value].focus()},l=(i,u)=>{i.key===" "||i.key==="Enter"?(i.preventDefault(),a.value=u):i.key==="ArrowRight"?(i.preventDefault(),o()):i.key==="ArrowLeft"&&(i.preventDefault(),c()),n.tabId&&(ne.value[n.tabId]=n.data[a.value].id)},r=()=>{if(n.tabId){const i=n.data.findIndex(({id:u})=>ne.value[n.tabId]===u);if(i!==-1)return i}return n.active};return mn(()=>{a.value=r(),en(()=>ne.value[n.tabId],(i,u)=>{if(n.tabId&&i!==u){const k=n.data.findIndex(({id:d})=>d===i);k!==-1&&(a.value=k)}})}),()=>n.data.length?p("div",{class:"vp-code-tabs"},[p("div",{class:"vp-code-tabs-nav",role:"tablist"},n.data.map(({id:i},u)=>{const k=u===a.value;return p("button",{type:"button",ref:d=>{d&&(t.value[u]=d)},class:["vp-code-tab-nav",{active:k}],role:"tab","aria-controls":`codetab-${n.id}-${u}`,"aria-selected":k,onClick:()=>{a.value=u,e()},onKeydown:d=>l(d,u)},s[`title${u}`]({value:i,isActive:k}))})),n.data.map(({id:i},u)=>{const k=u===a.value;return p("div",{class:["vp-code-tab",{active:k}],id:`codetab-${n.id}-${u}`,role:"tabpanel","aria-expanded":k},[p("div",{class:"vp-code-tab-title"},s[`title${u}`]({value:i,isActive:k})),s[`tab${u}`]({value:i,isActive:k})])})]):null}});const li=({active:n=!1},{slots:s})=>{var a;return p("div",{class:["code-group-item",{active:n}],"aria-selected":n},(a=s.default)==null?void 0:a.call(s))};li.displayName="CodeGroupItem";const Ih=j({name:"CodeGroup",slots:Object,setup(n,{slots:s}){const a=J(-1),t=Bn([]),e=(l=a.value)=>{a.value=l<t.value.length-1?l+1:0,t.value[a.value].focus()},o=(l=a.value)=>{a.value=l>0?l-1:t.value.length-1,t.value[a.value].focus()},c=(l,r)=>{l.key===" "||l.key==="Enter"?(l.preventDefault(),a.value=r):l.key==="ArrowRight"?(l.preventDefault(),e(r)):l.key==="ArrowLeft"&&(l.preventDefault(),o(r))};return()=>{var r;const l=(((r=s.default)==null?void 0:r.call(s))||[]).filter(i=>i.type.name==="CodeGroupItem").map(i=>(i.props===null&&(i.props={}),i));return l.length===0?null:(a.value<0||a.value>l.length-1?(a.value=l.findIndex(i=>"active"in i.props),a.value===-1&&(a.value=0)):l.forEach((i,u)=>{i.props.active=u===a.value}),p("div",{class:"code-group"},[p("div",{class:"code-group-nav"},l.map((i,u)=>{const k=u===a.value;return p("button",{type:"button",ref:d=>{d&&(t.value[u]=d)},class:["code-group-nav-tab",{active:k}],"aria-pressed":k,"aria-expanded":k,onClick:()=>{a.value=u},onKeydown:d=>c(d,u)},i.props.title)})),l]))}}}),Th='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',Ph='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',Dh='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>';var Rh={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const Ke=Rh,Gc={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},Mh=(n,s,a)=>{const t=document.createElement(n);return Ot(s)&&hs(s).forEach(e=>{if(e.indexOf("data"))t[e]=s[e];else{const o=e.replace("data","");t.dataset[o]=s[e]}}),t},up=n=>({...Ke,...n,jsLib:Array.from(new Set([...Ke.jsLib??[],...n.jsLib??[]])),cssLib:Array.from(new Set([...Ke.cssLib??[],...n.cssLib??[]]))}),Pa=(n,s)=>{if(Tr(n[s]))return n[s];const a=new Promise(t=>{var o;const e=document.createElement("script");e.src=s,(o=document.querySelector("body"))==null||o.appendChild(e),e.onload=()=>{t()}});return n[s]=a,a},jh=(n,s)=>{if(s.css&&Array.from(n.childNodes).every(a=>a.nodeName!=="STYLE")){const a=Mh("style",{innerHTML:s.css});n.appendChild(a)}},Vh=(n,s,a)=>{const t=a.getScript();if(t&&Array.from(s.childNodes).every(e=>e.nodeName!=="SCRIPT")){const e=document.createElement("script");e.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${n} .vp-code-demo-display').shadowRoot;
${t}}`)),s.appendChild(e)}},Nh=["html","js","css"],$h=n=>{const s=hs(n),a={html:[],js:[],css:[],isLegal:!1};return Nh.forEach(t=>{const e=s.filter(o=>Gc[t].types.includes(o));if(e.length){const o=e[0];a[t]=[n[o].replace(/^\n|\n$/g,""),Gc[t].map[o]??o]}}),a.isLegal=(!a.html.length||a.html[1]==="none")&&(!a.js.length||a.js[1]==="none")&&(!a.css.length||a.css[1]==="none"),a},ri=n=>n.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),ii=n=>`<div id="app">
${ri(n)}
</div>`,Hh=n=>`${n.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,Fh=n=>n.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),ui=n=>`(function(exports){var module={};module.exports=exports;${n};return module.exports.__esModule?module.exports.default:module.exports;})({})`,qh=(n,s)=>{const a=up(s),t=n.js[0]??"";return{...a,html:ri(n.html[0]??""),js:t,css:n.css[0]??"",isLegal:n.isLegal,getScript:()=>{var e;return a.useBabel?((e=window.Babel.transform(t,{presets:["es2015"]}))==null?void 0:e.code)??"":t}}},zh=/<template>([\s\S]+)<\/template>/u,Gh=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,Jh=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,Uh=(n,s)=>{const a=up(s),t=n.html[0]??"",e=zh.exec(t),o=Gh.exec(t),c=Jh.exec(t),l=(e==null?void 0:e[1].replace(/^\n|\n$/g,""))??"",[r="",i=""]=o?[o[4].replace(/^\n|\n$/g,""),o[3]]:[],[u="",k=""]=c?[c[4].replace(/^\n|\n$/g,""),c[3]]:[],d=i===""&&(k===""||k==="css");return{...a,html:ii(l),js:Fh(r),css:u,isLegal:d,jsLib:[a.vue,...a.jsLib],getScript:()=>{var g,w;const h=s.useBabel?((w=(g=window.Babel)==null?void 0:g.transform(r,{presets:["es2015"]}))==null?void 0:w.code)??"":r.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${ui(h)};appOptions.template=\`${l.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},Wh=(n,s)=>{var e;const a=up(s),t=n.js[0]??"";return{...a,html:ii(""),js:Hh(t),css:n.css[0]??((e=n.js[0])==null?void 0:e.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:n.isLegal,jsLib:[a.react,a.reactDOM,...a.jsLib],jsx:!0,getScript:()=>{var c,l;const o=((l=(c=window.Babel)==null?void 0:c.transform(t,{presets:["es2015","react"]}))==null?void 0:l.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${ui(o)}))`}}},Da={},Qh=n=>Promise.all([Pa(Da,n.babel),Pa(Da,n.react),Pa(Da,n.reactDOM)]),Kh=n=>{const s=[Pa(Da,n.vue)];return n.useBabel&&s.push(Pa(Da,n.babel)),Promise.all(s)},Yh=n=>n.useBabel?Pa(Da,n.babel):Promise.resolve();var Xh=j({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(n,{slots:s}){const[a,t]=gt(!1),e=Bn(),o=Bn(),c=J("0"),l=J(!1),r=_(()=>JSON.parse(n.config?Pc(n.config):"{}")),i=_(()=>{const g=JSON.parse(Pc(n.code));return $h(g)}),u=_(()=>n.type==="react"?Wh(i.value,r.value):n.type==="vue"?Uh(i.value,r.value):qh(i.value,r.value)),k=_(()=>u.value.isLegal),d=(g=!1)=>{const w=e.value.attachShadow({mode:"open"}),E=document.createElement("div");E.classList.add("code-demo-app"),w.appendChild(E),k.value?(g&&(E.innerHTML=u.value.html),jh(w,u.value),Vh(n.id,w,u.value),c.value="0"):c.value="auto",l.value=!0},h=()=>{switch(n.type){case"react":return Qh(u.value).then(()=>d());case"vue":return Kh(u.value).then(()=>d());default:return Yh(u.value).then(()=>d(!0))}};return Cn("beforeprint",()=>{t(!0)}),mn(()=>{setTimeout(()=>{h()},800)}),()=>{var g;return p("div",{class:"vp-code-demo",id:n.id},[p("div",{class:"vp-code-demo-header"},[u.value.isLegal?p("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",a.value?"down":"end"],onClick:()=>{c.value=a.value?"0":`${o.value.clientHeight+13.8}px`,t()}}):null,n.title?p("span",{class:"vp-code-demo-title"},decodeURIComponent(n.title)):null,u.value.isLegal&&u.value.jsfiddle!==!1?p("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[p("input",{type:"hidden",name:"html",value:u.value.html}),p("input",{type:"hidden",name:"js",value:u.value.js}),p("input",{type:"hidden",name:"css",value:u.value.css}),p("input",{type:"hidden",name:"wrap",value:"1"}),p("input",{type:"hidden",name:"panel_js",value:"3"}),p("input",{type:"hidden",name:"resources",value:[...u.value.cssLib,...u.value.jsLib].join(",")}),p("button",{type:"submit",class:"jsfiddle-button",innerHTML:Ph,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!u.value.isLegal||u.value.codepen!==!1?p("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[p("input",{type:"hidden",name:"data",value:JSON.stringify({html:u.value.html,js:u.value.js,css:u.value.css,js_external:u.value.jsLib.join(";"),css_external:u.value.cssLib.join(";"),layout:u.value.codepenLayout,html_pre_processor:i.value?i.value.html[1]:"none",js_pre_processor:i.value?i.value.js[1]:u.value.jsx?"babel":"none",css_pre_processor:i.value?i.value.css[1]:"none",editors:u.value.codepenEditors})}),p("button",{type:"submit",innerHTML:Th,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),l.value?null:p($r,{class:"vp-code-demo-loading"}),p("div",{ref:e,class:"vp-code-demo-display",style:{display:k.value&&l.value?"block":"none"}}),p("div",{class:"vp-code-demo-code-wrapper",style:{height:c.value}},p("div",{ref:o,class:"vp-code-demo-codes"},(g=s.default)==null?void 0:g.call(s)))])}}}),Zh=j({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(n,{slots:s}){const[a,t]=gt(!1),e=Bn(),o=J("0");return Cn("beforeprint",()=>{t(!0)}),()=>{var c,l;return p("div",{class:"vp-md-demo",id:n.id},[p("div",{class:"vp-md-demo-header"},[p("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",a.value?"down":"end"],onClick:()=>{o.value=a.value?"0":`${e.value.clientHeight+13.8}px`,t()}}),n.title?decodeURIComponent(n.title):null]),p("div",{class:"vp-md-demo-display"},(c=s.default)==null?void 0:c.call(s)),p("div",{class:"vp-md-demo-code-wrapper",style:{height:o.value}},p("div",{ref:e,class:"vp-md-demo-codes"},(l=s.code)==null?void 0:l.call(s)))])}}});const n2=()=>{Cn("beforeprint",()=>{document.querySelectorAll("details").forEach(n=>{n.open=!0})})},ki=({title:n="",link:s})=>p("div",{class:"vp-playground"},[p("div",{class:"vp-playground-header"},[n?p("div",{class:"vp-playground-title"},decodeURIComponent(n)):null,p("div",{class:"vp-playground-actions"},[p("a",{class:"vp-playground-action",href:decodeURIComponent(s),target:"_blank",innerHTML:Dh})])]),p("div",{class:"vp-playground-container"},p("iframe",{src:decodeURIComponent(s)}))]);ki.displayName="Playground";const Ye=Ae("VUEPRESS_TAB_STORE",{});var s2=j({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(n,{slots:s}){const a=J(n.active),t=Bn([]),e=()=>{n.tabId&&(Ye.value[n.tabId]=n.data[a.value].id)},o=(i=a.value)=>{a.value=i<t.value.length-1?i+1:0,t.value[a.value].focus()},c=(i=a.value)=>{a.value=i>0?i-1:t.value.length-1,t.value[a.value].focus()},l=(i,u)=>{i.key===" "||i.key==="Enter"?(i.preventDefault(),a.value=u):i.key==="ArrowRight"?(i.preventDefault(),o()):i.key==="ArrowLeft"&&(i.preventDefault(),c()),e()},r=()=>{if(n.tabId){const i=n.data.findIndex(({id:u})=>Ye.value[n.tabId]===u);if(i!==-1)return i}return n.active};return mn(()=>{a.value=r(),en(()=>Ye.value[n.tabId],(i,u)=>{if(n.tabId&&i!==u){const k=n.data.findIndex(({id:d})=>d===i);k!==-1&&(a.value=k)}})}),()=>n.data.length?p("div",{class:"vp-tabs"},[p("div",{class:"vp-tabs-nav",role:"tablist"},n.data.map(({id:i},u)=>{const k=u===a.value;return p("button",{type:"button",ref:d=>{d&&(t.value[u]=d)},class:["vp-tab-nav",{active:k}],role:"tab","aria-controls":`tab-${n.id}-${u}`,"aria-selected":k,onClick:()=>{a.value=u,e()},onKeydown:d=>l(d,u)},s[`title${u}`]({value:i,isActive:k}))})),n.data.map(({id:i},u)=>{const k=u===a.value;return p("div",{class:["vp-tab",{active:k}],id:`tab-${n.id}-${u}`,role:"tabpanel","aria-expanded":k},[p("div",{class:"vp-tab-title"},s[`title${u}`]({value:i,isActive:k})),s[`tab${u}`]({value:i,isActive:k})])})]):null}});const a2=es({enhance:({app:n})=>{n.component("CodeTabs",Bh),Wn("CodeGroup",n)||n.component("CodeGroup",Ih),Wn("CodeGroupItem",n)||n.component("CodeGroupItem",li),n.component("CodeDemo",Xh),n.component("MdDemo",Zh),n.component("Playground",ki),n.component("Tabs",s2)},setup:()=>{n2()}}),t2=J({}),di=Symbol(""),e2=()=>yn(di),o2=n=>{n.provide(di,t2)},p2='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',c2=n=>xn(n)?Array.from(document.querySelectorAll(n)):n.map(s=>Array.from(document.querySelectorAll(s))).flat(),mi=n=>new Promise((s,a)=>{n.complete?s({type:"image",element:n,src:n.src,width:n.naturalWidth,height:n.naturalHeight,alt:n.alt,msrc:n.src}):(n.onload=()=>s(mi(n)),n.onerror=t=>a(t))}),l2=n=>{const{isSupported:s,toggle:a}=pp();n.on("uiRegister",()=>{s.value&&n.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{a()}}),n.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(t,e)=>{t.setAttribute("download",""),t.setAttribute("target","_blank"),t.setAttribute("rel","noopener"),e.on("change",()=>{t.setAttribute("href",e.currSlide.data.src)})}}),n.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(t,e)=>{const o=[];let c=-1;for(let l=0;l<e.getNumItems();l++){const r=document.createElement("div");r.className="photo-swipe-bullet",r.onclick=i=>{e.goTo(o.indexOf(i.target))},o.push(r),t.appendChild(r)}e.on("change",()=>{c>=0&&o[c].classList.remove("active"),o[e.currIndex].classList.add("active"),c=e.currIndex})}})})},r2=(n,s,a=!0)=>m(()=>import("./photoswipe.esm-SzV8tJDW.js"),[]).then(({default:t})=>{let e=null;const o=n.map(c=>({html:p2,element:c,msrc:c.src}));return n.forEach((c,l)=>{const r=()=>{e==null||e.destroy(),e=new t({preloaderDelay:0,showHideAnimationType:"zoom",...s,dataSource:o,index:l,...a?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),l2(e),e.addFilter("thumbEl",()=>c),e.addFilter("placeholderSrc",()=>c.src),e.init()};c.getAttribute("photo-swipe")||(c.style.cursor="zoom-in",c.addEventListener("click",()=>{r()}),c.addEventListener("keypress",({key:i})=>{i==="Enter"&&r()}),c.setAttribute("photo-swipe","")),mi(c).then(i=>{o.splice(l,1,i),e==null||e.refreshSlideContent(l)})}),a?Cn("wheel",()=>{e==null||e.close()}):()=>{}}),i2=({selector:n,locales:s,delay:a=500,scrollToClose:t=!0})=>{const e=e2(),o=qs(s),c=_n(),l=hn();let r=null;const i=()=>{const{photoSwipe:u}=l.value;u!==!1&&Hs().then(()=>Pr(a)).then(async()=>{const k=xn(u)?u:n;r=await r2(c2(k),{...e.value,...o.value},t)})};mn(()=>{i(),en(()=>[c.value.path,e.value],()=>{r==null||r(),i()})}),ba(()=>{r==null||r()})};var u2={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const k2=".theme-hope-content :not(a) > img:not([no-view])",d2=u2,m2=800,h2=!0,f2=es({enhance:({app:n})=>{o2(n)},setup:()=>{i2({selector:k2,delay:m2,locales:d2,scrollToClose:h2})}}),g2=()=>p(cn,{name:"heading"},()=>p("path",{d:"M250.4 704.6H64V595.4h202.4l26.2-166.6H94V319.6h214.4L352 64h127.8l-43.6 255.4h211.2L691 64h126.2l-43.6 255.4H960v109.2H756.2l-24.6 166.6H930v109.2H717L672 960H545.8l43.6-255.4H376.6L333 960H206.8l43.6-255.4zm168.4-276L394 595.4h211.2l24.6-166.6h-211z"}));g2.displayName="HeadingIcon";const v2=()=>p(cn,{name:"heart"},()=>p("path",{d:"M1024 358.156C1024 195.698 892.3 64 729.844 64c-86.362 0-164.03 37.218-217.844 96.49C458.186 101.218 380.518 64 294.156 64 131.698 64 0 195.698 0 358.156 0 444.518 37.218 522.186 96.49 576H96l320 320c32 32 64 64 96 64s64-32 96-64l320-320h-.49c59.272-53.814 96.49-131.482 96.49-217.844zM841.468 481.232 517.49 805.49a2981.962 2981.962 0 0 1-5.49 5.48c-1.96-1.95-3.814-3.802-5.49-5.48L182.532 481.234C147.366 449.306 128 405.596 128 358.156 128 266.538 202.538 192 294.156 192c47.44 0 91.15 19.366 123.076 54.532L512 350.912l94.768-104.378C638.696 211.366 682.404 192 729.844 192 821.462 192 896 266.538 896 358.156c0 47.44-19.368 91.15-54.532 123.076z"}));v2.displayName="HeartIcon";const y2=()=>p(cn,{name:"history"},()=>p("path",{d:"M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zm0-896a384 384 0 1 0 384 384 384 384 0 0 0-384-384zm192 448H512a64 64 0 0 1-64-64V320a64 64 0 0 1 128 0v128h128a64 64 0 0 1 0 128z"}));y2.displayName="HistoryIcon";const b2=()=>p(cn,{name:"title"},()=>p("path",{d:"M512 256c70.656 0 134.656 28.672 180.992 75.008A254.933 254.933 0 0 1 768 512c0 83.968-41.024 157.888-103.488 204.48C688.96 748.736 704 788.48 704 832c0 105.984-86.016 192-192 192-106.048 0-192-86.016-192-192h128a64 64 0 1 0 128 0 64 64 0 0 0-64-64 255.19 255.19 0 0 1-181.056-75.008A255.403 255.403 0 0 1 256 512c0-83.968 41.024-157.824 103.488-204.544C335.04 275.264 320 235.584 320 192A192 192 0 0 1 512 0c105.984 0 192 85.952 192 192H576a64.021 64.021 0 0 0-128 0c0 35.328 28.672 64 64 64zM384 512c0 70.656 57.344 128 128 128s128-57.344 128-128-57.344-128-128-128-128 57.344-128 128z"}));b2.displayName="TitleIcon";const kp=()=>p(cn,{name:"search"},()=>p("path",{d:"M192 480a256 256 0 1 1 512 0 256 256 0 0 1-512 0m631.776 362.496-143.2-143.168A318.464 318.464 0 0 0 768 480c0-176.736-143.264-320-320-320S128 303.264 128 480s143.264 320 320 320a318.016 318.016 0 0 0 184.16-58.592l146.336 146.368c12.512 12.48 32.768 12.48 45.28 0 12.48-12.512 12.48-32.768 0-45.28"}));kp.displayName="SearchIcon";const hi=()=>p("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[p("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},p("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),p("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},p("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),p("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},p("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]);hi.displayName="LoadingIcon";const fi=({hint:n})=>p("div",{class:"search-pro-result-wrapper loading"},[p(hi),n]);fi.displayName="SearchLoading";const _2='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg>';var w2={0:"分类：$content",1:"标签：$content"},E2={"/":{cancel:"取消",placeholder:"搜索",search:"搜索",searching:"搜索中",defaultTitle:"文档",select:"选择",navigate:"切换",autocomplete:"自动补全",exit:"关闭",queryHistory:"搜索历史",resultHistory:"历史结果",emptyHistory:"无搜索历史",emptyResult:"没有找到结果",loading:"正在加载搜索索引..."}},S2={searchDelay:150,suggestDelay:0,queryHistoryCount:5,resultHistoryCount:5,hotKeys:[{key:"k",ctrl:!0},{key:"/",ctrl:!0}],worker:"search-pro.worker.js"};const de=S2,Gg=w2,gi=de.hotKeys,dp=E2,Xe="Canceled because of new search request.",A2=()=>{const n=new Worker(`/${de.worker}`,{}),s={suggest:null,search:null,all:null};return n.addEventListener("message",({data:a})=>{const[t,e,o]=a,c=s[t];(c==null?void 0:c.id)===e&&c.resolve(o)}),n.addEventListener("error",a=>{console.error("Search Worker error:",a)}),{suggest:(a,t,e)=>new Promise((o,c)=>{var r;(r=s.suggest)==null||r.reject(new Error(Xe));const l=Date.now();n.postMessage({type:"suggest",id:l,query:a,locale:t,options:e}),s.suggest={id:l,resolve:o,reject:c}}),search:(a,t,e)=>new Promise((o,c)=>{var r;(r=s.search)==null||r.reject(new Error(Xe));const l=Date.now();n.postMessage({type:"search",id:l,query:a,locale:t,options:e}),s.search={id:l,resolve:o,reject:c}}),all:(a,t,e)=>new Promise((o,c)=>{var r;(r=s.all)==null||r.reject(new Error(Xe));const l=Date.now();n.postMessage({type:"all",id:l,query:a,locale:t,options:e}),s.all={id:l,resolve:o,reject:c}}),terminate:()=>{n.terminate(),Qm(s).forEach(a=>{a==null||a.reject(new Error("Worker has been terminated."))})}}};let L2={};const vi=Symbol(""),yi=()=>{const n=Ss(),{locales:s={},...a}=yn(vi);return _(()=>({...a,...s[n.value]}))},x2=n=>{n.provide(vi,L2)},C2=(n,s=!1)=>{const a=J(0),t=_(()=>n.value[a.value]),e=()=>{a.value=a.value>0?a.value-1:n.value.length-1},o=()=>{a.value=a.value<n.value.length-1?a.value+1:0};return en(n,()=>{s||(a.value=0)}),{index:a,item:t,prev:e,next:o}},O2=n=>n instanceof Element?document.activeElement===n&&(["TEXTAREA","SELECT","INPUT"].includes(n.tagName)||n.hasAttribute("contenteditable")):!1,B2=n=>gi.some(s=>{const{key:a,ctrl:t=!1,shift:e=!1,alt:o=!1,meta:c=!1}=s;return a===n.key&&t===n.ctrlKey&&e===n.shiftKey&&o===n.altKey&&c===n.metaKey}),I2='<svg width="15" height="15" aria-label="Enter key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M12 3.53088v3c0 1-1 2-2 2H4M7 11.53088l-3-3 3-3"></path></g></svg>',T2='<svg width="15" height="15" aria-label="Arrow down" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 3.5v8M10.5 8.5l-3 3-3-3"></path></g></svg>',P2='<svg width="15" height="15" aria-label="Arrow up" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 11.5v-8M10.5 6.5l-3-3-3 3"></path></g></svg>',D2='<svg width="15" height="15" aria-label="Escape key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M13.6167 8.936c-.1065.3583-.6883.962-1.4875.962-.7993 0-1.653-.9165-1.653-2.1258v-.5678c0-1.2548.7896-2.1016 1.653-2.1016.8634 0 1.3601.4778 1.4875 1.0724M9 6c-.1352-.4735-.7506-.9219-1.46-.8972-.7092.0246-1.344.57-1.344 1.2166s.4198.8812 1.3445.9805C8.465 7.3992 8.968 7.9337 9 8.5c.032.5663-.454 1.398-1.4595 1.398C6.6593 9.898 6 9 5.963 8.4851m-1.4748.5368c-.2635.5941-.8099.876-1.5443.876s-1.7073-.6248-1.7073-2.204v-.4603c0-1.0416.721-2.131 1.7073-2.131.9864 0 1.6425 1.031 1.5443 2.2492h-2.956"></path></g></svg>',mp=Symbol(""),R2=()=>{const n=J(!1);ds(mp,n)},M2=n=>{const s=J([]);{const a=yi(),t=_n(),e=Ss();mn(()=>{const{suggest:o,terminate:c}=A2(),l=r=>{const i=r.join(" "),{searchFilter:u,splitWord:k,suggestionsFilter:d=g=>g,...h}=a.value;i?o(i,e.value,h).then(g=>d(g,i,e.value,t.value)).then(g=>{s.value=g.length?Na(g[0],i)&&!g[0].slice(i.length).includes(" ")?g:[i,...g]:[]}).catch(g=>{console.warn(g)}):s.value=[]};en([n,e],([r])=>l(r),{immediate:!0}),ba(()=>{c()})})}return{suggestions:s}},Ze=gi[0];var j2=j({name:"SearchBox",setup(){const n=qs(dp),s=yn(mp),a=J(!1),t=_(()=>Ze?[(a.value?["⌃","⇧","⌥","⌘"]:["Ctrl","Shift","Alt","Win"]).filter((e,o)=>Ze[["ctrl","shift","alt","meta"][o]]),Ze.key.toUpperCase()]:null);return Cn("keydown",e=>{!s.value&&B2(e)&&!O2(e.target)&&(e.preventDefault(),s.value=!0)}),mn(()=>{const{userAgent:e}=navigator;a.value=j1(e)||M1(e)||R1(e)}),()=>[p("button",{type:"button",class:"search-pro-button","aria-label":n.value.search,onClick:()=>{s.value=!0}},[p(kp),p("div",{class:"search-pro-placeholder"},n.value.search),t.value?p("div",{class:"search-pro-key-hints"},t.value.map(e=>p("kbd",{class:"search-pro-key"},e))):null])]}});const V2=Rl({loader:()=>m(()=>import("./SearchResult-D5gedVpY.js"),[]),loadingComponent:()=>{const n=qs(dp);return p(fi,{hint:n.value.loading})}});var N2=j({name:"SearchModal",setup(){const n=yn(mp),s=za(),a=D1(),t=qs(dp),e=yi(),o=J(""),c=J([]),{suggestions:l}=M2(c),r=J(!1),{index:i,prev:u,next:k}=C2(l),d=Bn(),h=Bn(),g=(E=i.value)=>{o.value=l.value[E],r.value=!1};Cn("keydown",E=>{r.value?E.key==="ArrowUp"?u():E.key==="ArrowDown"?k():E.key==="Enter"?g():E.key==="Escape"&&(r.value=!1):E.key==="Escape"&&(n.value=!1)});const w=Rr(()=>{var E,b;(((b=(E=e.value).splitWord)==null?void 0:b.call(E,o.value))??Promise.resolve(o.value.split(" "))).then(S=>{c.value=S})},Math.min(de.searchDelay,de.suggestDelay));return en(o,w,{immediate:!0}),mn(()=>{const E=cp(document.body);en(n,async b=>{var S;E.value=b,b&&(await Hs(),(S=d.value)==null||S.focus())}),k1(h,()=>{r.value=!1}),ba(()=>{E.value=!1})}),()=>n.value?p("div",{class:"search-pro-modal-wrapper"},[p("div",{class:"search-pro-mask",onClick:()=>{n.value=!1,o.value=""}}),p("div",{class:"search-pro-modal"},[p("div",{class:"search-pro-box"},[p("form",[p("label",{for:"search-pro","aria-label":t.value.search},p(kp)),p("input",{ref:d,type:"search",class:"search-pro-input",id:"search-pro",placeholder:t.value.placeholder,spellcheck:"false",autocapitalize:"off",autocomplete:"off",autocorrect:"off",name:`${s.value.title}-search`,value:o.value,"aria-controls":"search-pro-results",onKeydown:E=>{const{key:b}=E;l.value.length&&(b==="Tab"?(g(),E.preventDefault()):(b==="ArrowDown"||b==="ArrowUp"||b==="Escape")&&E.preventDefault())},onInput:({target:E})=>{o.value=E.value,r.value=!0,i.value=0}}),o.value?p("button",{type:"reset",class:"search-pro-clear-button",innerHTML:_2,onClick:()=>{o.value=""}}):null,r.value&&l.value.length?p("ul",{class:"search-pro-suggestions",ref:h},l.value.map((E,b)=>p("li",{class:["search-pro-suggestion",{active:b===i.value}],onClick:()=>{g(b)}},[p("kbd",{class:"search-pro-auto-complete",title:`Tab ${t.value.autocomplete}`},"Tab"),E]))):null]),p("button",{type:"button",class:"search-pro-close-button",onClick:()=>{n.value=!1,o.value=""}},t.value.cancel)]),p(V2,{queries:c.value,isFocusing:!r.value,onClose:()=>{n.value=!1},onUpdateQuery:E=>{o.value=E}}),a.value?null:p("div",{class:"search-pro-hints"},[p("span",{class:"search-pro-hint"},[p("kbd",{innerHTML:I2}),t.value.select]),p("span",{class:"search-pro-hint"},[p("kbd",{innerHTML:P2}),p("kbd",{innerHTML:T2}),t.value.navigate]),p("span",{class:"search-pro-hint"},[p("kbd",{innerHTML:D2}),t.value.exit])])])]):null}}),$2=es({enhance({app:n}){x2(n),n.component("SearchBox",j2)},setup(){R2()},rootComponents:[N2]});const bi=()=>{const n=_n();return _(()=>n.value.readingTime??null)},_i=(n,s)=>{const{minutes:a,words:t}=n,{less1Minute:e,word:o,time:c}=s;return{time:a<1?e:c.replace("$time",Math.round(a).toString()),words:o.replace("$word",t.toString())}};var Jc={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const Uc={words:"",time:""},wo=typeof Jc>"u"?null:Jc,wi=()=>wo?qs(wo):_(()=>null),H2=()=>{if(typeof wo>"u")return _(()=>Uc);const n=bi(),s=wi();return _(()=>n.value&&s.value?_i(n.value,s.value):Uc)},Ps=()=>ti(),ln=()=>dh(),Yn=()=>{const n=Ps();return _(()=>!!n.value.pure)},ee=()=>null,F2="719px",q2="1440px",z2="true",G2="9",zs={mobileBreakPoint:F2,pcBreakPoint:q2,enableThemeColor:z2,"theme-1":"#2196f3","theme-2":"#f26d6d","theme-3":"#fb9b5f","theme-4":"#7f8c8d",colorNumber:G2},hp={"/Tools/Git/":["",{text:"1 手册",prefix:"01Manual/",collapsible:!0,children:["manual01","manual02","manual03"]},{text:"2 文档笔记",prefix:"02DocumentNotes/",collapsible:!0,children:["documentnotes01","documentnotes02","documentnotes03","documentnotes04","documentnotes05","documentnotes06","documentnotes07","documentnotes08","documentnotes09","documentnotes10","documentnotes11"]}],"/Tools/Git/*":[],"/Tools/MarkDown/":["","markdown01"],"/Tools/Resource/":[""],"/ComputerBasics/ComputerNetwork/":["","computernetword01","computernetwork02",{text:"计算机网络面试题",prefix:"01cn/",collapsible:!0,children:["cn01","cn02","cn03"]}],"/ComputerBasics/Algorithm/":["",{text:"01 数组",prefix:"01Arrays/",collapsible:!0,children:["arrays01","arrays02","arrays03","arrays04","arrays05"]},{text:"02 链表",prefix:"02LinkedList/",collapsible:!0,children:["linkedlist01","linkedlist02","linkedlist03","linkedlist04","linkedlist05","linkedlist06","linkedlist07","linkedlist08"]},{text:"03 哈希表",prefix:"03HashTable/",collapsible:!0,children:["hashtable01","hashtable02","hashtable03","hashtable04","hashtable05","hashtable06","hashtable07","hashtable08","hashtable09"]},{text:"04 字符串",prefix:"04String/",collapsible:!0,children:["String01","String02","String03","String04","String05","String06","String07"]},{text:"05 双指针法",prefix:"05DoublePointer/",collapsible:!0,children:["doublePointer01","doublePointer02","doublePointer03","doublePointer04","doublePointer05","doublePointer06","doublePointer07","doublePointer08","doublePointer09","doublePointer10"]},{text:"06 栈与队列",prefix:"06StacksAndQueues/",collapsible:!0,children:["stacksAndQueues01","stacksAndQueues02","stacksAndQueues03","stacksAndQueues04","stacksAndQueues05","stacksAndQueues06","stacksAndQueues07"]},{text:"07 二叉树",prefix:"07BinaryTree/",collapsible:!0,children:[]},{text:"08 回溯算法",prefix:"08BacktrackingAlgorithm/",collapsible:!0,children:[]},{text:"09 贪心算法",prefix:"09GreedyAlgorithm/",collapsible:!0,children:[]},{text:"10 动态规划",prefix:"10DynamicProgramming/",collapsible:!0,children:[]},{text:"11 单调栈",prefix:"11MonotonicStack/",collapsible:!0,children:[]},{text:"12 总结",prefix:"12Summary/",collapsible:!0,children:["summary01"]}],"/ComputerBasics/Algorithm/*":[],"/ComputerBasics/OpreatingSystem/":["",{text:"操作系统面试题",prefix:"OSInterview/",collapsible:!0,children:["osi01","osi02","osi03"]}],"/ComputerBasics/OpreatingSystem/*":[],"/ComputerBasics/DataStructure/":["",{text:"中间件与其他专业技能",prefix:"02MO/",collapsible:!0,children:["mo01","mo02","mo03"]},{text:"数据结构与算法面试题",prefix:"01DS/",collapsible:!0,children:["ds01","/ComputerBasics/DataStructure/01DS/ds02_.html","ds03"]}],"/ComputerBasics/DataStructure/*":[],"/Database/Basic/Language/":[""],"/Database/Basic/Principle/":["",{text:"数据库面试题",prefix:"DBInterview/",collapsible:!0,children:["dbi01","dbi02","dbi03"]}],"/Database/NoSQL/":[""],"/Database/SQL/":["",{text:"MySQL基础篇",prefix:"01Basics/",collapsible:!0,children:["sql01","sql02","sql03","sql04"]},{text:"MySQL进阶篇",prefix:"02Advanced/",collapsible:!0,children:["advanced01"]},{text:"MySQL运维篇",prefix:"03OperationAndMaintenance/",collapsible:!0,children:["oam01"]}],"/BackEnd/JavaSE/":["","Javase01","Javase02","Javase03","Javase04","Javase05","Javase06","Javase07","Javase08","Javase09","Javase10","Javase11","Javase12"],"/BackEnd/JavaWeb/":["","javaweb01","javaweb02","javaweb03"],"/BackEnd/MyBatis/":["","mybatis01","mybatis02","mybatis03","mybatis04","mybatis05","mybatis06","mybatis07"],"/BackEnd/MybatisPlus/":["","mybatisplus01","mybatisplus02"],"/BackEnd/Spring/":["","spring01","spring02","spring03"],"/BackEnd/SpringBoot/":["","springboot01","springboot02","springboot03","springboot04","springboot05","springboot06","springboot07","springboot08"],"/BackEnd/SpringCloud/":["","springcloud01","springcloud02","springcloud03","springcloud04","springcloud05","springcloud06","springcloud07","springcloud08","springcloud09","springcloud10","springcloud11","springcloud12","springcloud13","springcloud14","springcloud15","springcloud16","springcloud17"],"/BackEnd/SpringMVC/":["","springmvc01","springmvc02"],"/FrontEnd/HTML/":["","html01","html02","html03"],"/FrontEnd/CSS/":["","css01","css02","css03"],"/FrontEnd/JavaScript/":["","javascript01","javascript02","javascript03","javascript04","javascript05"],"/FrontEnd/Vue/":["","vue01","vue02","vue03","vue04","vue05","vue06","vue07"],"/Projects/reggietakeout/":["",{text:"项目基础",prefix:"01projectbasic/",collapsible:!0,children:["day01","day02","day03","day04","day05","day06"]},{text:"Git",prefix:"02git/",collapsible:!0,children:["git01"]},{text:"Linux",prefix:"03linux/",collapsible:!0,children:["day01","day02"]},{text:"Redis",prefix:"04Redis/",collapsible:!0,children:["redis01"]}],"/Projects/reggietakeout/*":[],"/Projects/skytakeout/":["","skytakeout01","skytakeout02","skytakeout03","skytakeout04","skytakeout05","skytakeout06","skytakeout07","skytakeout08","skytakeout09","skytakeout10","skytakeout11","skytakeout12"],"/Projects/huike/":["","huike01","huike02"],"/Projects/chuanzhihealth/":[],"/Projects/tjxt/":["","tjxt01"],"/Demo/":[]},Ei=n=>{const{icon:s="",color:a,size:t}=n,e=a||t?{}:null;return a&&(e.color=a),t&&(e.height=Number.isNaN(Number(t))?t:`${t}px`),_a(s)?p("img",{class:"icon",src:s,alt:"","no-view":"",style:e}):It(s)?p("img",{class:"icon",src:vn(s),alt:"","aria-hidden":"","no-view":"",style:e}):p(ks("FontIcon"),n)};Ei.displayName="HopeIcon";var Hn=Ei;const Si=()=>{const n=ln();return _(()=>n.value.author)},J2="http://.",Sa=()=>{const n=wa(),s=Ts();return a=>{if(a)if(It(a))s.path!==a&&n.push(a);else if(Ct(a))window&&window.open(a);else{const t=s.path.slice(0,s.path.lastIndexOf("/"));n.push(new URL(`${t}/${encodeURI(a)}`,J2).pathname)}}},Ai=()=>{const n=hn(),s=Si();return _(()=>{const{author:a}=n.value;return a?yt(a):a===!1?[]:yt(s.value,!1)})},U2=()=>{const n=hn(),s=yn(Symbol.for("categoryMap"));return _(()=>Kr(n.value.category??n.value.categories).map(a=>{var t;return{name:a,path:((t=s==null?void 0:s.value.map[a])==null?void 0:t.path)??""}}))},W2=()=>{const n=hn(),s=yn(Symbol.for("tagMap"));return _(()=>Yr(n.value.tag??n.value.tags).map(a=>{var t;return{name:a,path:((t=s==null?void 0:s.value.map[a])==null?void 0:t.path)??""}}))},Q2=()=>{const n=hn(),s=_n();return _(()=>{const a=ep(n.value.date);if(a)return a;const{createdTime:t}=s.value.git??{};return t?new Date(t):null})},K2=()=>{const n=ln(),s=_n(),a=hn(),t=Ai(),e=U2(),o=W2(),c=Q2(),l=bi(),r=H2(),i=_(()=>({author:t.value,category:e.value,date:c.value,localizedDate:s.value.localizedDate,tag:o.value,isOriginal:a.value.isOriginal??!1,readingTime:l.value,readingTimeLocale:r.value,pageview:a.value.pageview??!0})),u=_(()=>a.value.pageInfo??n.value.pageInfo??null);return{info:i,items:u}},{mobileBreakPoint:Y2,pcBreakPoint:X2}=zs,Wc=n=>n.endsWith("px")?Number(n.slice(0,-2)):null,Dt=()=>{const n=J(!1),s=J(!1),a=()=>{n.value=window.innerWidth<=(Wc(Y2)??719),s.value=window.innerWidth>=(Wc(X2)??1440)};return Cn("resize",a,!1),Cn("orientationchange",a,!1),mn(()=>{a()}),{isMobile:n,isPC:s}},Li=Symbol(""),Rt=()=>{const n=yn(Li);if(!n)throw new Error("useDarkmode() is called without provider.");return n},Z2=n=>{const s=Ps(),a=_1(),t=_(()=>s.value.darkmode??"switch"),e=Ae("vuepress-theme-hope-scheme","auto"),o=_(()=>{const l=t.value;return l==="disable"?!1:l==="enable"?!0:l==="auto"?a.value:l==="toggle"?e.value==="dark":e.value==="dark"||e.value==="auto"&&a.value}),c=_(()=>{const l=t.value;return l==="switch"||l==="toggle"});n.provide(Li,{canToggle:c,config:t,isDarkmode:o,status:e}),Object.defineProperties(n.config.globalProperties,{$isDarkmode:{get:()=>o.value}})},nf=()=>{const{config:n,isDarkmode:s,status:a}=Rt();Bl(()=>{n.value==="disable"?a.value="light":n.value==="enable"?a.value="dark":n.value==="toggle"&&a.value==="auto"&&(a.value="light")}),mn(()=>{en(s,t=>document.documentElement.setAttribute("data-theme",t?"dark":"light"),{immediate:!0})})},bt=(n,s,a=!1)=>"activeMatch"in s?new RegExp(s.activeMatch,"u").test(n.path):Ur(n,s.link)?!0:"children"in s&&!a?s.children.some(t=>bt(n,t)):!1,xi=(n,s)=>s.type==="group"?!!(s.prefix&&Ur(n,s.prefix))||s.children.some(a=>a.type==="group"?xi(n,a):a.type==="page"&&bt(n,a,!0)):!1,Eo=n=>!be(n)&&!Ct(n);var Un=(n=>(n.title="t",n.shortTitle="s",n.icon="i",n.index="I",n.order="O",n.breadcrumbExclude="b",n))(Un||{}),qn=(n=>(n.type="y",n.author="a",n.date="d",n.localizedDate="l",n.category="c",n.tag="g",n.isEncrypted="n",n.isOriginal="o",n.readingTime="r",n.excerpt="e",n.sticky="u",n.cover="v",n))(qn||{}),Ci=(n=>(n.article="a",n.home="h",n.slide="s",n.page="p",n))(Ci||{});const fp=(n,s=!1,a)=>{const{meta:t,path:e,notFound:o}=Ym(n,a);return o?{text:e,link:e}:{text:!s&&t[Un.shortTitle]?t[Un.shortTitle]:t[Un.title]||e,link:e,...t[Un.icon]?{icon:t[Un.icon]}:{}}},ma=(n="",s="")=>It(s)||Ct(s)?s:`${ir(n)}${s}`,So=({config:n,prefix:s=""})=>{const a=(t,e=s)=>{const o=xn(t)?fp(ma(e,t)):t.link?{...t,link:Eo(t.link)?Bs(ma(e,t.link)).path:t.link}:t;if("children"in o){const c=ma(e,o.prefix),l=o.children==="structure"?hp[c]:o.children;return{type:"group",...o,prefix:c,children:l.map(r=>a(r,c))}}return{type:"page",...o}};return n.map(t=>a(t))},sf=({config:n,routePath:s,headerDepth:a})=>{const t=hs(n).sort((e,o)=>o.length-e.length);for(const e of t)if(Na(decodeURI(s),e)){const o=n[e];return o?So({config:o==="structure"?hp[e]:o,headerDepth:a,prefix:e}):[]}return console.warn(`${decodeURI(s)} is missing sidebar config.`),[]},af=({config:n,headerDepth:s,routeLocale:a,routePath:t})=>n==="structure"?So({config:hp[a],headerDepth:s,prefix:a}):bo(n)?So({config:n,headerDepth:s}):Ot(n)?sf({config:n,routePath:t,headerDepth:s}):[],Oi=Symbol(""),tf=()=>{const n=hn(),s=ln(),a=Ss(),t=Em(),e=_(()=>n.value.home?!1:n.value.sidebar??s.value.sidebar??"structure"),o=_(()=>n.value.headerDepth??s.value.headerDepth??2),c=_(()=>af({config:e.value,headerDepth:o.value,routeLocale:a.value,routePath:t.value}));ds(Oi,c)},gp=()=>{const n=yn(Oi);if(!n)throw new Error("useSidebarItems() is called without provider.");return n};var ef=j({name:"PageFooter",setup(){const n=Ps(),s=ln(),a=hn(),t=Ai(),e=_(()=>{const{copyright:i,footer:u}=a.value;return u!==!1&&!!(i||u||s.value.displayFooter)}),o=_(()=>{const{footer:i}=a.value;return i===!1?!1:xn(i)?i:s.value.footer??""}),c=_(()=>t.value.map(({name:i})=>i).join(", ")),l=i=>`Copyright © ${new Date().getFullYear()} ${c.value} ${i?`${i} Licensed`:""}`,r=_(()=>{const{copyright:i,license:u=""}=a.value,{license:k}=n.value,{copyright:d}=s.value;return i??(u?l(u):xn(d)?d:c.value||k?l(k):!1)});return()=>e.value?p("footer",{class:"vp-footer-wrapper"},[o.value?p("div",{class:"vp-footer",innerHTML:o.value}):null,r.value?p("div",{class:"vp-copyright",innerHTML:r.value}):null]):null}}),Qn=j({name:"AutoLink",props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],slots:Object,setup(n,{emit:s,slots:a}){const t=hn(),e=Ps(),o=Ts(),c=wr(),l=Fa(n,"config"),r=_(()=>_a(l.value.link)),i=_(()=>!r.value&&Ct(l.value.link)),u=_(()=>l.value.target??(r.value?"_blank":void 0)),k=_(()=>u.value==="_blank"),d=_(()=>!r.value&&!i.value&&!k.value),h=_(()=>l.value.rel??(k.value?"noopener noreferrer":"")),g=_(()=>l.value.ariaLabel??l.value.text),w=_(()=>{if(n.exact)return!1;const S=hs(c.value.locales);return S.length?S.every(y=>y!==l.value.link):l.value.link!=="/"}),E=_(()=>d.value?l.value.activeMatch?new RegExp(l.value.activeMatch,"u").test(o.path):w.value?Na(o.path,l.value.link):o.path===l.value.link:!1),b=_(()=>n.noExternalLinkIcon===!1&&(t.value.externalLinkIcon??e.value.externalLinkIcon??!0));return()=>{const{before:S,after:y,default:L}=a,{text:V,icon:T,link:H}=l.value;return d.value?p(Dn,{class:"vp-link",to:H,active:E.value,activeClass:"active","aria-label":g.value,onFocusout:()=>s("focusout")},()=>L?L():[S?S():p(Hn,{icon:T}),V,y==null?void 0:y()]):p("a",{class:["vp-link",{"vp-external-link-icon":b}],href:H,rel:h.value,target:u.value,"aria-label":g.value,onFocusout:()=>s("focusout")},L?L():[S?S():p(Hn,{icon:T}),V,y==null?void 0:y()])}}}),of=j({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(n,{slots:s}){const a=_n(),t=Fa(n,"config"),e=_(()=>t.value.ariaLabel??t.value.text),o=J(!1);en(()=>a.value.path,()=>{o.value=!1});const c=l=>{l.detail===0&&(o.value=!o.value)};return()=>{var l;return p("div",{class:["vp-dropdown-wrapper",{open:o.value}]},[p("button",{type:"button",class:"vp-dropdown-title","aria-label":e.value,onClick:c},[((l=s.title)==null?void 0:l.call(s))||[p(Hn,{icon:t.value.icon}),n.config.text],p("span",{class:"arrow"}),p("ul",{class:"vp-dropdown"},t.value.children.map((r,i)=>{const u=i===t.value.children.length-1;return p("li",{class:"vp-dropdown-item"},"children"in r?[p("h4",{class:"vp-dropdown-subtitle"},r.link?p(Qn,{config:r,onFocusout:()=>{r.children.length===0&&u&&(o.value=!1)}}):r.text),p("ul",{class:"vp-dropdown-subitems"},r.children.map((k,d)=>p("li",{class:"vp-dropdown-subitem"},p(Qn,{config:k,onFocusout:()=>{d===r.children.length-1&&u&&(o.value=!1)}}))))]:p(Qn,{config:r,onFocusout:()=>{u&&(o.value=!1)}}))}))])])}}});const Bi=(n,s="")=>xn(n)?fp(ma(s,n)):"children"in n?{...n,...n.link&&Eo(n.link)?{link:Bs(ma(s,n.link)).path}:{},children:n.children.map(a=>Bi(a,ma(s,n.prefix)))}:{...n,link:Eo(n.link)?Bs(ma(s,n.link)).path:n.link},Ii=()=>{const n=ln();return _(()=>(n.value.navbar||[]).map(s=>Bi(s)))},pf=()=>{const n=ln(),s=_(()=>n.value.repo),a=_(()=>s.value?B1(s.value):null),t=_(()=>s.value?rp(s.value):null),e=_(()=>a.value?n.value.repoLabel??t.value??"Source":null);return _(()=>!a.value||!e.value||n.value.repoDisplay===!1?null:{type:t.value??"Source",label:e.value,link:a.value})};var cf=j({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(n){const s=_n(),a=Fa(n,"config"),t=_(()=>a.value.ariaLabel??a.value.text),e=J(!1);en(()=>s.value.path,()=>{e.value=!1});const o=(c,l)=>l[l.length-1]===c;return()=>[p("button",{type:"button",class:["vp-nav-screen-menu-title",{active:e.value}],"aria-label":t.value,onClick:()=>{e.value=!e.value}},[p("span",{class:"text"},[p(Hn,{icon:a.value.icon}),n.config.text]),p("span",{class:["arrow",e.value?"down":"end"]})]),p("ul",{class:["vp-nav-screen-menu",{hide:!e.value}]},a.value.children.map(c=>p("li",{class:"vp-nav-screen-menu-item"},"children"in c?[p("h4",{class:"vp-nav-screen-menu-subtitle"},c.link?p(Qn,{config:c,onFocusout:()=>{o(c,a.value.children)&&c.children.length===0&&(e.value=!1)}}):c.text),p("ul",{class:"vp-nav-screen-menu-subitems"},c.children.map(l=>p("li",{class:"vp-nav-screen-menu-subitem"},p(Qn,{config:l,onFocusout:()=>{o(l,c.children)&&o(c,a.value.children)&&(e.value=!1)}}))))]:p(Qn,{config:c,onFocusout:()=>{o(c,a.value.children)&&(e.value=!1)}}))))]}}),lf=j({name:"NavScreenLinks",setup(){const n=Ii();return()=>n.value.length?p("nav",{class:"nav-screen-links"},n.value.map(s=>p("div",{class:"navbar-links-item"},"children"in s?p(cf,{config:s}):p(Qn,{config:s})))):null}});const Ti=()=>p(cn,{name:"dark"},()=>p("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Ti.displayName="DarkIcon";const Pi=()=>p(cn,{name:"light"},()=>p("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Pi.displayName="LightIcon";const Di=()=>p(cn,{name:"auto"},()=>p("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Di.displayName="AutoIcon";const Ri=()=>p(cn,{name:"enter-fullscreen"},()=>p("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Ri.displayName="EnterFullScreenIcon";const Mi=()=>p(cn,{name:"cancel-fullscreen"},()=>p("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Mi.displayName="CancelFullScreenIcon";const ji=()=>p(cn,{name:"outlook"},()=>[p("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);ji.displayName="OutlookIcon";var Vi=j({name:"ColorModeSwitch",setup(){const{config:n,isDarkmode:s,status:a}=Rt(),t=Yn(),e=()=>{n.value==="switch"?a.value={light:"dark",dark:"auto",auto:"light"}[a.value]:a.value=a.value==="light"?"dark":"light"},o=async c=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!t.value)||!c){e();return}const l=c.clientX,r=c.clientY,i=Math.hypot(Math.max(l,innerWidth-l),Math.max(r,innerHeight-r)),u=s.value;await document.startViewTransition(async()=>{e(),await Hs()}).ready,s.value!==u&&document.documentElement.animate({clipPath:s.value?[`circle(${i}px at ${l}px ${r}px)`,`circle(0px at ${l}px ${r}px)`]:[`circle(0px at ${l}px ${r}px)`,`circle(${i}px at ${l}px ${r}px)`]},{duration:400,pseudoElement:s.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>p("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:o},[p(Di,{style:{display:a.value==="auto"?"block":"none"}}),p(Ti,{style:{display:a.value==="dark"?"block":"none"}}),p(Pi,{style:{display:a.value==="light"?"block":"none"}})])}}),rf=j({name:"ColorMode",setup(){const n=ln(),{canToggle:s}=Rt(),a=_(()=>n.value.outlookLocales.darkmode);return()=>s.value?p("div",{class:"vp-color-mode"},[p("label",{class:"vp-color-mode-title",for:"color-mode-switch"},a.value),p(Vi)]):null}});const no="VUEPRESS_THEME_COLOR";var uf=j({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(n){const s=(a="")=>{const t=document.documentElement.classList,e=hs(n.themeColor);if(!a){localStorage.removeItem(no),t.remove(...e);return}t.remove(...e.filter(o=>o!==a)),t.add(a),localStorage.setItem(no,a)};return mn(()=>{const a=localStorage.getItem(no);a&&s(a)}),()=>p("ul",{class:"vp-theme-color-picker",id:"theme-color-picker"},[p("li",p("span",{class:"theme-color",onClick:()=>s()})),Ea(n.themeColor).map(([a,t])=>p("li",p("span",{style:{background:t},onClick:()=>s(a)})))])}});const so=zs.enableThemeColor==="true",kf=Wm(Ea(zs).filter(([n])=>n.startsWith("theme-")));var df=j({name:"ThemeColor",setup(){const n=ln(),s=_(()=>n.value.outlookLocales.themeColor);return()=>p("div",{class:"vp-theme-color"},[p("label",{class:"vp-theme-color-title",for:"theme-color-picker"},s.value),p(uf,{themeColor:kf})])}}),Ni=j({name:"ToggleFullScreenButton",setup(){const n=ln(),{isSupported:s,isFullscreen:a,toggle:t}=pp(),e=_(()=>n.value.outlookLocales.fullscreen);return()=>s?p("div",{class:"full-screen-wrapper"},[p("label",{class:"full-screen-title",for:"full-screen-switch"},e.value),p("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:a.value,onClick:()=>t()},a.value?p(Mi):p(Ri))]):null}}),$i=j({name:"OutlookSettings",setup(){const n=Ps(),s=Yn(),a=_(()=>!s.value&&n.value.fullscreen);return()=>p(Ee,()=>[p(df),p(rf),a.value?p(Ni):null])}}),mf=j({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(n,{emit:s,slots:a}){const t=_n(),{isMobile:e}=Dt(),o=Bn(),c=cp(o);return mn(()=>{o.value=document.body,en(e,l=>{!l&&n.show&&(c.value=!1,s("close"))}),en(()=>t.value.path,()=>{c.value=!1,s("close")})}),ba(()=>{c.value=!1}),()=>p(oa,{name:"fade",onEnter:()=>{c.value=!0},onAfterLeave:()=>{c.value=!1}},()=>{var l,r;return n.show?p("div",{id:"nav-screen",class:"vp-nav-screen"},p("div",{class:"vp-nav-screen-container"},[(l=a.before)==null?void 0:l.call(a),p(lf),p("div",{class:"vp-outlook-wrapper"},p($i)),(r=a.after)==null?void 0:r.call(a)])):null})}}),hf=j({name:"NavbarBrand",setup(){const n=Ss(),s=za(),a=ln(),t=_(()=>a.value.home??n.value),e=_(()=>s.value.title),o=_(()=>a.value.navbarTitle??e.value),c=_(()=>a.value.logo?vn(a.value.logo):null),l=_(()=>a.value.logoDark?vn(a.value.logoDark):null);return()=>p(Dn,{to:t.value,class:"vp-brand"},()=>[c.value?p("img",{class:["vp-nav-logo",{light:!!l.value}],src:c.value,alt:""}):null,l.value?p("img",{class:["vp-nav-logo dark"],src:l.value,alt:""}):null,o.value?p("span",{class:["vp-site-name",{"hide-in-pad":c.value&&(a.value.hideSiteNameOnMobile??!0)}]},o.value):null])}}),ff=j({name:"NavbarLinks",setup(){const n=Ii();return()=>n.value.length?p("nav",{class:"vp-nav-links"},n.value.map(s=>p("div",{class:"vp-nav-item hide-in-mobile"},"children"in s?p(of,{config:s}):p(Qn,{config:s})))):null}}),gf=j({name:"RepoLink",setup(){const n=pf();return()=>n.value?p("div",{class:"vp-nav-item vp-action"},p("a",{class:"vp-action-link",href:n.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":n.value.label},p(Gr,{type:n.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const Hi=({active:n=!1},{emit:s})=>p("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":n}],"aria-label":"Toggle Navbar","aria-expanded":n,"aria-controls":"nav-screen",onClick:()=>s("toggle")},p("span",[p("span",{class:"vp-top"}),p("span",{class:"vp-middle"}),p("span",{class:"vp-bottom"})]));Hi.displayName="ToggleNavbarButton";const Ao=(n,{emit:s})=>p("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>s("toggle")},p("span",{class:"icon"}));Ao.displayName="ToggleSidebarButton",Ao.emits=["toggle"];var vf=j({name:"OutlookButton",setup(){const n=Ps(),s=_n(),{canToggle:a}=Rt(),{isSupported:t}=pp(),e=Yn(),o=J(!1),c=_(()=>!e.value&&n.value.fullscreen&&t),l=_(()=>so);return en(()=>s.value.path,()=>{o.value=!1}),()=>l.value?p("div",{class:"vp-nav-item hide-in-mobile"},a.value&&!c.value&&!so?p(Vi):c.value&&!a.value&&!so?p(Ni):p("button",{type:"button",class:["vp-outlook-button",{open:o.value}],tabindex:"-1","aria-hidden":!0},[p(ji),p("div",{class:"vp-outlook-dropdown"},p($i))])):null}}),yf=j({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(n,{emit:s,slots:a}){const t=ln(),{isMobile:e}=Dt(),o=J(!1),c=_(()=>{const{navbarAutoHide:u="mobile"}=t.value;return u!=="none"&&(u==="always"||e.value)}),l=_(()=>t.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),r={Brand:hf,Language:ee,Links:ff,Repo:gf,Outlook:vf,Search:Wn("Docsearch")?ks("Docsearch"):Wn("SearchBox")?ks("SearchBox"):ee},i=u=>r[u]??(Wn(u)?ks(u):ee);return()=>{var u,k,d,h,g,w,E,b,S;return[p("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":c.value}]},[p("div",{class:"vp-navbar-start"},[p(Ao,{onToggle:()=>{o.value&&(o.value=!1),s("toggleSidebar")}}),(u=a.startBefore)==null?void 0:u.call(a),(k=l.value.start)==null?void 0:k.map(y=>p(i(y))),(d=a.startAfter)==null?void 0:d.call(a)]),p("div",{class:"vp-navbar-center"},[(h=a.centerBefore)==null?void 0:h.call(a),(g=l.value.center)==null?void 0:g.map(y=>p(i(y))),(w=a.centerAfter)==null?void 0:w.call(a)]),p("div",{class:"vp-navbar-end"},[(E=a.endBefore)==null?void 0:E.call(a),(b=l.value.end)==null?void 0:b.map(y=>p(i(y))),(S=a.endAfter)==null?void 0:S.call(a),p(Hi,{active:o.value,onToggle:()=>{o.value=!o.value}})])]),p(mf,{show:o.value,onClose:()=>{o.value=!1}},{before:a.screenTop?()=>a.screenTop():null,after:a.screenBottom?()=>a.screenBottom():null})]}}}),bf=j({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(n){const s=Ts();return()=>xn(n.config.link)?p(Qn,{class:["vp-sidebar-link","vp-sidebar-page",{active:bt(s,n.config,!0)}],exact:!0,config:n.config}):p("p",n,[p(Hn,{icon:n.config.icon}),n.config.text])}}),_f=j({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(n,{emit:s}){const a=Ts(),t=_(()=>bt(a,n.config)),e=_(()=>bt(a,n.config,!0));return()=>{const{collapsible:o,children:c=[],icon:l,prefix:r,link:i,text:u}=n.config;return p("section",{class:"vp-sidebar-group"},[p(o?"button":"p",{class:["vp-sidebar-header",{clickable:o||i,exact:e.value,active:t.value}],...o?{type:"button",onClick:()=>s("toggle"),onKeydown:k=>{k.key==="Enter"&&s("toggle")}}:{}},[p(Hn,{icon:l}),i?p(Qn,{class:"vp-sidebar-title",config:{text:u,link:i},noExternalLinkIcon:!0}):p("span",{class:"vp-sidebar-title"},u),o?p("span",{class:["vp-arrow",n.open?"down":"end"]}):null]),n.open||!o?p(Fi,{key:r,config:c}):null])}}}),Fi=j({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(n){const s=Ts(),a=J(-1),t=e=>{a.value=e===a.value?-1:e};return en(()=>s.path,()=>{const e=n.config.findIndex(o=>xi(s,o));a.value=e},{immediate:!0,flush:"post"}),()=>p("ul",{class:"vp-sidebar-links"},n.config.map((e,o)=>p("li",e.type==="group"?p(_f,{config:e,open:o===a.value,onToggle:()=>t(o)}):p(bf,{config:e}))))}}),wf=j({name:"SideBar",slots:Object,setup(n,{slots:s}){const a=Ts(),t=gp(),e=Bn();return mn(()=>{en(()=>a.hash,o=>{const c=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${a.path}${o}"]`);if(!c)return;const{top:l,height:r}=e.value.getBoundingClientRect(),{top:i,height:u}=c.getBoundingClientRect();i<l?c.scrollIntoView(!0):i+u>l+r&&c.scrollIntoView(!1)},{immediate:!0})}),()=>{var o,c,l;return p("aside",{ref:e,key:"sidebar",id:"sidebar",class:"vp-sidebar"},[(o=s.top)==null?void 0:o.call(s),((c=s.default)==null?void 0:c.call(s))??p(Fi,{config:t.value}),(l=s.bottom)==null?void 0:l.call(s)])}}}),vp=j({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(n,{slots:s}){const a=wa(),t=hn(),e=Ps(),o=ln(),{isMobile:c,isPC:l}=Dt(),r=Yn(),[i,u]=gt(!1),[k,d]=gt(!1),h=gp(),g=J(!1),w=_(()=>n.noNavbar||t.value.navbar===!1||o.value.navbar===!1?!1:!!(o.value.logo??o.value.repo??o.value.navbar)),E=_(()=>n.noSidebar?!1:t.value.sidebar!==!1&&h.value.length!==0&&!t.value.home),b=_(()=>t.value.externalLinkIcon??e.value.externalLinkIcon??!0),S=_(()=>!n.noToc&&!t.value.home&&(t.value.toc??o.value.toc??!0)),y={x:0,y:0},L=H=>{y.x=H.changedTouches[0].clientX,y.y=H.changedTouches[0].clientY},V=H=>{const M=H.changedTouches[0].clientX-y.x,W=H.changedTouches[0].clientY-y.y;Math.abs(M)>Math.abs(W)*1.5&&Math.abs(M)>40&&(M>0&&y.x<=80?u(!0):u(!1))};let T=0;return Cn("scroll",c1(()=>{const H=window.scrollY;H<=58||H<T?g.value=!1:T+200<H&&!i.value&&(g.value=!0),T=H},300,!0)),en(c,H=>{H||u(!1)}),mn(()=>{const H=cp(document.body);en(i,W=>{H.value=W});const M=a.afterEach(()=>{u(!1)});ba(()=>{H.value=!1,M()})}),()=>p(Wn("GlobalEncrypt")?ks("GlobalEncrypt"):lp,()=>p("div",{class:["theme-container",{"hide-navbar":g.value,"no-navbar":!w.value,"sidebar-collapsed":!c.value&&!l.value&&k.value,"sidebar-open":c.value&&i.value,"no-sidebar":!E.value&&!s.sidebar&&!s.sidebarTop&&!s.sidebarBottom,"external-link-icon":b.value,pure:r.value,"has-toc":S.value},n.containerClass,t.value.containerClass??""],onTouchStart:L,onTouchEnd:V},[w.value?p(yf,{onToggleSidebar:()=>u()},{startBefore:s.navbarStartBefore?()=>s.navbarStartBefore():null,startAfter:s.navbarStartAfter?()=>s.navbarStartAfter():null,centerBefore:s.navbarCenterBefore?()=>s.navbarCenterBefore():null,centerAfter:s.navbarCenterAfter?()=>s.navbarCenterAfter():null,endBefore:s.navbarEndBefore?()=>s.navbarEndBefore():null,endAfter:s.navbarEndAfter?()=>s.navbarEndAfter():null,screenTop:s.navScreenTop?()=>s.navScreenTop():null,screenBottom:s.navScreenBottom?()=>s.navScreenBottom():null}):null,p(oa,{name:"fade"},()=>i.value?p("div",{class:"vp-sidebar-mask",onClick:()=>u(!1)}):null),p(oa,{name:"fade"},()=>c.value?null:p("div",{class:"toggle-sidebar-wrapper",onClick:()=>d()},p("span",{class:["arrow",k.value?"end":"start"]}))),p(wf,{},{default:s.sidebar?()=>s.sidebar():null,top:s.sidebarTop?()=>s.sidebarTop():null,bottom:s.sidebarBottom?()=>s.sidebarBottom():null}),s.default(),p(ef)]))}});const on=j({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(n,{slots:s}){const a=e=>{e.style.transition=`transform ${n.duration}s ease-in-out ${n.delay}s, opacity ${n.duration}s ease-in-out ${n.delay}s`,e.style.transform="translateY(-20px)",e.style.opacity="0"},t=e=>{e.style.transform="translateY(0)",e.style.opacity="1"};return()=>{const e={name:"drop",appear:n.appear,onAppear:a,onAfterAppear:t,onEnter:a,onAfterEnter:t,onBeforeLeave:a},o=()=>s.default();return n.type==="group"?p(Wd,e,o):p(oa,e,o)}}}),$a=({custom:n})=>p(Sr,{class:["theme-hope-content",{custom:n}]});$a.displayName="MarkdownContent",$a.props={custom:Boolean};const qi=()=>p(cn,{name:"author"},()=>p("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));qi.displayName="AuthorIcon";const zi=()=>p(cn,{name:"calendar"},()=>p("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));zi.displayName="CalendarIcon";const Gi=()=>p(cn,{name:"category"},()=>p("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Gi.displayName="CategoryIcon";const Ji=()=>p(cn,{name:"print"},()=>p("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Ji.displayName="PrintIcon";const Ui=()=>p(cn,{name:"tag"},()=>p("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Ui.displayName="TagIcon";const Wi=()=>p(cn,{name:"timer"},()=>p("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Wi.displayName="TimerIcon";const Qi=()=>p(cn,{name:"word"},()=>[p("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),p("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Qi.displayName="WordIcon";const la=()=>{const n=ln();return _(()=>n.value.metaLocales)};var Ef=j({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(n){const s=la(),a=Yn();return()=>n.author.length?p("span",{class:"page-author-info","aria-label":`${s.value.author}${a.value?"":"🖊"}`,...a.value?{}:{"data-balloon-pos":"up"}},[p(qi),p("span",n.author.map(t=>t.url?p("a",{class:"page-author-item",href:t.url,target:"_blank",rel:"noopener noreferrer"},t.name):p("span",{class:"page-author-item"},t.name))),p("span",{property:"author",content:n.author.map(t=>t.name).join(", ")})]):null}}),Sf=j({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(n){const s=la(),a=Sa(),t=Yn();return()=>n.category.length?p("span",{class:"page-category-info","aria-label":`${s.value.category}${t.value?"":"🌈"}`,...t.value?{}:{"data-balloon-pos":"up"}},[p(Gi),n.category.map(({name:e,path:o})=>p("span",{class:["page-category-item",{[`color${Pt(e,Number(zs.colorNumber))}`]:!t.value,clickable:o}],role:o?"navigation":"",onClick:()=>{o&&a(o)}},e)),p("meta",{property:"articleSection",content:n.category.map(({name:e})=>e).join(",")})]):null}}),Af=j({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(n){const s=tp(),a=la(),t=Yn();return()=>n.date?p("span",{class:"page-date-info","aria-label":`${a.value.date}${t.value?"":"📅"}`,...t.value?{}:{"data-balloon-pos":"up"}},[p(zi),p("span",p(Ee,()=>n.localizedDate||n.date.toLocaleDateString(s.value))),p("meta",{property:"datePublished",content:n.date.toISOString()||""})]):null}}),Lf=j({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(n){const s=la();return()=>n.isOriginal?p("span",{class:"page-original-info"},s.value.origin):null}}),xf=j({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(n){const s=la(),a=Yn(),t=_(()=>{if(!n.readingTime)return null;const{minutes:e}=n.readingTime;return e<1?"PT1M":`PT${Math.round(e)}M`});return()=>{var e,o;return(e=n.readingTimeLocale)!=null&&e.time?p("span",{class:"page-reading-time-info","aria-label":`${s.value.readingTime}${a.value?"":"⌛"}`,...a.value?{}:{"data-balloon-pos":"up"}},[p(Wi),p("span",(o=n.readingTimeLocale)==null?void 0:o.time),p("meta",{property:"timeRequired",content:t.value})]):null}}}),Cf=j({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(n){const s=la(),a=Sa(),t=Yn();return()=>n.tag.length?p("span",{class:"page-tag-info","aria-label":`${s.value.tag}${t.value?"":"🏷"}`,...t.value?{}:{"data-balloon-pos":"up"}},[p(Ui),n.tag.map(({name:e,path:o})=>p("span",{class:["page-tag-item",{[`color${Pt(e,Number(zs.colorNumber))}`]:!t.value,clickable:o}],role:o?"navigation":"",onClick:()=>{o&&a(o)}},e)),p("meta",{property:"keywords",content:n.tag.map(({name:e})=>e).join(",")})]):null}}),Of=j({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(n){const s=la(),a=Yn();return()=>{var t,e,o;return(t=n.readingTimeLocale)!=null&&t.words?p("span",{class:"page-word-info","aria-label":`${s.value.words}${a.value?"":"🔠"}`,...a.value?{}:{"data-balloon-pos":"up"}},[p(Qi),p("span",(e=n.readingTimeLocale)==null?void 0:e.words),p("meta",{property:"wordCount",content:(o=n.readingTime)==null?void 0:o.words})]):null}}}),Ki=j({name:"PageInfo",components:{AuthorInfo:Ef,CategoryInfo:Sf,DateInfo:Af,OriginalInfo:Lf,PageViewInfo:ee,ReadingTimeInfo:xf,TagInfo:Cf,WordInfo:Of},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(n){const s=Yn();return()=>n.items?p("div",{class:"page-info"},n.items.map(a=>p(ks(`${a}Info`),{...n.info,isPure:s.value}))):null}}),Bf=j({name:"PrintButton",setup(){const n=Ps(),s=ln();return()=>n.value.print===!1?null:p("button",{type:"button",class:"print-button",title:s.value.metaLocales.print,onClick:()=>{window.print()}},p(Ji))}}),Yi=j({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(n,{slots:s}){const a=Ts(),t=_n(),e=la(),[o,c]=gt(),l=Bn(),r=J("-1.7rem"),i=k=>{var d;(d=l.value)==null||d.scrollTo({top:k,behavior:"smooth"})},u=()=>{if(l.value){const k=document.querySelector(".vp-toc-item.active");k?r.value=`${k.getBoundingClientRect().top-l.value.getBoundingClientRect().top+l.value.scrollTop}px`:r.value="-1.7rem"}else r.value="-1.7rem"};return mn(()=>{en(()=>a.hash,k=>{if(l.value){const d=document.querySelector(`#toc a.vp-toc-link[href$="${k}"]`);if(!d)return;const{top:h,height:g}=l.value.getBoundingClientRect(),{top:w,height:E}=d.getBoundingClientRect();w<h?i(l.value.scrollTop+w-h):w+E>h+g&&i(l.value.scrollTop+w+E-h-g)}}),en(()=>a.fullPath,u,{flush:"post",immediate:!0})}),()=>{var g,w;const k=({title:E,level:b,slug:S})=>p(Dn,{to:`#${S}`,class:["vp-toc-link",`level${b}`],onClick:()=>{c()}},()=>E),d=(E,b)=>E.length&&b>0?p("ul",{class:"vp-toc-list"},E.map(S=>{const y=d(S.children,b-1);return[p("li",{class:["vp-toc-item",{active:a.hash===`#${S.slug}`}]},k(S)),y?p("li",y):null]})):null,h=n.items.length?d(n.items,n.headerDepth):t.value.headers?d(t.value.headers,n.headerDepth):null;return h?p("div",{class:"vp-toc-placeholder"},[p("aside",{id:"toc"},[(g=s.before)==null?void 0:g.call(s),p("div",{class:"vp-toc-header",onClick:()=>{c()}},[e.value.toc,p(Bf),p("div",{class:["arrow",o.value?"down":"end"]})]),p("div",{class:["vp-toc-wrapper",o.value?"open":""],ref:l},[h,p("div",{class:"vp-toc-marker",style:{top:r.value}})]),(w=s.after)==null?void 0:w.call(s)])]):null}}}),yp=j({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(n){const s=_n(),a=ln(),t=Bn(),e=({target:o})=>{const c=document.querySelector(o.hash);if(c){const l=()=>{c.removeAttribute("tabindex"),c.removeEventListener("blur",l)};c.setAttribute("tabindex","-1"),c.addEventListener("blur",l),c.focus(),window.scrollTo(0,0)}};return mn(()=>{en(()=>s.value.path,()=>t.value.focus())}),()=>[p("span",{ref:t,tabindex:"-1"}),p("a",{href:`#${n.content}`,class:"vp-skip-link sr-only",onClick:e},a.value.routeLocales.skipToContent)]}});let ao=null,Wa=null;const Lo={wait:()=>ao,pending:()=>{ao=new Promise(n=>{Wa=n})},resolve:()=>{Wa==null||Wa(),ao=null,Wa=null}},Xi=(n,{slots:s})=>p(oa,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:Lo.resolve,onBeforeLeave:Lo.pending},()=>s.default());Xi.displayName="FadeSlideY";const If=(n,s)=>{const a=n.replace(s,"/").split("/"),t=[];let e=Zo(s);return a.forEach((o,c)=>{c!==a.length-1?(e+=`${o}/`,t.push({link:e,name:o||"Home"})):o!==""&&(e+=o,t.push({link:e,name:o}))}),t},xo=(n,{slots:s})=>{var k,d;const{bgImage:a,bgImageDark:t,bgImageStyle:e,color:o,description:c,image:l,imageDark:r,header:i,features:u=[]}=n;return p("div",{class:"vp-feature-wrapper"},[a?p("div",{class:["vp-feature-bg",{light:t}],style:[{"background-image":`url(${a})`},e]}):null,t?p("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${t})`},e]}):null,p("div",{class:"vp-feature",style:o?{color:o}:{}},[((k=s.image)==null?void 0:k.call(s,n))??[l?p("img",{class:["vp-feature-image",{light:r}],src:vn(l),alt:""}):null,r?p("img",{class:"vp-feature-image dark",src:vn(r),alt:""}):null],((d=s.info)==null?void 0:d.call(s,n))??[i?p("h2",{class:"vp-feature-header"},i):null,c?p("p",{class:"vp-feature-description",innerHTML:c}):null],u.length?p("div",{class:"vp-features"},u.map(({icon:h,title:g,details:w,link:E})=>{const b=[p("h3",{class:"vp-feature-title"},[p(Hn,{icon:h}),p("span",{innerHTML:g})]),p("p",{class:"vp-feature-details",innerHTML:w})];return E?be(E)?p("a",{class:"vp-feature-item link",href:E,"aria-label":g,target:"_blank"},b):p(Dn,{class:"vp-feature-item link",to:E,"aria-label":g},()=>b):p("div",{class:"vp-feature-item"},b)})):null])])};xo.displayName="FeaturePanel";var Tf=j({name:"HeroInfo",slots:Object,setup(n,{slots:s}){const a=hn(),t=za(),e=_(()=>a.value.heroFullScreen??!1),o=_(()=>{const{heroText:i,tagline:u}=a.value;return{text:i??t.value.title??"Hello",tagline:u??t.value.description??"",isFullScreen:e.value}}),c=_(()=>{const{heroText:i,heroImage:u,heroImageDark:k,heroAlt:d,heroImageStyle:h}=a.value;return{image:u?vn(u):null,imageDark:k?vn(k):null,imageStyle:h,alt:d??i??"",isFullScreen:e.value}}),l=_(()=>{const{bgImage:i,bgImageDark:u,bgImageStyle:k}=a.value;return{image:xn(i)?vn(i):null,imageDark:xn(u)?vn(u):null,bgStyle:k,isFullScreen:e.value}}),r=_(()=>a.value.actions??[]);return()=>{var i,u,k;return p("header",{class:["vp-hero-info-wrapper",{fullscreen:e.value}]},[((i=s.bg)==null?void 0:i.call(s,l.value))??[l.value.image?p("div",{class:["vp-hero-mask",{light:l.value.imageDark}],style:[{"background-image":`url(${l.value.image})`},l.value.bgStyle]}):null,l.value.imageDark?p("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${l.value.imageDark})`},l.value.bgStyle]}):null],p("div",{class:"vp-hero-info"},[((u=s.logo)==null?void 0:u.call(s,c.value))??p(on,{appear:!0,type:"group"},()=>{const{image:d,imageDark:h,imageStyle:g,alt:w}=c.value;return[d?p("img",{key:"light",class:["vp-hero-image",{light:h}],style:g,src:d,alt:w}):null,h?p("img",{key:"dark",class:"vp-hero-image dark",style:g,src:h,alt:w}):null]}),((k=s.info)==null?void 0:k.call(s,o.value))??p("div",{class:"vp-hero-infos"},[o.value.text?p(on,{appear:!0,delay:.04},()=>p("h1",{id:"main-title",class:"vp-hero-title"},o.value.text)):null,o.value.tagline?p(on,{appear:!0,delay:.08},()=>p("p",{id:"main-description",innerHTML:o.value.tagline})):null,r.value.length?p(on,{appear:!0,delay:.12},()=>p("p",{class:"vp-hero-actions"},r.value.map(d=>p(Qn,{class:["vp-hero-action",d.type??"default"],config:d,noExternalLinkIcon:!0},d.icon?{before:()=>p(Hn,{icon:d.icon})}:{})))):null])])])}}});const Zi=(n,{slots:s})=>{var d,h,g;const{bgImage:a,bgImageDark:t,bgImageStyle:e,color:o,description:c,image:l,imageDark:r,header:i,highlights:u=[],type:k="un-order"}=n;return p("div",{class:"vp-highlight-wrapper",style:o?{color:o}:{}},[a?p("div",{class:["vp-highlight-bg",{light:t}],style:[{"background-image":`url(${a})`},e]}):null,t?p("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${t})`},e]}):null,p("div",{class:"vp-highlight"},[((d=s.image)==null?void 0:d.call(s,n))??[l?p("img",{class:["vp-highlight-image",{light:r}],src:vn(l),alt:""}):null,r?p("img",{class:"vp-highlight-image dark",src:vn(r),alt:""}):null],((h=s.info)==null?void 0:h.call(s,n))??[p("div",{class:"vp-highlight-info-wrapper"},p("div",{class:"vp-highlight-info"},[i?p("h2",{class:"vp-highlight-header",innerHTML:i}):null,c?p("p",{class:"vp-highlight-description",innerHTML:c}):null,((g=s.highlights)==null?void 0:g.call(s,u))??p(k==="order"?"ol":k==="no-order"?"dl":"ul",{class:"vp-highlights"},u.map(({icon:w,title:E,details:b,link:S})=>{const y=[p(k==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[w?p(Hn,{class:"vp-highlight-icon",icon:w}):null,p("span",{innerHTML:E})]),b?p(k==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:b}):null];return p(k==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:S}]},S?be(S)?p("a",{class:"vp-highlight-item link",href:S,"aria-label":E,target:"_blank"},y):p(Dn,{class:"vp-highlight-item link",to:S,"aria-label":E},()=>y):p("div",{class:"vp-highlight-item"},y))}))]))]])])};Zi.displayName="HighlightPanel";var Pf=j({name:"HomePage",slots:Object,setup(n,{slots:s}){const a=hn(),t=_(()=>{const{features:o}=a.value;return bo(o)?o:null}),e=_(()=>{const{highlights:o}=a.value;return bo(o)?o:null});return()=>{var o,c,l,r;return p("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":a.value.heroText===null?"":"main-title"},[(o=s.top)==null?void 0:o.call(s),p(Tf),((c=e.value)==null?void 0:c.map(i=>"features"in i?p(xo,i):p(Zi,i)))??(t.value?p(on,{appear:!0,delay:.24},()=>p(xo,{features:t.value})):null),(l=s.center)==null?void 0:l.call(s),p(on,{appear:!0,delay:.32},()=>p($a)),(r=s.bottom)==null?void 0:r.call(s)])}}}),Df=j({name:"BreadCrumb",setup(){const n=_n(),s=Ss(),a=hn(),t=ln(),e=Bn([]),o=_(()=>(a.value.breadcrumb??t.value.breadcrumb??!0)&&e.value.length>1),c=_(()=>a.value.breadcrumbIcon??t.value.breadcrumbIcon??!0),l=()=>{const r=If(n.value.path,s.value).map(({link:i,name:u})=>{const{path:k,meta:d,notFound:h}=Bs(i);return h||d[Un.breadcrumbExclude]?null:{title:d[Un.shortTitle]||d[Un.title]||u,icon:d[Un.icon],path:k}}).filter(i=>i!==null);r.length>1&&(e.value=r)};return mn(()=>{en(()=>n.value.path,l,{immediate:!0})}),()=>p("nav",{class:["vp-breadcrumb",{disable:!o.value}]},o.value?p("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},e.value.map((r,i)=>p("li",{class:{"is-active":e.value.length-1===i},property:"itemListElement",typeof:"ListItem"},[p(Dn,{to:r.path,property:"item",typeof:"WebPage"},()=>[c.value?p(Hn,{icon:r.icon}):null,p("span",{property:"name"},r.title||"Unknown")]),p("meta",{property:"position",content:i+1})]))):[])}});const Qc=(n,s)=>n===!1||Ot(n)?n:xn(n)?fp(n,!0,s):null,Co=(n,s,a)=>{const t=n.findIndex(e=>e.link===s);if(t!==-1){const e=n[t+a];return e!=null&&e.link?e:null}for(const e of n)if("children"in e){const o=Co(e.children,s,a);if(o)return o}return null};var Rf=j({name:"PageNav",setup(){const n=ln(),s=hn(),a=gp(),t=_n(),e=Sa(),o=Ts(),c=_(()=>{const r=Qc(s.value.prev,o.path);return r===!1?null:r||(n.value.prevLink===!1?null:Co(a.value,t.value.path,-1))}),l=_(()=>{const r=Qc(s.value.next,o.path);return r===!1?null:r??(n.value.nextLink===!1?null:Co(a.value,t.value.path,1))});return Cn("keydown",r=>{r.altKey&&(r.key==="ArrowRight"?l.value&&(e(l.value.link),r.preventDefault()):r.key==="ArrowLeft"&&c.value&&(e(c.value.link),r.preventDefault()))}),()=>c.value||l.value?p("nav",{class:"vp-page-nav"},[c.value?p(Qn,{class:"prev",config:c.value},()=>{var r,i;return[p("div",{class:"hint"},[p("span",{class:"arrow start"}),n.value.metaLocales.prev]),p("div",{class:"link"},[p(Hn,{icon:(r=c.value)==null?void 0:r.icon}),(i=c.value)==null?void 0:i.text])]}):null,l.value?p(Qn,{class:"next",config:l.value},()=>{var r,i;return[p("div",{class:"hint"},[n.value.metaLocales.next,p("span",{class:"arrow end"})]),p("div",{class:"link"},[(r=l.value)==null?void 0:r.text,p(Hn,{icon:(i=l.value)==null?void 0:i.icon})])]}):null]):null}});const Mf=()=>{const n=ln(),s=_n(),a=hn();return _(()=>{var t;return a.value.contributors??n.value.contributors??!0?((t=s.value.git)==null?void 0:t.contributors)??null:null})},jf={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},Vf=({docsRepo:n,docsBranch:s,docsDir:a,filePathRelative:t,editLinkPattern:e})=>{if(!t)return null;const o=rp(n);let c;return e?c=e:o!==null&&(c=jf[o]),c?c.replace(/:repo/u,_a(n)?n:`https://github.com/${n}`).replace(/:branch/u,s).replace(/:path/u,ur(`${Zo(a)}/${t}`)):null},Nf=()=>{const n=ln(),s=_n(),a=hn();return _(()=>{const{repo:t,docsRepo:e=t,docsBranch:o="main",docsDir:c="",editLink:l,editLinkPattern:r=""}=n.value;if(!(a.value.editLink??l??!0)||!e)return null;const i=Vf({docsRepo:e,docsBranch:o,docsDir:c,editLinkPattern:r,filePathRelative:s.value.filePathRelative});return i?{text:n.value.metaLocales.editLink,link:i}:null})},$f=()=>{const n=za(),s=ln(),a=_n(),t=hn();return _(()=>{var e,o;return!(t.value.lastUpdated??s.value.lastUpdated??!0)||!((e=a.value.git)!=null&&e.updatedTime)?null:new Date((o=a.value.git)==null?void 0:o.updatedTime).toLocaleString(n.value.lang)})};var Hf=j({name:"PageTitle",setup(){const n=_n(),s=hn(),a=ln(),{info:t,items:e}=K2();return()=>p("div",{class:"vp-page-title"},[p("h1",[a.value.titleIcon===!1?null:p(Hn,{icon:s.value.icon}),n.value.title]),p(Ki,{info:t.value,...e.value===null?{}:{items:e.value}}),p("hr")])}});const nu=()=>p(cn,{name:"edit"},()=>[p("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),p("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);nu.displayName="EditIcon";var Ff=j({name:"PageMeta",setup(){const n=ln(),s=Nf(),a=$f(),t=Mf();return()=>{var o;const{metaLocales:e}=n.value;return p("footer",{class:"vp-page-meta"},[s.value?p("div",{class:"vp-meta-item edit-link"},p(Qn,{class:"vp-meta-label",config:s.value},{before:()=>p(nu)})):null,p("div",{class:"vp-meta-item git-info"},[a.value?p("div",{class:"update-time"},[p("span",{class:"vp-meta-label"},`${e.lastUpdated}: `),p(Ee,()=>p("span",{class:"vp-meta-info"},a.value))]):null,(o=t.value)!=null&&o.length?p("div",{class:"contributors"},[p("span",{class:"vp-meta-label"},`${e.contributors}: `),t.value.map(({email:c,name:l},r)=>[p("span",{class:"vp-meta-info",title:`email: ${c}`},l),r!==t.value.length-1?",":""])]):null])])}}}),qf=j({name:"NormalPage",slots:Object,setup(n,{slots:s}){const a=hn(),{isDarkmode:t}=Rt(),e=ln(),o=_(()=>a.value.toc??e.value.toc??!0),c=_(()=>a.value.headerDepth??e.value.headerDepth??2);return()=>p("main",{id:"main-content",class:"vp-page"},p(Wn("LocalEncrypt")?ks("LocalEncrypt"):lp,()=>{var l,r,i,u;return[(l=s.top)==null?void 0:l.call(s),a.value.cover?p("div",{class:"page-cover"},p("img",{src:vn(a.value.cover),alt:"","no-view":""})):null,p(Df),p(Hf),o.value?p(Yi,{headerDepth:c.value},{before:s.tocBefore?()=>s.tocBefore():null,after:s.tocAfter?()=>s.tocAfter():null}):null,(r=s.contentBefore)==null?void 0:r.call(s),p($a),(i=s.contentAfter)==null?void 0:i.call(s),p(Ff),p(Rf),Wn("CommentService")?p(ks("CommentService"),{darkmode:t.value}):null,(u=s.bottom)==null?void 0:u.call(s)]}))}}),zf=j({name:"PortfolioHero",slots:Object,setup(n,{slots:s}){const a=Si(),t=hn(),e=J(0),o=_(()=>{var d;return((d=t.value.titles)==null?void 0:d[e.value])??""}),c=J(""),l=_(()=>{const{name:d,avatar:h,avatarDark:g,avatarAlt:w,avatarStyle:E}=t.value;return{name:d??a.value.name,avatar:h?vn(h):null,avatarDark:g?vn(g):null,avatarStyle:E,alt:(w||d)??""}}),r=_(()=>{const{bgImage:d,bgImageDark:h,bgImageStyle:g}=t.value;return{image:xn(d)?vn(d):null,imageDark:xn(h)?vn(h):null,bgStyle:g}}),i=_(()=>{const{welcome:d,name:h,titles:g,medias:w}=t.value;return{name:h??a.value.name,welcome:d??"👋 Hi There, I'm",title:c.value,titles:g??[],medias:w??[]}}),u=()=>{c.value="";let d=0,h=!1;const g=async()=>{if(!h)if(c.value+=o.value[d],d+=1,await Hs(),d<o.value.length)setTimeout(()=>{g()},150);else{const w=i.value.titles.length;setTimeout(()=>{e.value=w<=1||e.value===i.value.titles.length-1?0:e.value+1},1e3)}};return g(),()=>{h=!0}};let k;return mn(()=>{en(o,()=>{k==null||k(),k=u()},{immediate:!0})}),()=>{var d,h,g;return p("section",{id:"portfolio",class:["vp-portfolio",{bg:r.value.image}]},[((d=s.bg)==null?void 0:d.call(s,r.value))??[r.value.image?p("div",{class:["vp-portfolio-mask",{light:r.value.imageDark}],style:[{background:`url(${r.value.image}) center/cover no-repeat`},r.value.bgStyle]}):null,r.value.imageDark?p("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${r.value.imageDark}) center/cover no-repeat`},r.value.bgStyle]}):null],((h=s.avatar)==null?void 0:h.call(s,l.value))??p("div",{class:"vp-portfolio-avatar"},[p(on,{delay:.04},()=>{const{avatarDark:w,name:E,alt:b,avatarStyle:S}=l.value;return[p("img",{key:"light",class:{light:w},src:l.value.avatar,title:E,alt:b,style:S}),w?p("img",{key:"dark",class:"dark",src:w,title:E,alt:b,style:S}):null]})]),p("div",{class:"vp-portfolio-container"},((g=s.info)==null?void 0:g.call(s,i.value))??p("div",{class:"vp-portfolio-info"},[p(on,{appear:!0,delay:.08},()=>p("h6",{class:"vp-portfolio-welcome"},i.value.welcome)),p(on,{appear:!0,delay:.12},()=>p("h1",{class:"vp-portfolio-name",id:"main-title"},i.value.name)),p(on,{appear:!0,delay:.16},()=>p("h2",{class:"vp-portfolio-title"},c.value)),p(on,{appear:!0,delay:.2},()=>i.value.medias.length?p("div",{class:"vp-portfolio-medias"},i.value.medias.map(({name:w,url:E,icon:b})=>p("a",{class:"vp-portfolio-media",href:E,rel:"noopener noreferrer",target:"_blank",title:w},p(Hn,{icon:b})))):Wn("SocialMedias")?p(ks("SocialMedias")):null)]))])}}}),Gf=j({name:"PortfolioHome",setup(){const n=hn(),s=_(()=>n.value.content??"portfolio");return()=>p("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[p(zf),s.value==="none"?null:p("div",{},p(on,{appear:!0,delay:.24},()=>p($a,{class:{"vp-portfolio-content":s.value==="portfolio"}})))])}}),Jf=j({name:"Layout",slots:Object,setup(n,{slots:s}){const a=Ps(),t=ln(),e=_n(),o=hn(),c=Yn(),{isMobile:l}=Dt(),r=_(()=>{var i,u;return((i=t.value.blog)==null?void 0:i.sidebarDisplay)??((u=a.value.blog)==null?void 0:u.sidebarDisplay)??"mobile"});return()=>[p(yp),p(vp,{},{default:()=>{var i;return((i=s.default)==null?void 0:i.call(s))??(o.value.portfolio?p(Gf):o.value.home?p(Pf):p(c.value?lp:Xi,()=>p(qf,{key:e.value.path},{top:s.top?()=>s.top():null,bottom:s.bottom?()=>s.bottom():null,contentBefore:s.contentBefore?()=>s.contentBefore():null,contentAfter:s.contentAfter?()=>s.contentAfter():null,tocBefore:s.tocBefore?()=>s.tocBefore():null,tocAfter:s.tocAfter?()=>s.tocAfter():null})))},navScreenBottom:r.value==="none"?()=>p(ks("BloggerInfo")):null,sidebar:!l.value&&r.value==="always"?()=>p(ks("BloggerInfo")):null})]}}),Uf=j({name:"NotFoundHint",setup(){const n=ln(),s=()=>{const a=n.value.routeLocales.notFoundMsg;return a[Math.floor(Math.random()*a.length)]};return()=>p("div",{class:"not-found-hint"},[p("p",{class:"error-code"},"404"),p("h1",{class:"error-title"},n.value.routeLocales.notFoundTitle),p("p",{class:"error-hint"},s())])}}),Wf=j({name:"NotFound",slots:Object,setup(n,{slots:s}){const a=wa(),t=Ss(),e=ln();return()=>[p(yp),p(vp,{noSidebar:!0},()=>{var o;return p("main",{id:"main-content",class:"vp-page not-found"},((o=s.default)==null?void 0:o.call(s))??[p(Uf),p("div",{class:"actions"},[p("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},e.value.routeLocales.back),p("button",{type:"button",class:"action-button",onClick:()=>{a.push(e.value.home??t.value)}},e.value.routeLocales.home)])])})]}});const Qf={Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>'},Kf={category:{"/":{path:"/category/",map:{个人简介:{path:"/category/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/",indexes:[0]},JavaSE:{path:"/category/javase/",indexes:[1,2,3,4,5,6,7,8,9,10,11,12]},JavaWeb:{path:"/category/javaweb/",indexes:[13,14,15]},Maven:{path:"/category/maven/",indexes:[16,14]},MyBatis:{path:"/category/mybatis/",indexes:[17,18,19,20,21,22,23]},JDBC:{path:"/category/jdbc/",indexes:[17]},lombok:{path:"/category/lombok/",indexes:[24]},MyBatisPlus:{path:"/category/mybatisplus/",indexes:[25,26,27]},Spring:{path:"/category/spring/",indexes:[28,29,30,31]},Ioc:{path:"/category/ioc/",indexes:[28,29]},DI:{path:"/category/di/",indexes:[28,29]},SpringBoot:{path:"/category/springboot/",indexes:[32,33,34,35,36]},SpringBoot案例:{path:"/category/springboot%E6%A1%88%E4%BE%8B/",indexes:[37,38,39,40]},文件存储:{path:"/category/%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/",indexes:[39]},阿里云OSS:{path:"/category/%E9%98%BF%E9%87%8C%E4%BA%91oss/",indexes:[39]},Cookie:{path:"/category/cookie/",indexes:[40]},Session:{path:"/category/session/",indexes:[40]},令牌技术:{path:"/category/%E4%BB%A4%E7%89%8C%E6%8A%80%E6%9C%AF/",indexes:[40]},AOP:{path:"/category/aop/",indexes:[34]},SpringCloud:{path:"/category/springcloud/",indexes:[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]},Enreka:{path:"/category/enreka/",indexes:[58]},Nacos:{path:"/category/nacos/",indexes:[56]},Feign:{path:"/category/feign/",indexes:[50]},Gateway:{path:"/category/gateway/",indexes:[51]},Docker:{path:"/category/docker/",indexes:[52]},RabbitMQ:{path:"/category/rabbitmq/",indexes:[53]},ElasticSearch:{path:"/category/elasticsearch/",indexes:[42,54,55]},SpringMVC:{path:"/category/springmvc/",indexes:[59,60,61]},SSM:{path:"/category/ssm/",indexes:[60]},算法:{path:"/category/%E7%AE%97%E6%B3%95/",indexes:[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121]},计算机网络:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",indexes:[122,123,124,125,126,127,128]},数据结构:{path:"/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",indexes:[129,130,131,132,133]},操作系统:{path:"/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",indexes:[134,135,136,137,138]},SQL基础:{path:"/category/sql%E5%9F%BA%E7%A1%80/",indexes:[139,140,141,142,143,144]},"Front End":{path:"/category/front-end/",indexes:[145,146,147,148]},CSS:{path:"/category/css/",indexes:[145,149,150,151]},HTML:{path:"/category/html/",indexes:[146,152,153,154]},JavaScript:{path:"/category/javascript/",indexes:[147,155,156,157,158,159]},Vue:{path:"/category/vue/",indexes:[148,160,161,162,163,164,165,166]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[167,168,169]},项目:{path:"/category/%E9%A1%B9%E7%9B%AE/",indexes:[170,171,172,173]},汇客CRM:{path:"/category/%E6%B1%87%E5%AE%A2crm/",indexes:[171,174,175]},瑞吉外卖:{path:"/category/%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96/",indexes:[173,176,177,178,179,180,181,182,183]},苍穹外卖:{path:"/category/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/",indexes:[184,172,185,186,187,188,189,190,191,192,193,194,195]},天机学堂:{path:"/category/%E5%A4%A9%E6%9C%BA%E5%AD%A6%E5%A0%82/",indexes:[170,196]},Git:{path:"/category/git/",indexes:[197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]},Markdown:{path:"/category/markdown/",indexes:[213,214]},数组:{path:"/category/%E6%95%B0%E7%BB%84/",indexes:[104,105,107,108,109,110]},链表:{path:"/category/%E9%93%BE%E8%A1%A8/",indexes:[97,98,99,100,101,102,103,111,112]},哈希表:{path:"/category/%E5%93%88%E5%B8%8C%E8%A1%A8/",indexes:[86,87,88,89,90,91,92,93,94,113]},字符串:{path:"/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",indexes:[79,80,81,82,83,84,85,114]},双指针法:{path:"/category/%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95/",indexes:[115]},双指针:{path:"/category/%E5%8F%8C%E6%8C%87%E9%92%88/",indexes:[69,70,71,72,73,74,75,76,77,78]},栈与队列:{path:"/category/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/",indexes:[62,63,64,65,66,67,68,116]},二叉树:{path:"/category/%E4%BA%8C%E5%8F%89%E6%A0%91/",indexes:[117]},回溯算法:{path:"/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/",indexes:[118]},贪心算法:{path:"/category/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",indexes:[119]},动态规划:{path:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",indexes:[120]},单调栈:{path:"/category/%E5%8D%95%E8%B0%83%E6%A0%88/",indexes:[121]},中间件与其他专业技能:{path:"/category/%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B8%8E%E5%85%B6%E4%BB%96%E4%B8%93%E4%B8%9A%E6%8A%80%E8%83%BD/",indexes:[215]},DDL:{path:"/category/ddl/",indexes:[141]},DML:{path:"/category/dml/",indexes:[142]},DQL:{path:"/category/dql/",indexes:[143]},SQL进阶:{path:"/category/sql%E8%BF%9B%E9%98%B6/",indexes:[216,217]},SQL运维:{path:"/category/sql%E8%BF%90%E7%BB%B4/",indexes:[218,219]},Linux:{path:"/category/linux/",indexes:[183]},Redis:{path:"/category/redis/",indexes:[220]},数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[221,222,223,224]}}}},tag:{"/":{path:"/tag/",map:{个人简介:{path:"/tag/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/",indexes:[0]},宽带:{path:"/tag/%E5%AE%BD%E5%B8%A6/",indexes:[225]},禁用:{path:"/tag/%E7%A6%81%E7%94%A8/",indexes:[169]},页面配置:{path:"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[167]},使用指南:{path:"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[167]},资源整合:{path:"/tag/%E8%B5%84%E6%BA%90%E6%95%B4%E5%90%88/",indexes:[226]}}}}},su=["/intro.html","/BackEnd/JavaSE/Javase01.html","/BackEnd/JavaSE/Javase02.html","/BackEnd/JavaSE/Javase03.html","/BackEnd/JavaSE/Javase04.html","/BackEnd/JavaSE/Javase05.html","/BackEnd/JavaSE/Javase06.html","/BackEnd/JavaSE/Javase07.html","/BackEnd/JavaSE/Javase08.html","/BackEnd/JavaSE/Javase09.html","/BackEnd/JavaSE/Javase10.html","/BackEnd/JavaSE/Javase11.html","/BackEnd/JavaSE/Javase12.html","/BackEnd/JavaWeb/","/BackEnd/JavaWeb/javaweb01.html","/BackEnd/JavaWeb/javaweb02.html","/BackEnd/JavaWeb/javaweb03.html","/BackEnd/MyBatis/mybatis01.html","/BackEnd/MyBatis/mybatis02.html","/BackEnd/MyBatis/mybatis04.html","/BackEnd/MyBatis/mybatis05.html","/BackEnd/MyBatis/mybatis06.html","/BackEnd/MyBatis/mybatis07.html","/BackEnd/MyBatis/","/BackEnd/MyBatis/mybatis03.html","/BackEnd/MybatisPlus/mybatisplus01.html","/BackEnd/MybatisPlus/mybatisplus02.html","/BackEnd/MybatisPlus/","/BackEnd/Spring/spring02.html","/BackEnd/Spring/spring01.html","/BackEnd/Spring/spring03.html","/BackEnd/Spring/","/BackEnd/SpringBoot/springboot08.html","/BackEnd/SpringBoot/springboot01.html","/BackEnd/SpringBoot/springboot06.html","/BackEnd/SpringBoot/springboot07.html","/BackEnd/SpringBoot/","/BackEnd/SpringBoot/springboot02.html","/BackEnd/SpringBoot/springboot03.html","/BackEnd/SpringBoot/springboot04.html","/BackEnd/SpringBoot/springboot05.html","/BackEnd/SpringCloud/springcloud17.html","/BackEnd/SpringCloud/springcloud09.html","/BackEnd/SpringCloud/springcloud10.html","/BackEnd/SpringCloud/springcloud11.html","/BackEnd/SpringCloud/springcloud12.html","/BackEnd/SpringCloud/springcloud13.html","/BackEnd/SpringCloud/springcloud14.html","/BackEnd/SpringCloud/springcloud15.html","/BackEnd/SpringCloud/springcloud16.html","/BackEnd/SpringCloud/springcloud03.html","/BackEnd/SpringCloud/springcloud04.html","/BackEnd/SpringCloud/springcloud05.html","/BackEnd/SpringCloud/springcloud06.html","/BackEnd/SpringCloud/springcloud07.html","/BackEnd/SpringCloud/springcloud08.html","/BackEnd/SpringCloud/springcloud02.html","/BackEnd/SpringCloud/","/BackEnd/SpringCloud/springcloud01.html","/BackEnd/SpringMVC/springmvc01.html","/BackEnd/SpringMVC/springmvc02.html","/BackEnd/SpringMVC/","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues01.html","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues02.html","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues03.html","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues04.html","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues05.html","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues06.html","/ComputerBasics/Algorithm/06StacksAndQueues/stacksAndQueues07.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer01.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer02.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer03.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer04.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer05.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer06.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer07.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer08.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer09.html","/ComputerBasics/Algorithm/05DoublePointer/doublePointer10.html","/ComputerBasics/Algorithm/04String/String04.html","/ComputerBasics/Algorithm/04String/String05.html","/ComputerBasics/Algorithm/04String/String06.html","/ComputerBasics/Algorithm/04String/String07.html","/ComputerBasics/Algorithm/04String/String01.html","/ComputerBasics/Algorithm/04String/String02.html","/ComputerBasics/Algorithm/04String/String03.html","/ComputerBasics/Algorithm/03HashTable/hashtable01.html","/ComputerBasics/Algorithm/03HashTable/hashtable02.html","/ComputerBasics/Algorithm/03HashTable/hashtable03.html","/ComputerBasics/Algorithm/03HashTable/hashtable04.html","/ComputerBasics/Algorithm/03HashTable/hashtable05.html","/ComputerBasics/Algorithm/03HashTable/hashtable06.html","/ComputerBasics/Algorithm/03HashTable/hashtable07.html","/ComputerBasics/Algorithm/03HashTable/hashtable08.html","/ComputerBasics/Algorithm/03HashTable/hashtable09.html","/ComputerBasics/Algorithm/12Summary/","/ComputerBasics/Algorithm/12Summary/summary01.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist08.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist02.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist03.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist04.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist05.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist06.html","/ComputerBasics/Algorithm/02LinkedList/linkedlist07.html","/ComputerBasics/Algorithm/01Arrays/arrays04.html","/ComputerBasics/Algorithm/01Arrays/arrays05.html","/ComputerBasics/Algorithm/","/ComputerBasics/Algorithm/01Arrays/","/ComputerBasics/Algorithm/01Arrays/arrays01.html","/ComputerBasics/Algorithm/01Arrays/arrays02.html","/ComputerBasics/Algorithm/01Arrays/arrays03.html","/ComputerBasics/Algorithm/02LinkedList/","/ComputerBasics/Algorithm/02LinkedList/linkedlist01.html","/ComputerBasics/Algorithm/03HashTable/","/ComputerBasics/Algorithm/04String/","/ComputerBasics/Algorithm/05DoublePointer/","/ComputerBasics/Algorithm/06StacksAndQueues/","/ComputerBasics/Algorithm/07BinaryTree/","/ComputerBasics/Algorithm/08BacktrackingAlgorithm/","/ComputerBasics/Algorithm/09GreedyAlgorithm/","/ComputerBasics/Algorithm/10DynamicProgramming/","/ComputerBasics/Algorithm/11MonotonicStack/","/ComputerBasics/ComputerNetwork/01cn/","/ComputerBasics/ComputerNetwork/01cn/cn01.html","/ComputerBasics/ComputerNetwork/01cn/cn02.html","/ComputerBasics/ComputerNetwork/01cn/cn03.html","/ComputerBasics/ComputerNetwork/","/ComputerBasics/ComputerNetwork/computernetword01.html","/ComputerBasics/ComputerNetwork/computernetwork02.html","/ComputerBasics/DataStructure/01DS/","/ComputerBasics/DataStructure/01DS/ds01.html","/ComputerBasics/DataStructure/01DS/ds02_.html","/ComputerBasics/DataStructure/01DS/ds03.html","/ComputerBasics/DataStructure/","/ComputerBasics/OpreatingSystem/OSInterview/","/ComputerBasics/OpreatingSystem/OSInterview/osi01.html","/ComputerBasics/OpreatingSystem/OSInterview/osi02.html","/ComputerBasics/OpreatingSystem/OSInterview/osi03.html","/ComputerBasics/OpreatingSystem/","/Database/SQL/","/Database/SQL/01Basics/","/Database/SQL/01Basics/sql01.html","/Database/SQL/01Basics/sql02.html","/Database/SQL/01Basics/sql03.html","/Database/SQL/01Basics/sql04.html","/FrontEnd/CSS/","/FrontEnd/HTML/","/FrontEnd/JavaScript/","/FrontEnd/Vue/","/FrontEnd/CSS/css01.html","/FrontEnd/CSS/css02.html","/FrontEnd/CSS/css03.html","/FrontEnd/HTML/html01.html","/FrontEnd/HTML/html02.html","/FrontEnd/HTML/html03.html","/FrontEnd/JavaScript/javascript01.html","/FrontEnd/JavaScript/javascript02.html","/FrontEnd/JavaScript/javascript03.html","/FrontEnd/JavaScript/javascript04.html","/FrontEnd/JavaScript/javascript05.html","/FrontEnd/Vue/vue01.html","/FrontEnd/Vue/vue02.html","/FrontEnd/Vue/vue03.html","/FrontEnd/Vue/vue04.html","/FrontEnd/Vue/vue05.html","/FrontEnd/Vue/vue06.html","/FrontEnd/Vue/vue07.html","/Others/Demo/page.html","/Others/Demo/","/Others/Demo/disable.html","/Projects/tjxt/","/Projects/huike/","/Projects/skytakeout/","/Projects/reggietakeout/","/Projects/huike/huike01.html","/Projects/huike/huike02.html","/Projects/reggietakeout/01projectbasic/day01.html","/Projects/reggietakeout/01projectbasic/day02.html","/Projects/reggietakeout/01projectbasic/day03.html","/Projects/reggietakeout/01projectbasic/day04.html","/Projects/reggietakeout/01projectbasic/day05.html","/Projects/reggietakeout/01projectbasic/day06.html","/Projects/reggietakeout/03linux/day01.html","/Projects/reggietakeout/03linux/day02.html","/Projects/skytakeout/skytakeout02.html","/Projects/skytakeout/skytakeout01.html","/Projects/skytakeout/skytakeout03.html","/Projects/skytakeout/skytakeout04.html","/Projects/skytakeout/skytakeout05.html","/Projects/skytakeout/skytakeout06.html","/Projects/skytakeout/skytakeout07.html","/Projects/skytakeout/skytakeout08.html","/Projects/skytakeout/skytakeout09.html","/Projects/skytakeout/skytakeout10.html","/Projects/skytakeout/skytakeout11.html","/Projects/skytakeout/skytakeout12.html","/Projects/tjxt/tjxt01.html","/Tools/Git/01Manual/manual01.html","/Tools/Git/01Manual/manual02.html","/Tools/Git/01Manual/manual03.html","/Tools/Git/02DocumentNotes/documentnotes01.html","/Tools/Git/02DocumentNotes/documentnotes02.html","/Tools/Git/02DocumentNotes/documentnotes03.html","/Tools/Git/02DocumentNotes/documentnotes04.html","/Tools/Git/02DocumentNotes/documentnotes05.html","/Tools/Git/02DocumentNotes/documentnotes06.html","/Tools/Git/02DocumentNotes/documentnotes07.html","/Tools/Git/02DocumentNotes/documentnotes08.html","/Tools/Git/02DocumentNotes/documentnotes09.html","/Tools/Git/02DocumentNotes/documentnotes10.html","/Tools/Git/02DocumentNotes/documentnotes11.html","/Projects/reggietakeout/02git/git01.html","/Tools/Git/","/Tools/MarkDown/","/Tools/MarkDown/markdown01.html","/ComputerBasics/DataStructure/02MO/","/Database/SQL/02Advanced/","/Database/SQL/02Advanced/advanced01.html","/Database/SQL/03OperationAndMaintenance/","/Database/SQL/03OperationAndMaintenance/oam01.html","/Projects/reggietakeout/04Redis/redis01.html","/Database/Basic/Principle/DBInterview/","/Database/Basic/Principle/DBInterview/dbi01.html","/Database/Basic/Principle/DBInterview/dbi02.html","/Database/Basic/Principle/DBInterview/dbi03.html","/Others/BroadBand/","/Tools/Resource/","/ComputerBasics/DataStructure/02MO/mo01.html","/ComputerBasics/DataStructure/02MO/mo02.html","/ComputerBasics/DataStructure/02MO/mo03.html","/Projects/README01.html","/Tools/Git/01Manual/","/Tools/Git/02DocumentNotes/","/slides.html","/BackEnd/JavaSE/","/Database/NoSQL/","/Database/Basic/Language/","/Database/Basic/Principle/","/Projects/reggietakeout/01projectbasic/","/Projects/reggietakeout/02git/","/Projects/reggietakeout/03linux/","/Projects/reggietakeout/04Redis/"],Oo=Bn(Kf);$s(Oo);const au=n=>{const s=_n(),a=hn(),t=Ss();return _(()=>{var l;const e=n??((l=a.value.blog)==null?void 0:l.key)??"";if(!e)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!Oo.value[e])throw new Error(`useBlogCategory: key ${e} is invalid`);const o=Oo.value[e][t.value],c={path:o.path,map:{}};for(const r in o.map){const i=o.map[r];c.map[r]={path:i.path,items:[]};for(const u of i.indexes){const{path:k,meta:d}=Bs(su[u]);c.map[r].items.push({path:k,info:d})}s.value.path===i.path&&(c.currentItems=c.map[r].items)}return c})},Yf={article:{"/":{path:"/article/",indexes:[226,213,167,227,228,229,215,134,135,136,137,221,222,223,224,122,123,124,125,129,62,63,64,65,66,67,68,130,131,132,133,138,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,216,217,218,219,170,196,171,174,175,184,172,185,186,187,188,189,190,191,192,193,194,195,230,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,231,197,198,199,232,200,201,202,203,204,205,206,207,208,209,210,126,127,128,211,220,32,28,59,60,225,25,26,29,30,233,234,235,168,169,236,237,173,238,176,177,178,179,180,181,239,240,182,183,241,16,33,37,38,39,40,34,35,214,17,18,24,19,20,21,22,139,140,141,142,143,144,23,27,31,36,61,13,14,15,145,149,150,151,146,152,153,154,147,155,156,157,158,159,148,160,161,162,163,164,165,166,212,1,2,3,4,5,6,7,8,9,10,11,12,0]}},star:{"/":{path:"/star/",indexes:[226,214,213,167]}},timeline:{"/":{path:"/timeline/",indexes:[227,228,229,215,134,135,136,137,221,222,223,224,122,123,124,125,129,62,63,64,65,66,67,68,130,131,132,133,138,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,216,217,218,219,170,196,171,174,175,226,184,172,185,186,187,188,189,190,191,192,193,194,195,230,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,231,197,198,199,232,200,201,202,203,204,205,206,207,208,209,210,126,127,128,211,220,32,28,59,60,225,25,26,29,30,233,234,235,168,169,236,237,173,238,176,177,178,179,180,181,239,240,182,183,241,16,33,37,38,39,40,34,35,214,17,18,24,19,20,21,22,139,140,141,142,143,144,23,27,31,36,61,13,14,15,145,149,150,151,146,152,153,154,147,155,156,157,158,159,148,160,161,162,163,164,165,166,212,213,1,2,3,4,5,6,7,8,9,10,11,12,167,0]}}},Bo=Bn(Yf);$s(Bo);const Le=n=>{const s=hn(),a=Ss();return _(()=>{var c;const t=n??((c=s.value.blog)==null?void 0:c.key)??"";if(!t)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Bo.value[t])throw new Error(`useBlogType: key ${n} is invalid`);const e=Bo.value[t][a.value],o={path:e.path,items:[]};for(const l of e.indexes){const{path:r,meta:i}=Bs(su[l]);o.items.push({path:r,info:i})}return o})},tu=()=>p(cn,{name:"lock"},()=>p("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));tu.displayName="LockIcon";var Xf=[];const eu=Symbol(""),bp=()=>{const n=yn(eu);if(!n)throw new Error("useTimeline() is called without provider.");return n},Zf=()=>{const n=Le("timeline"),s=_(()=>{const a=[];return n.value.items.forEach(({info:t,path:e})=>{const o=ep(t[qn.date]);if(o){const c=o.getFullYear(),l=o.getMonth()+1,r=o.getDate();(!a[0]||a[0].year!==c)&&a.unshift({year:c,items:[]}),a[0].items.push({date:`${l}/${r}`,info:t,path:e})}}),{...n.value,config:a.reverse()}});ds(eu,s)},ou=Symbol(""),Mt=()=>{const n=yn(ou);if(!n)throw new Error("useArticles() is called without provider.");return n},ng=()=>{const n=Le("article");ds(ou,n)},pu=Symbol.for("categoryMap"),jt=()=>{const n=yn(pu);if(!n)throw new Error("useCategoryMap() is called without provider.");return n},sg=()=>{const n=au("category");ds(pu,n)},cu=Symbol(""),_p=()=>{const n=yn(cu);if(!n)throw new Error("useStars() is called without provider.");return n},ag=()=>{const n=Le("star");ds(cu,n)},lu=Symbol.for("tagMap"),Vt=()=>{const n=yn(lu);if(!n)throw new Error("useTagMap() is called without provider.");return n},tg=()=>{const n=au("tag");ds(lu,n)},eg=()=>{ng(),sg(),ag(),tg(),Zf()},Nt=()=>{const n=Ps(),s=ln();return _(()=>({...n.value.blog,...s.value.blog}))},og=n=>{const s=ln();return _(()=>{const{[qn.author]:a}=n.value;return a?yt(a):a===!1?[]:yt(s.value.author,!1)})},pg=n=>{const s=jt();return _(()=>Kr(n.value[qn.category]).map(a=>({name:a,path:s.value.map[a].path})))},cg=n=>{const s=Vt();return _(()=>Yr(n.value[qn.tag]).map(a=>({name:a,path:s.value.map[a].path})))},lg=n=>_(()=>{const{[qn.date]:s}=n.value;return ep(s)}),rg=n=>{const s=Fa(n,"info"),a=Nt(),t=og(s),e=pg(s),o=cg(s),c=lg(s),l=wi(),r=_(()=>({author:t.value,category:e.value,date:c.value,localizedDate:s.value[qn.localizedDate]??"",tag:o.value,isOriginal:s.value[qn.isOriginal]??!1,readingTime:s.value[qn.readingTime]??null,readingTimeLocale:s.value[qn.readingTime]&&l.value?_i(s.value[qn.readingTime],l.value):null,pageview:n.path})),i=_(()=>a.value.articleInfo);return{info:r,items:i}};var ru=j({name:"SocialMedias",setup(){const n=Nt(),s=Yn(),a=_(()=>Ea(n.value.medias??{}).map(([t,e])=>({name:t,icon:Qf[t],url:e})));return()=>a.value.length?p("div",{class:"vp-social-medias"},a.value.map(({name:t,icon:e,url:o})=>p("a",{class:"vp-social-media",href:o,rel:"noopener noreferrer",target:"_blank","aria-label":t||"",...s.value?{}:{"data-balloon-pos":"up"},innerHTML:e}))):null}}),wp=j({name:"BloggerInfo",setup(){const n=Nt(),s=za(),a=ln(),t=Mt(),e=jt(),o=Vt(),c=bp(),l=Sa(),r=_(()=>{var d;return n.value.name??((d=yt(a.value.author)[0])==null?void 0:d.name)??s.value.title}),i=_(()=>n.value.avatar??a.value.logo),u=_(()=>a.value.blogLocales),k=_(()=>n.value.intro);return()=>{const{article:d,category:h,tag:g,timeline:w}=u.value,E=[[t.value.path,t.value.items.length,d],[e.value.path,hs(e.value.map).length,h],[o.value.path,hs(o.value.map).length,g],[c.value.path,c.value.items.length,w]];return p("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[p("div",{class:"vp-blogger",...k.value?{"aria-label":u.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>l(k.value)}:{}},[i.value?p("img",{class:"vp-blogger-avatar",src:vn(i.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,r.value?p("div",{class:"vp-blogger-name",property:"name"},r.value):null,n.value.description?p("div",{class:"vp-blogger-description",innerHTML:n.value.description}):null,k.value?p("meta",{property:"url",content:vn(k.value)}):null]),p("div",{class:"vp-blog-counts"},E.map(([b,S,y])=>p(Dn,{class:"vp-blog-count",to:b},()=>[p("div",{class:"count"},S),p("div",y)]))),p(ru)])}}});const Ep=()=>p(cn,{name:"category"},()=>p("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Ep.displayName="CategoryIcon";const Sp=()=>p(cn,{name:"tag"},()=>p("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Sp.displayName="TagIcon";const Ap=()=>p(cn,{name:"timeline"},()=>p("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Ap.displayName="TimelineIcon";const iu=()=>p(cn,{name:"slides"},()=>p("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));iu.displayName="SlideIcon";const uu=()=>p(cn,{name:"sticky"},()=>[p("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);uu.displayName="StickyIcon";const xe=()=>p(cn,{name:"article"},()=>p("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));xe.displayName="ArticleIcon";const ku=()=>p(cn,{name:"book"},()=>p("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));ku.displayName="BookIcon";const du=()=>p(cn,{name:"link"},()=>p("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));du.displayName="LinkIcon";const mu=()=>p(cn,{name:"project"},()=>p("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));mu.displayName="ProjectIcon";const hu=()=>p(cn,{name:"friend"},()=>p("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));hu.displayName="FriendIcon";const Io=()=>p(cn,{name:"slide-down"},()=>p("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Io.displayName="SlideDownIcon";const fu=()=>p("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});fu.displayName="EmptyIcon";var ig=j({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(n,{slots:s}){const a=Fa(n,"info"),{info:t,items:e}=rg(n);return()=>{var d,h,g;const{[Un.title]:o,[qn.type]:c,[qn.isEncrypted]:l=!1,[qn.cover]:r,[qn.excerpt]:i,[qn.sticky]:u}=a.value,k=t.value;return p("div",{class:"vp-article-wrapper"},p("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((d=s.cover)==null?void 0:d.call(s,{cover:r}))??(r?[p("img",{class:"vp-article-cover",src:vn(r),alt:"",loading:"lazy"}),p("meta",{property:"image",content:vn(r)})]:[]),u?p(uu):null,p(Dn,{to:n.path},()=>{var w;return((w=s.title)==null?void 0:w.call(s,{title:o,isEncrypted:l,type:c}))??p("header",{class:"vp-article-title"},[l?p(tu):null,c===Ci.slide?p(iu):null,p("span",{property:"headline"},o)])}),((h=s.excerpt)==null?void 0:h.call(s,{excerpt:i}))??(i?p("div",{class:"vp-article-excerpt",innerHTML:i}):null),p("hr",{class:"vp-article-hr"}),((g=s.info)==null?void 0:g.call(s,{info:k}))??p(Ki,{info:k,...e.value?{items:e.value}:{}})]))}}}),ug=j({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(n,{emit:s}){let a;const t=ln(),e=J(""),o=_(()=>t.value.paginationLocales),c=_(()=>Math.ceil(n.total/n.perPage)),l=_(()=>!!c.value&&c.value!==1),r=_(()=>c.value<7?!1:n.current>4),i=_(()=>c.value<7?!1:n.current<c.value-3),u=_(()=>{const{current:h}=n;let g=1,w=c.value;const E=[];c.value>=7&&(h<=4&&h<c.value-3?(g=1,w=5):h>4&&h>=c.value-3?(w=c.value,g=c.value-4):c.value>7&&(g=h-2,w=h+2));for(let b=g;b<=w;b++)E.push(b);return E}),k=h=>s("updateCurrentPage",h),d=h=>{const g=parseInt(h,10);g<=c.value&&g>0?k(g):a.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${o.value.errorText.replace(/\$page/gu,c.value.toString())}`)};return mn(()=>{a=new N1}),()=>p("div",{class:"vp-pagination"},l.value?p("nav",{class:"vp-pagination-list"},[p("div",{class:"vp-pagination-number "},[n.current>1?p("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>k(n.current-1)},o.value.prev):null,r.value?[p("div",{role:"navigation",onClick:()=>k(1)},1),p("div",{class:"ellipsis"},"...")]:null,u.value.map(h=>p("div",{key:h,class:{active:n.current===h},role:"navigation",onClick:()=>k(h)},h)),i.value?[p("div",{class:"ellipsis"},"..."),p("div",{role:"navigation",onClick:()=>k(c.value)},c.value)]:null,n.current<c.value?p("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>k(n.current+1)},o.value.next):null]),p("div",{class:"vp-pagination-nav"},[p("label",{for:"navigation-text"},`${o.value.navigate}: `),p("input",{id:"navigation-text",value:e.value,onInput:({target:h})=>{e.value=h.value},onKeydown:h=>{h.key==="Enter"&&(h.preventDefault(),d(e.value))}}),p("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:o.value.action,onClick:()=>d(e.value)},o.value.action)])]):[])}}),Lp=j({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(n){const s=Ts(),a=wa(),t=Nt(),e=J(1),o=_(()=>t.value.articlePerPage??10),c=_(()=>n.items.slice((e.value-1)*o.value,e.value*o.value)),l=async r=>{e.value=r;const i={...s.query};!(i.page===r.toString()||r===1&&!i.page)&&(r===1?delete i.page:i.page=r.toString(),await a.push({path:s.path,query:i}))};return mn(()=>{const{page:r}=s.query;l(r?Number(r):1),en(e,()=>{const i=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,i)},100)})}),()=>p("div",{id:"article-list",class:"vp-article-list",role:"feed"},c.value.length?[...c.value.map(({info:r,path:i},u)=>p(on,{appear:!0,delay:u*.04},()=>p(ig,{key:i,info:r,path:i}))),p(ug,{current:e.value,perPage:o.value,total:n.items.length,onUpdateCurrentPage:l})]:p(fu))}});console.log(zs);var gu=j({name:"CategoryList",setup(){const n=_n(),s=jt();return()=>p("ul",{class:"vp-category-list"},Ea(s.value.map).sort(([,a],[,t])=>t.items.length-a.items.length).map(([a,{path:t,items:e}])=>p("li",{class:["vp-category",`color${Pt(a,Number(zs.colorNumber))}`,{active:t===n.value.path}]},p(Dn,{to:t},()=>[a,p("span",{class:"count"},e.length)]))))}}),vu=j({name:"TagList",setup(){const n=hn(),s=Vt(),a=t=>{var e;return t===((e=n.value.blog)==null?void 0:e.name)};return()=>p("ul",{class:"tag-list-wrapper"},Ea(s.value.map).sort(([,t],[,e])=>e.items.length-t.items.length).map(([t,{path:e,items:o}])=>p("li",{class:["tag",`color${Pt(t,Number(zs.colorNumber))}`,{active:a(t)}]},p(Dn,{to:e},()=>[t,p("span",{class:"tag-num"},o.length)]))))}}),kg=j({name:"TimelineList",setup(){const n=ln(),s=bp(),a=Sa(),t=_(()=>n.value.blogLocales.timeline);return()=>p("div",{class:"timeline-list-wrapper"},[p("div",{class:"timeline-list-title",onClick:()=>a(s.value.path)},[p(Ap),p("span",{class:"num"},s.value.items.length),t.value]),p("hr"),p("div",{class:"timeline-content"},p("ul",{class:"timeline-list"},s.value.config.map(({year:e,items:o},c)=>p(on,{appear:!0,delay:.08*(c+1)},()=>p("li",[p("h3",{class:"timeline-year"},e),p("ul",{class:"timeline-year-wrapper"},o.map(({date:l,info:r,path:i})=>p("li",{class:"timeline-item"},[p("span",{class:"timeline-date"},l),p(Dn,{class:"timeline-title",to:i},()=>r[Un.title])])))])))))])}});const dg={article:xe,category:Ep,tag:Sp,timeline:Ap};var yu=j({name:"InfoList",setup(){const n=ln(),s=Mt(),a=jt(),t=_(()=>hs(a.value.map).length),e=_p(),o=Vt(),c=_(()=>hs(o.value.map).length),l=Sa(),r=J("article"),i=_(()=>n.value.blogLocales);return()=>p("div",{class:"vp-blog-infos"},[p("div",{class:"vp-blog-type-switcher"},Ea(dg).map(([u,k])=>p("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{r.value=u}},p("div",{class:["icon-wrapper",{active:r.value===u}],"aria-label":i.value[u],"data-balloon-pos":"up"},p(k))))),p(on,()=>r.value==="article"?p("div",{class:"vp-star-article-wrapper"},[p("div",{class:"title",onClick:()=>l(s.value.path)},[p(xe),p("span",{class:"num"},s.value.items.length),i.value.article]),p("hr"),e.value.items.length?p("ul",{class:"vp-star-articles"},e.value.items.map(({info:u,path:k},d)=>p(on,{appear:!0,delay:.08*(d+1)},()=>p("li",{class:"vp-star-article"},p(Dn,{to:k},()=>u[Un.title]))))):p("div",{class:"vp-star-article-empty"},i.value.empty.replace("$text",i.value.star))]):r.value==="category"?p("div",{class:"vp-category-wrapper"},[t.value?[p("div",{class:"title",onClick:()=>l(a.value.path)},[p(Ep),p("span",{class:"num"},t.value),i.value.category]),p("hr"),p(on,{delay:.04},()=>p(gu))]:p("div",{class:"vp-category-empty"},i.value.empty.replace("$text",i.value.category))]):r.value==="tag"?p("div",{class:"vp-tag-wrapper"},[c.value?[p("div",{class:"title",onClick:()=>l(o.value.path)},[p(Sp),p("span",{class:"num"},c.value),i.value.tag]),p("hr"),p(on,{delay:.04},()=>p(vu))]:p("div",{class:"vp-tag-empty"},i.value.empty.replace("$text",i.value.tag))]):p(on,()=>p(kg)))])}}),Ce=j({name:"BlogWrapper",slots:Object,setup(n,{slots:s}){const{isMobile:a}=Dt();return()=>[p(yp),p(vp,{noSidebar:!0,noToc:!0},{default:()=>s.default(),navScreenBottom:()=>p(wp),sidebar:a.value?()=>p(yu):null})]}});const $t=()=>p("aside",{class:"vp-blog-info-wrapper"},[p(on,()=>p(wp)),p(on,{delay:.04},()=>p(yu))]);$t.displayName="InfoPanel";var mg=j({name:"BlogPage",setup(){const n=_n(),s=hn(),a=jt(),t=Vt();return()=>{const{key:e="",name:o=""}=s.value.blog||{},c=o?e==="category"?a.value.map[o].items:e==="tag"?t.value.map[o].items:[]:[];return p(Ce,()=>p("div",{class:"vp-page vp-blog"},p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[p(on,()=>e==="category"?p(gu):e==="tag"?p(vu):null),o?p(on,{appear:!0,delay:.24},()=>p(Lp,{key:n.value.path,items:c})):null]),p(on,{delay:.16},()=>p($t,{key:"blog"}))])))}}});const hg="//theme-hope-assets.vuejs.press/hero/default.jpg";var fg=j({name:"BlogHero",slots:Object,setup(n,{slots:s}){const a=hn(),t=za(),e=Bn(),o=_(()=>a.value.heroFullScreen??!1),c=_(()=>{const{heroText:r,heroImage:i,heroImageDark:u,heroAlt:k,heroImageStyle:d,tagline:h}=a.value;return{text:r??t.value.title??"Hello",tagline:h??"",image:i?vn(i):null,imageDark:u?vn(u):null,alt:k??r??"",imageStyle:d,isFullScreen:o.value}}),l=_(()=>{const{bgImage:r,bgImageDark:i,bgImageStyle:u}=a.value;return{image:xn(r)?vn(r):r===!1?null:hg,imageDark:xn(i)?vn(i):null,bgStyle:u,isFullScreen:o.value}});return()=>{var r,i;return a.value.hero===!1?null:p("div",{ref:e,class:["vp-blog-hero",{fullscreen:o.value,"no-bg":!l.value.image}]},[((r=s.bg)==null?void 0:r.call(s,l.value))??[l.value.image?p("div",{class:["vp-blog-mask",{light:l.value.imageDark}],style:[{background:`url(${l.value.image}) center/cover no-repeat`},l.value.bgStyle]}):null,l.value.imageDark?p("div",{class:"vp-blog-mask dark",style:[{background:`url(${l.value.imageDark}) center/cover no-repeat`},l.value.bgStyle]}):null],((i=s.info)==null?void 0:i.call(s,c.value))??[p(on,{appear:!0,type:"group",delay:.04},()=>{const{image:u,imageDark:k,imageStyle:d,alt:h}=c.value;return[u?p("img",{key:"light",class:["vp-blog-hero-image",{light:k}],style:d,src:u,alt:h}):null,k?p("img",{key:"dark",class:"vp-blog-hero-image dark",style:d,src:k,alt:h}):null]}),p(on,{appear:!0,delay:.08},()=>c.value.text?p("h1",{class:"vp-blog-hero-title"},c.value.text):null),p(on,{appear:!0,delay:.12},()=>c.value.tagline?p("p",{class:"vp-blog-hero-description",innerHTML:c.value.tagline}):null)],c.value.isFullScreen?p("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:e.value.clientHeight,behavior:"smooth"})}},[p(Io),p(Io)]):null])}}});const gg=["link","article","book","project","friend"];var vg=j({name:"ProjectPanel",components:{ArticleIcon:xe,BookIcon:ku,FriendIcon:hu,LinkIcon:du,ProjectIcon:mu},props:{items:{type:Array,required:!0}},setup(n){const s=Yn(),a=Sa(),t=(e="",o="icon")=>gg.includes(e)?p(ks(`${e}-icon`)):_a(e)?p("img",{class:"vp-project-image",src:e,alt:o}):It(e)?p("img",{class:"vp-project-image",src:vn(e),alt:o}):p(Hn,{icon:e});return()=>p("div",{class:"vp-project-panel"},n.items.map(({icon:e,link:o,name:c,desc:l,background:r})=>p("div",{class:["vp-project-card",{[`color${Pt(c,Number(zs.colorNumber))}`]:!s.value&&!r}],...r?{style:r}:{},onClick:()=>a(o)},[t(e,c),p("div",{class:"vp-project-name"},c),p("div",{class:"vp-project-desc"},l)])))}}),yg=j({name:"BlogHomePage",setup(){const n=Mt(),s=hn(),a=_(()=>s.value.projects??[]);return()=>p("div",{class:"vp-page vp-blog"},[p(fg),p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[a.value.length?p(on,{appear:!0,delay:.16},()=>p(vg,{items:a.value})):null,p(on,{appear:!0,delay:.24},()=>p(Lp,{items:n.value.items}))]),p(on,{appear:!0,delay:.16},()=>p($t,{key:"blog"}))]),p(on,{appear:!0,delay:.28},()=>p($a))])}});const bu=()=>p(Ce,()=>p(yg));bu.displayName="BlogHome";var bg=bu,_g=j({name:"ArticleType",setup(){const n=_n(),s=Ss(),a=ln(),t=Mt(),e=_p(),o=_(()=>{const c=a.value.blogLocales;return[{text:c.all,path:t.value.path},{text:c.star,path:e.value.path},...Xf.map(({key:l,path:r})=>({text:c[l],path:r.replace(/^\//,s.value)}))]});return()=>p("ul",{class:"vp-article-type-wrapper"},o.value.map(c=>p("li",{class:["vp-article-type",{active:c.path===n.value.path}]},p(Dn,{to:c.path},()=>c.text))))}}),wg=j({name:"BlogPage",setup(){const n=Le(),s=hn(),a=_n(),t=Mt(),e=_p(),o=_(()=>{const{key:c="",type:l}=s.value.blog||{};return c==="star"?e.value.items:l==="type"&&c?n.value.items:t.value.items});return()=>p(Ce,()=>p("div",{class:"vp-page vp-blog"},p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[p(on,()=>p(_g)),p(on,{appear:!0,delay:.24},()=>p(Lp,{key:a.value.path,items:o.value}))]),p(on,{delay:.16},()=>p($t,{key:"blog"}))])))}}),Eg=j({name:"TimelineItems",setup(){const n=Nt(),s=ln(),a=bp(),t=_(()=>n.value.timeline??s.value.blogLocales.timelineTitle),e=_(()=>a.value.config.map(({year:o})=>({title:o.toString(),level:2,slug:o.toString(),children:[]})));return()=>p("div",{class:"timeline-wrapper"},p("ul",{class:"timeline-content"},[p(on,()=>p("li",{class:"motto"},t.value)),p(Yi,{items:e.value}),a.value.config.map(({year:o,items:c},l)=>p(on,{appear:!0,delay:.08*(l+1),type:"group"},()=>[p("h3",{key:"title",id:o,class:"timeline-year-title"},p("span",o)),p("li",{key:"content",class:"timeline-year-list"},[p("ul",{class:"timeline-year-wrapper"},c.map(({date:r,info:i,path:u})=>p("li",{class:"timeline-item"},[p("span",{class:"timeline-date"},r),p(Dn,{class:"timeline-title",to:u},()=>i[Un.title])])))])]))]))}});const _u=()=>p(Ce,()=>p("div",{class:"vp-page vp-blog"},p("div",{class:"blog-page-wrapper"},[p("main",{id:"main-content",class:"vp-blog-main"},[p(on,{appear:!0,delay:.24},()=>p(Eg))]),p(on,{delay:.16},()=>p($t,{key:"blog"}))])));_u.displayName="Timeline";var Sg=_u;X1(n=>{const s=n.t,a=n.I!==!1,t=n.i;return a?{title:s,content:t?()=>[p(Hn,{icon:t}),s]:null,order:n.O,index:n.I}:null});const Ag=es({enhance:({app:n,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...t)=>(await Lo.wait(),a(...t)),Z2(n),n.component("HopeIcon",Hn),n.component("BloggerInfo",wp),n.component("SocialMedias",ru)},setup:()=>{nf(),tf(),eg()},layouts:{Layout:Jf,NotFound:Wf,BlogCategory:mg,BlogHome:bg,BlogType:wg,Timeline:Sg}}),Kc=1e3*60*60*24,Lg=(n,s={"/":"Running time: :day days :hour hours :minute minutes :second seconds"},a=!1)=>{const t=(n instanceof Date?n:new Date(n)).getTime();let e="";const o=_n(),c=S1(),l=Ss(),r=_(()=>{const i=c.value.getTime()-t,u=new Date(i%Kc);return{day:Math.floor(i/Kc),hour:u.getHours(),minute:u.getMinutes(),second:u.getSeconds()}});mn(()=>{en(()=>[o.value.path,r.value],()=>{const i=document.querySelector(".vp-footer");if(i){const{day:u,hour:k,minute:d,second:h}=r.value,g=(s[l.value]||s["/"]).replace(":day",u.toString()).replace(":hour",k.toString()).replace(":minute",d.toString()).replace(":second",h.toString());i.innerHTML=`${a?`${i.innerHTML.replace(`<br>${e}`,"")}<br>`:""}${g}`,e=g}},{flush:"post",immediate:!0})})},xg=es({setup(){Lg(new Date("2023-03-20"),{"/":"本站已运行 :day 天 :hour 小时 :minute 分钟 :second 秒"},!0)}}),se=[Om,G1,Y1,th,ph,ih,hh,Eh,Oh,a2,f2,$2,Ag,xg],Cg=JSON.parse(`{"base":"/","lang":"zh-CN","title":"Simeis 147","description":"Simeis 147's Blog","head":[["link",{"rel":"stylesheet","href":"https://cdn.staticfile.net/lxgw-wenkai-webfont/1.7.0/style.css"}],["script",{"type":"text/javascript","src":"/assets/js/51la.js"}]],"locales":{}}`);var Ka=Bn(Cg),Og=U0,Bg=()=>{const n=vm({history:Og(Zo("/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(s,a,t)=>t||(s.hash?{el:s.hash}:{top:0})});return n.beforeResolve(async(s,a)=>{if(s.path!==a.path||a===js){const t=Bs(s.fullPath);if(t.path!==s.fullPath)return t.path;const e=await t.loader();s.meta={...t.meta,_pageChunk:e}}else s.path===a.path&&(s.meta=a.meta)}),n},Ig=n=>{n.component("ClientOnly",Ee),n.component("Content",Sr),n.component("RouteLink",Dn)},Tg=(n,s,a)=>{const t=_(()=>s.currentRoute.value.path),e=wl((E,b)=>({get(){return E(),s.currentRoute.value.meta._pageChunk},set(S){s.currentRoute.value.meta._pageChunk=S,b()}})),o=_(()=>ua.resolveLayouts(a)),c=_(()=>ua.resolveRouteLocale(Ka.value.locales,t.value)),l=_(()=>ua.resolveSiteLocaleData(Ka.value,c.value)),r=_(()=>e.value.comp),i=_(()=>e.value.data),u=_(()=>i.value.frontmatter),k=_(()=>ua.resolvePageHeadTitle(i.value,l.value)),d=_(()=>ua.resolvePageHead(k.value,u.value,l.value)),h=_(()=>ua.resolvePageLang(i.value,l.value)),g=_(()=>ua.resolvePageLayout(i.value,o.value)),w={layouts:o,pageData:i,pageComponent:r,pageFrontmatter:u,pageHead:d,pageHeadTitle:k,pageLang:h,pageLayout:g,redirects:go,routeLocale:c,routePath:t,routes:ft,siteData:Ka,siteLocaleData:l};return n.provide(ap,w),Object.defineProperties(n.config.globalProperties,{$frontmatter:{get:()=>u.value},$head:{get:()=>d.value},$headTitle:{get:()=>k.value},$lang:{get:()=>h.value},$page:{get:()=>i.value},$routeLocale:{get:()=>c.value},$site:{get:()=>Ka.value},$siteLocale:{get:()=>l.value},$withBase:{get:()=>vn}}),w},Pg=()=>{const n=_m(),s=tp();let a=[];const t=()=>{n.value.forEach(c=>{const l=Dg(c);l&&a.push(l)})},e=()=>{const c=[];return n.value.forEach(l=>{const r=Rg(l);r&&c.push(r)}),c},o=()=>{document.documentElement.lang=s.value;const c=e();a.forEach((l,r)=>{const i=c.findIndex(u=>l.isEqualNode(u));i===-1?(l.remove(),delete a[r]):c.splice(i,1)}),c.forEach(l=>document.head.appendChild(l)),a=[...a.filter(l=>!!l),...c]};ds(Am,o),mn(()=>{t(),en(n,o,{immediate:!1})})},Dg=([n,s,a=""])=>{const t=Object.entries(s).map(([l,r])=>xn(r)?`[${l}=${JSON.stringify(r)}]`:r===!0?`[${l}]`:"").join(""),e=`head > ${n}${t}`;return Array.from(document.querySelectorAll(e)).find(l=>l.innerText===a)||null},Rg=([n,s,a])=>{if(!xn(n))return null;const t=document.createElement(n);return Ot(s)&&Object.entries(s).forEach(([e,o])=>{xn(o)?t.setAttribute(e,o):o===!0&&t.setAttribute(e,"")}),xn(a)&&t.appendChild(document.createTextNode(a)),t},Mg=s0,jg=async()=>{var a;const n=Mg({name:"Vuepress",setup(){var o;Pg();for(const c of se)(o=c.setup)==null||o.call(c);const t=se.flatMap(({rootComponents:c=[]})=>c.map(l=>p(l))),e=wm();return()=>[p(e.value),t]}}),s=Bg();Ig(n),Tg(n,s,se);for(const t of se)await((a=t.enhance)==null?void 0:a.call(t,{app:n,router:s,siteData:Ka}));return n.use(s),{app:n,router:s}};jg().then(({app:n,router:s})=>{s.isReady().then(()=>{n.mount("#app")})});export{Bn as A,mn as B,yi as C,A2 as D,ba as E,Gg as F,Ot as G,y2 as H,_2 as I,Rr as J,de as K,xn as L,dp as P,Dn as R,Fg as a,Zl as b,Hg as c,jg as createVueApp,Rn as d,nr as e,j as f,wa as g,Ss as h,qs as i,Fa as j,Et as k,J as l,_ as m,Cn as n,$g as o,en as p,p as q,ks as r,fi as s,Ng as t,qg as u,b2 as v,bk as w,g2 as x,v2 as y,_n as z};

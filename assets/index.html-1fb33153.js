import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,a as r,e as t,f as i,b as h}from"./app-198007b4.js";const n="/assets/image-20210721184354001-3f8bc7d1.png",s="/assets/image-20210721214029913-8f687dc1.png",o="/assets/image-20221205152804250-738c79ea.png",l="/assets/20230318221311-09f720f9.png",c={},b=t("h1",{id:"mysql基础",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mysql基础","aria-hidden":"true"},"#"),i(" MySQL基础")],-1),g=h('<h2 id="_1-数据库相关概念" tabindex="-1"><a class="header-anchor" href="#_1-数据库相关概念" aria-hidden="true">#</a> 1 数据库相关概念</h2><p>数据持久化的存储采用的是<strong>文件存储</strong>。</p><h3 id="_1-1-数据库" tabindex="-1"><a class="header-anchor" href="#_1-1-数据库" aria-hidden="true">#</a> 1.1 数据库</h3><ul><li>DataBase，简称 DB。</li><li>存储和管理数据的仓库。</li></ul><h3 id="_1-2-数据库管理系统" tabindex="-1"><a class="header-anchor" href="#_1-2-数据库管理系统" aria-hidden="true">#</a> 1.2 数据库管理系统</h3><ul><li>DataBase Management System，简称 DBMS</li><li>管理数据库的大型软件</li></ul><h3 id="_1-3-常见的数据库管理系统" tabindex="-1"><a class="header-anchor" href="#_1-3-常见的数据库管理系统" aria-hidden="true">#</a> 1.3 常见的数据库管理系统</h3><figure><img src="'+n+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>Oracle：收费的大型数据库</li><li><strong>MySQL</strong>： 开源免费的中小型数据库。后来 Sun 公司收购了 MySQL，而 Sun 公司又被 Oracle 收购</li><li>SQL Server：MicroSoft 公司收费的中型数据库。C#、.net 等语言常使用</li><li>PostgreSQL：开源免费的中小型数据库</li><li>DB2：IBM 公司的大型收费数据库产品</li><li>SQLite：嵌入式的微型数据库。如：作为 Android 内置数据库</li><li>MariaDB：开源免费中小型的数据库</li></ul><h2 id="_2-mysql数据模型" tabindex="-1"><a class="header-anchor" href="#_2-mysql数据模型" aria-hidden="true">#</a> 2 MySQL数据模型</h2><h3 id="_2-1-关系型数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-关系型数据库" aria-hidden="true">#</a> 2.1 关系型数据库</h3><p>关系型数据库是 建立在关系模型基础上的数据库</p><p>关系型数据库是 由多张能互相连接的 <strong>二维表</strong> 组成的数据库</p><figure><img src="'+s+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上图中右边的 <code>db.frm</code> 是表文件，<code>db.MYD</code> 是数据文件，通过这两个文件就可以查询到数据展示成二维表的效果。</p><h3 id="_2-2-小结" tabindex="-1"><a class="header-anchor" href="#_2-2-小结" aria-hidden="true">#</a> 2.2 小结</h3><ul><li>MySQL 中可以创建多个数据库，每个数据库对应到磁盘上的一个文件夹</li><li>在每个数据库中可以创建多个表，每张都对应到磁盘上一个 frm 文件</li><li>每张表可以存储多条数据，数据会被存储到磁盘中 MYD 文件中</li></ul><h2 id="_3-sql概述" tabindex="-1"><a class="header-anchor" href="#_3-sql概述" aria-hidden="true">#</a> 3 SQL概述</h2><h3 id="_3-1-sql简介" tabindex="-1"><a class="header-anchor" href="#_3-1-sql简介" aria-hidden="true">#</a> 3.1 SQL简介</h3><p>Structured Query Language，简称 SQL，结构化查询语言</p><div class="hint-container note"><p class="hint-container-title">SQL</p><p>操作关系型数据库的编程语言<br> 定义操作所有关系型数据库的统一标准，可以使用SQL操作所有的关系型数据库管理系统</p><p>对于同一个需求，每一种数据库操作的方式可能会存在一些不一样的地方，我们称为“方言”</p></div><h3 id="_3-2-sql分类" tabindex="-1"><a class="header-anchor" href="#_3-2-sql分类" aria-hidden="true">#</a> 3.2 SQL分类</h3><p>SQL语句根据其功能被分为四大类：DDL、DML、DQL、DCL</p><table><thead><tr><th><strong>分类</strong></th><th><strong>全称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>DDL</td><td>Data Definition Language</td><td>数据定义语言，用来定义数据库对象(数据库，表，字段)</td></tr><tr><td>DML</td><td>Data Manipulation Language</td><td>数据操作语言，用来对数据库表中的数据进行增删改</td></tr><tr><td>DQL</td><td>Data Query Language</td><td>数据查询语言，用来查询数据库中表的记录</td></tr><tr><td>DCL</td><td>Data Control Language</td><td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td></tr></tbody></table><figure><img src="'+o+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意： 开发中最常用操作就是 <code>DML</code> 和 <code>DQL</code></p></blockquote><h2 id="_4-数据类型" tabindex="-1"><a class="header-anchor" href="#_4-数据类型" aria-hidden="true">#</a> 4 数据类型</h2><p>MySQL中的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型。</p><figure><img src="'+l+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-1-数值类型" tabindex="-1"><a class="header-anchor" href="#_4-1-数值类型" aria-hidden="true">#</a> 4.1 数值类型</h3><table><thead><tr><th>类型</th><th>大小</th><th>有符号(SIGNED)范围</th><th>无符号(UNSIGNED)范围</th></tr></thead><tbody><tr><td>TINYINT</td><td>1byte</td><td>(-128，127)</td><td>(0，255)</td></tr><tr><td>SMALLINT</td><td>2bytes</td><td>(-32768，32767)</td><td>(0，65535)</td></tr><tr><td>MEDIUMINT</td><td>3bytes</td><td>(-8388608，8388607)</td><td>(0，16777215)</td></tr><tr><td>INT/INTEGER</td><td>4bytes</td><td>(-2147483648，2147483647)</td><td>(0，4294967295)</td></tr><tr><td>BIGINT</td><td>8bytes</td><td>(-2^63, 2^63-1)</td><td>(0，2^64-1)</td></tr><tr><td>FLOAT</td><td>4bytes</td><td>(-3.402823466 E+38，3.402823466351 E+38)</td><td>0 和 (1.175494351 E-38，3.402823466 E+38)</td></tr><tr><td>DOUBLE</td><td>8bytes</td><td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td><td>0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td></tr><tr><td>DECIMAL</td><td></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td></tr></tbody></table><h3 id="_4-2-字符串类型" tabindex="-1"><a class="header-anchor" href="#_4-2-字符串类型" aria-hidden="true">#</a> 4.2 字符串类型</h3><table><thead><tr><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串(需要指定长度)</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串(需要指定长度)</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过255个字符的二进制数据</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><div class="hint-container note"><p class="hint-container-title">char 与 varchar</p><p>char 与 varchar 都可以描述字符串</p><p>char是定长字符串，指定长度多长，就占用多少个字符，和字段值的长度无关<br> varchar是变长字符串，指定的长度为最大占用长度。</p></div><h3 id="_4-3-日期时间类型" tabindex="-1"><a class="header-anchor" href="#_4-3-日期时间类型" aria-hidden="true">#</a> 4.3 日期时间类型</h3><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901 至 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table>',36);function _(p,u){return a(),e("div",null,[b,r(" more "),g])}const y=d(c,[["render",_],["__file","index.html.vue"]]);export{y as default};

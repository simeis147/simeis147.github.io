import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as p}from"./app-HBWujhpY.js";const t="/assets/image-20221209162827242-mhzBJP6t.png",e="/assets/image-20221209163123443-oXOnuzoW.png",o="/assets/image-20220901121116813-D_dbJn7X.png",c="/assets/image-20221209170354143-4xY3KTHh.png",l="/assets/image-20221209172527630-0PBmtg23.png",i="/assets/image-20221209175843651-F1WBf1C7.png",u="/assets/image-20221210143348119-5E7ZDDNN.png",r="/assets/image-20221210143934318-FtdKNvvs.png",k="/assets/image-20221210144139792-97Un1uoS.png",d={},m=p('<h1 id="mybatis快速入门" tabindex="-1"><a class="header-anchor" href="#mybatis快速入门" aria-hidden="true">#</a> Mybatis快速入门</h1><h2 id="_1-入门程序分析" tabindex="-1"><a class="header-anchor" href="#_1-入门程序分析" aria-hidden="true">#</a> 1. 入门程序分析</h2><p>Mybatis操作数据库步骤：</p><ol><li><p>准备工作 ( 创建springboot工程、数据库表user、实体类User )</p></li><li><p>引入Mybatis的相关依赖，配置Mybatis ( 数据库连接信息 )</p></li><li><p>编写SQL语句 ( 注解/XML )</p></li></ol><h2 id="_2-入门程序实现" tabindex="-1"><a class="header-anchor" href="#_2-入门程序实现" aria-hidden="true">#</a> 2 入门程序实现</h2><h3 id="_2-1-项目创建" tabindex="-1"><a class="header-anchor" href="#_2-1-项目创建" aria-hidden="true">#</a> 2.1 项目创建</h3><p>创建springboot工程，并导入 mybatis 的起步依赖、 mysql 的驱动包</p><figure><img src="'+t+'" alt=" " width="600" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+e+`" alt=" " width="600" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- mybatis起步依赖 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- mysql驱动包依赖 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        
        <span class="token comment">&lt;!-- spring单元测试 (集成了junit) --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-数据准备" tabindex="-1"><a class="header-anchor" href="#_2-2-数据准备" aria-hidden="true">#</a> 2.2 数据准备</h3><p>创建用户表user，并创建对应的实体类User</p><ul><li>用户表：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 用户表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">user</span><span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">unsigned</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
    age <span class="token keyword">tinyint</span> <span class="token keyword">unsigned</span> <span class="token keyword">comment</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
    gender <span class="token keyword">tinyint</span> <span class="token keyword">unsigned</span> <span class="token keyword">comment</span> <span class="token string">&#39;性别, 1:男, 2:女&#39;</span><span class="token punctuation">,</span>
    phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;手机号&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户表&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 测试数据</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;白眉鹰王&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800000000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;金毛狮王&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800000001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;青翼蝠王&#39;</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800000002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;紫衫龙王&#39;</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800000003&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;光明左使&#39;</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800000004&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;光明右使&#39;</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800000005&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>实体类</li></ul><p>实体类的属性名与表中的字段名一一对应</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>   <span class="token comment">//id（主键）</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>  <span class="token comment">//姓名</span>
    <span class="token keyword">private</span> <span class="token class-name">Short</span> age<span class="token punctuation">;</span>    <span class="token comment">//年龄</span>
    <span class="token keyword">private</span> <span class="token class-name">Short</span> gender<span class="token punctuation">;</span> <span class="token comment">//性别</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span> <span class="token comment">//手机号</span>
    
    <span class="token comment">//省略GET, SET方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+c+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-配置mybatis" tabindex="-1"><a class="header-anchor" href="#_2-3-配置mybatis" aria-hidden="true">#</a> 2.3 配置Mybatis</h3><p>连接MySQL数据库时，需要配置：</p><figure><img src="'+l+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container note"><p class="hint-container-title">连接数据库的四大参数</p><p>MySQL驱动类<br> 登录名<br> 密码<br> 数据库连接字符串</p></div><p>基于上述分析，在Mybatis中要连接数据库，同样也需要以上4个参数配置</p><p>application.properties:</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#驱动类名称</span>
<span class="token key attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>
<span class="token comment">#数据库连接的url</span>
<span class="token key attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/mybatis</span>
<span class="token comment">#连接数据库的用户名</span>
<span class="token key attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token comment">#连接数据库的密码</span>
<span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-编写sql语句" tabindex="-1"><a class="header-anchor" href="#_2-4-编写sql语句" aria-hidden="true">#</a> 2.4 编写SQL语句</h3><p>在springboot工程中，引导类所在包下，再创建一个包mapper。在mapper包下创建一个接口UserMapper，这是一个持久层接口（Mybatis的持久层接口规范一般都叫 XxxMapper）</p><figure><img src="`+i+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>UserMapper：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Mapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Select</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>
    
    <span class="token comment">//查询所有用户数据</span>
    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select id, name, age, gender, phone from user&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>@Mapper注解：表示是mybatis中的Mapper接口</p><ul><li>程序运行时：框架会自动生成接口的实现类对象(代理对象)，并给交Spring的IOC容器管理</li></ul><p>@Select注解：代表的就是select查询，用于书写select查询语句</p></blockquote><h3 id="_2-5-单元测试" tabindex="-1"><a class="header-anchor" href="#_2-5-单元测试" aria-hidden="true">#</a> 2.5 单元测试</h3><p>在SpringBoot工程中，在src下的test目录下，已经自动帮我们创建好了测试类 ，并且在测试类上已经添加了注解 @SpringBootTest，代表该测试类已经与SpringBoot整合</p><p>该测试类在运行时，会自动通过引导类加载Spring的环境（IOC容器）。 <strong>要测试哪个bean对象，直接通过 @Autowired 注解直接将其注入就行，然后就可以测试了</strong></p><p>测试类代码如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisQuickstartApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">User</span> user <span class="token operator">:</span> userList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">User</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token char">&#39;白眉鹰王&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">55</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> phone<span class="token operator">=</span>&#39;<span class="token number">18800000000</span>&#39;<span class="token punctuation">}</span>
<span class="token class-name">User</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token char">&#39;金毛狮王&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> phone<span class="token operator">=</span>&#39;<span class="token number">18800000001</span>&#39;<span class="token punctuation">}</span>
<span class="token class-name">User</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token char">&#39;青翼蝠王&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">38</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> phone<span class="token operator">=</span>&#39;<span class="token number">18800000002</span>&#39;<span class="token punctuation">}</span>
<span class="token class-name">User</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token char">&#39;紫衫龙王&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> phone<span class="token operator">=</span>&#39;<span class="token number">18800000003</span>&#39;<span class="token punctuation">}</span>
<span class="token class-name">User</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token char">&#39;光明左使&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> phone<span class="token operator">=</span>&#39;<span class="token number">18800000004</span>&#39;<span class="token punctuation">}</span>
<span class="token class-name">User</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token char">&#39;光明右使&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">48</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> phone<span class="token operator">=</span>&#39;<span class="token number">18800000005</span>&#39;<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-解决sql警告与提示" tabindex="-1"><a class="header-anchor" href="#_3-解决sql警告与提示" aria-hidden="true">#</a> 3 解决SQL警告与提示</h2><p>默认在UserMapper接口上加的 @Select 注解中编写SQL语句是没有提示的。 如果想让idea提示对应的SQL语句，需要在IDEA中配置与MySQL数据库的链接</p><figure><img src="`+u+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>配置完成之后，发现SQL语句中的关键字有提示了，但还存在不识别表名(列名)的情况</p><figure><img src="'+r+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+k+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure>',45),g=[m];function v(b,y){return s(),a("div",null,g)}const f=n(d,[["render",v],["__file","mybatis04.html.vue"]]);export{f as default};

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,b as n,d as a,e,a as r}from"./app-Bf9DzD39.js";const l={},i=n("h1",{id:"有效的字母异位词",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#有效的字母异位词"},[n("span",null,"有效的字母异位词")])],-1),u={href:"https://leetcode.cn/problems/valid-anagram/description/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"相关题目",-1),k={href:"https://leetcode.cn/problems/ransom-note/description/",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),h={href:"https://leetcode.cn/problems/group-anagrams/description/",target:"_blank",rel:"noopener noreferrer"},b=n("br",null,null,-1),v={href:"https://leetcode.cn/problems/find-all-anagrams-in-a-string/description/",target:"_blank",rel:"noopener noreferrer"},g=r(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 242. 有效的字母异位词 字典解法
 * 时间复杂度O(m+n) 空间复杂度O(1)
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnagram</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            record<span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>  
            <span class="token comment">// 并不需要记住字符a的ASCII，只要求出一个相对数值就可以了</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            record<span class="token punctuation">[</span>t<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> count<span class="token operator">:</span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                <span class="token comment">// record数组如果有的元素不为零0，说明字符串s和t 一定是谁多了字符或者谁少了字符。</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
        <span class="token comment">// record数组所有元素都为零0，说明字符串s和t是字母异位词</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function _(f,y){const s=o("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[n("a",u,[a("242.有效的字母异位词"),e(s)])]),d,n("p",null,[n("a",k,[a("383.赎金信"),e(s)]),m,n("a",h,[a("49. 字母异位词分组"),e(s)]),b,n("a",v,[a("438.找到字符串中所有字母异位词"),e(s)])]),g])}const x=t(l,[["render",_],["__file","hashtable02.html.vue"]]),A=JSON.parse('{"path":"/ComputerBasics/Algorithm/03HashTable/hashtable02.html","title":"有效的字母异位词","lang":"zh-CN","frontmatter":{"order":2,"date":"2024-03-01T00:00:00.000Z","category":["算法","哈希表"],"description":"有效的字母异位词 242.有效的字母异位词 相关题目 383.赎金信 49. 字母异位词分组 438.找到字符串中所有字母异位词","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/ComputerBasics/Algorithm/03HashTable/hashtable02.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"有效的字母异位词"}],["meta",{"property":"og:description","content":"有效的字母异位词 242.有效的字母异位词 相关题目 383.赎金信 49. 字母异位词分组 438.找到字符串中所有字母异位词"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T02:37:49.000Z"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2024-03-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-01T02:37:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"有效的字母异位词\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-01T02:37:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[],"git":{"createdTime":1709260669000,"updatedTime":1709260669000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":1}]},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"ComputerBasics/Algorithm/03HashTable/hashtable02.md","localizedDate":"2024年3月1日","excerpt":"\\n<p><a href=\\"https://leetcode.cn/problems/valid-anagram/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">242.有效的字母异位词</a></p>\\n<p>相关题目</p>\\n<p><a href=\\"https://leetcode.cn/problems/ransom-note/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">383.赎金信</a><br>\\n<a href=\\"https://leetcode.cn/problems/group-anagrams/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">49. 字母异位词分组</a><br>\\n<a href=\\"https://leetcode.cn/problems/find-all-anagrams-in-a-string/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">438.找到字符串中所有字母异位词</a></p>","autoDesc":true}');export{x as comp,A as data};

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c as l,b as n,d as a,e,a as c}from"./app-CQ5x_3m8.js";const i={},r=n("h1",{id:"二分法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二分法"},[n("span",null,"二分法")])],-1),u=n("p",null,"O(logn)",-1),d=n("h2",{id:"相关题目推荐",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#相关题目推荐"},[n("span",null,"相关题目推荐")])],-1),k={href:"https://leetcode.cn/problems/binary-search/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://leetcode.cn/problems/search-insert-position/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://leetcode.cn/problems/sqrtx/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://leetcode.cn/problems/valid-perfect-square/",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"写法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#写法"},[n("span",null,"写法")])],-1),f={href:"https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/solution/tu-jie-er-fen-zui-qing-xi-yi-dong-de-jia-ddvc/",target:"_blank",rel:"noopener noreferrer"},y=c(`<h3 id="代码模板1" tabindex="-1"><a class="header-anchor" href="#代码模板1"><span>代码模板1</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">bsearch_1</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> r <span class="token operator">=</span> mid<span class="token punctuation">;</span>
        <span class="token keyword">else</span> l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代码模板2" tabindex="-1"><a class="header-anchor" href="#代码模板2"><span>代码模板2</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">bsearch_2</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span> l <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> l <span class="token operator">=</span> mid<span class="token punctuation">;</span>
        <span class="token keyword">else</span> r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本一-左闭右闭区间" tabindex="-1"><a class="header-anchor" href="#版本一-左闭右闭区间"><span>(版本一) 左闭右闭区间</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 避免当 target 小于nums[0] nums[nums.length - 1]时多次循环运算</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span>
                <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span>
                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span>
                right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本二-左闭右开区间" tabindex="-1"><a class="header-anchor" href="#版本二-左闭右开区间"><span>(版本二) 左闭右开区间</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span>
                <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span>
                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span>
                right <span class="token operator">=</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function w(_,x){const s=p("ExternalLinkIcon");return o(),l("div",null,[r,u,d,n("ul",null,[n("li",null,[n("a",k,[a("704. 二分查找"),e(s)])]),n("li",null,[n("a",m,[a("35. 搜索插入位置"),e(s)])]),n("li",null,[n("a",v,[a("34. 在排序数组中查找元素的第一个和最后一个位置"),e(s)])]),n("li",null,[n("a",h,[a("69. x 的平方根"),e(s)])]),n("li",null,[n("a",b,[a("367. 有效的完全平方数"),e(s)])])]),g,n("p",null,[n("a",f,[a("Y总二分法"),e(s)])]),y])}const A=t(i,[["render",w],["__file","arrays02.html.vue"]]),N=JSON.parse('{"path":"/ComputerBasics/Algorithm/01Arrays/arrays02.html","title":"二分法","lang":"zh-CN","frontmatter":{"order":2,"date":"2023-06-08T00:00:00.000Z","category":["算法","数组"],"description":"二分法 O(logn) 相关题目推荐 704. 二分查找 35. 搜索插入位置 34. 在排序数组中查找元素的第一个和最后一个位置 69. x 的平方根 367. 有效的完全平方数 写法 Y总二分法 代码模板1 代码模板2 (版本一) 左闭右闭区间 (版本二) 左闭右开区间","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/ComputerBasics/Algorithm/01Arrays/arrays02.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"二分法"}],["meta",{"property":"og:description","content":"二分法 O(logn) 相关题目推荐 704. 二分查找 35. 搜索插入位置 34. 在排序数组中查找元素的第一个和最后一个位置 69. x 的平方根 367. 有效的完全平方数 写法 Y总二分法 代码模板1 代码模板2 (版本一) 左闭右闭区间 (版本二) 左闭右开区间"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-09T11:42:14.000Z"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2023-06-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T11:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二分法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T11:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"相关题目推荐","slug":"相关题目推荐","link":"#相关题目推荐","children":[]},{"level":2,"title":"写法","slug":"写法","link":"#写法","children":[{"level":3,"title":"代码模板1","slug":"代码模板1","link":"#代码模板1","children":[]},{"level":3,"title":"代码模板2","slug":"代码模板2","link":"#代码模板2","children":[]},{"level":3,"title":"(版本一) 左闭右闭区间","slug":"版本一-左闭右闭区间","link":"#版本一-左闭右闭区间","children":[]},{"level":3,"title":"(版本二) 左闭右开区间","slug":"版本二-左闭右开区间","link":"#版本二-左闭右开区间","children":[]}]}],"git":{"createdTime":1686310934000,"updatedTime":1686310934000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":1}]},"readingTime":{"minutes":1.1,"words":330},"filePathRelative":"ComputerBasics/Algorithm/01Arrays/arrays02.md","localizedDate":"2023年6月8日","excerpt":"\\n<p>O(logn)</p>\\n<h2>相关题目推荐</h2>\\n<ul>\\n<li><a href=\\"https://leetcode.cn/problems/binary-search/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">704. 二分查找</a></li>\\n<li><a href=\\"https://leetcode.cn/problems/search-insert-position/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">35. 搜索插入位置</a></li>\\n<li><a href=\\"https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">34. 在排序数组中查找元素的第一个和最后一个位置</a></li>\\n<li><a href=\\"https://leetcode.cn/problems/sqrtx/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">69. x 的平方根</a></li>\\n<li><a href=\\"https://leetcode.cn/problems/valid-perfect-square/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">367. 有效的完全平方数</a></li>\\n</ul>","autoDesc":true}');export{A as comp,N as data};

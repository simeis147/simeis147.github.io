import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as e,b as n,d as o,e as c,a as l}from"./app-DLpQ8YTK.js";const i={},u=n("h1",{id:"反转字符串",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#反转字符串"},[n("span",null,"反转字符串")])],-1),r={href:"https://leetcode.cn/problems/reverse-string/",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="写法" tabindex="-1"><a class="header-anchor" href="#写法"><span>写法</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//构造 a ^ b 的结果，并放在 a 中</span>
            s<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//将 a ^ b 这一结果再 ^ b ，存入b中，此时 b = a, a = a ^ b</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//a ^ b 的结果再 ^ a ，存入 a 中，此时 b = a, a = b 完成交换</span>
            l<span class="token operator">++</span><span class="token punctuation">;</span>
            r<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 第二种方法用temp来交换数值更多人容易理解些</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">char</span> temp <span class="token operator">=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>
            s<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            l<span class="token operator">++</span><span class="token punctuation">;</span>
            r<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function d(m,v){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",r,[o("344.反转字符串"),c(s)])]),k])}const y=a(i,[["render",d],["__file","doublePointer02.html.vue"]]),g=JSON.parse('{"path":"/ComputerBasics/Algorithm/05DoublePointer/doublePointer02.html","title":"反转字符串","lang":"zh-CN","frontmatter":{"order":2,"date":"2024-03-04T00:00:00.000Z","category":["算法","双指针"],"description":"反转字符串 344.反转字符串 写法","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/ComputerBasics/Algorithm/05DoublePointer/doublePointer02.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"反转字符串"}],["meta",{"property":"og:description","content":"反转字符串 344.反转字符串 写法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T00:13:04.000Z"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2024-03-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-05T00:13:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反转字符串\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-05T00:13:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"写法","slug":"写法","link":"#写法","children":[]}],"git":{"createdTime":1709532584000,"updatedTime":1709597584000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":2}]},"readingTime":{"minutes":0.55,"words":166},"filePathRelative":"ComputerBasics/Algorithm/05DoublePointer/doublePointer02.md","localizedDate":"2024年3月4日","excerpt":"\\n<p><a href=\\"https://leetcode.cn/problems/reverse-string/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">344.反转字符串</a></p>\\n<h2>写法</h2>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Solution</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">reverseString</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> s<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> l <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> r <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&lt;</span> r<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            s<span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">^=</span> s<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//构造 a ^ b 的结果，并放在 a 中</span>\\n            s<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">^=</span> s<span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//将 a ^ b 这一结果再 ^ b ，存入b中，此时 b = a, a = a ^ b</span>\\n            s<span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">^=</span> s<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//a ^ b 的结果再 ^ a ，存入 a 中，此时 b = a, a = b 完成交换</span>\\n            l<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n            r<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 第二种方法用temp来交换数值更多人容易理解些</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Solution</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">reverseString</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> s<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> l <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> r <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&lt;</span> r<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">char</span> temp <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n            s<span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n            s<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> temp<span class=\\"token punctuation\\">;</span>\\n            l<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n            r<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{y as comp,g as data};

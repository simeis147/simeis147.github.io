const e=JSON.parse('{"key":"v-4270d580","path":"/BackEnd/SpringMVC/springmvc02.html","title":"SpringMVC SSM整合","lang":"zh-CN","frontmatter":{"order":2,"date":"2023-04-17T00:00:00.000Z","category":["SpringMVC","SSM"],"description":"SpringMVC SSM整合 完成SSM的整合开发 能够理解并实现统一结果封装与统一异常处理 能够完成前后台功能整合开发 掌握拦截器的编写 1 SSM整合 前面我们已经把Mybatis、Spring和SpringMVC三个框架进行了学习，今天主要的内容就是把这三个框架整合在一起完成我们的业务功能开发，具体如何来整合，我们一步步来学习。","head":[["meta",{"property":"og:url","content":"https://github.com/simeis147/BackEnd/SpringMVC/springmvc02.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"SpringMVC SSM整合"}],["meta",{"property":"og:description","content":"SpringMVC SSM整合 完成SSM的整合开发 能够理解并实现统一结果封装与统一异常处理 能够完成前后台功能整合开发 掌握拦截器的编写 1 SSM整合 前面我们已经把Mybatis、Spring和SpringMVC三个框架进行了学习，今天主要的内容就是把这三个框架整合在一起完成我们的业务功能开发，具体如何来整合，我们一步步来学习。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/simeis147/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-17T07:03:15.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"SpringMVC SSM整合"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2023-04-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-17T07:03:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringMVC SSM整合\\",\\"image\\":[\\"https://github.com/simeis147/\\"],\\"datePublished\\":\\"2023-04-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-17T07:03:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"1 SSM整合","slug":"_1-ssm整合","link":"#_1-ssm整合","children":[{"level":3,"title":"1.1 流程分析","slug":"_1-1-流程分析","link":"#_1-1-流程分析","children":[]},{"level":3,"title":"1.2 整合配置","slug":"_1-2-整合配置","link":"#_1-2-整合配置","children":[]},{"level":3,"title":"1.3 功能模块开发","slug":"_1-3-功能模块开发","link":"#_1-3-功能模块开发","children":[]},{"level":3,"title":"1.4 单元测试","slug":"_1-4-单元测试","link":"#_1-4-单元测试","children":[]},{"level":3,"title":"1.5 PostMan测试","slug":"_1-5-postman测试","link":"#_1-5-postman测试","children":[]}]},{"level":2,"title":"2 统一结果封装","slug":"_2-统一结果封装","link":"#_2-统一结果封装","children":[{"level":3,"title":"2.1 表现层与前端数据传输协议定义","slug":"_2-1-表现层与前端数据传输协议定义","link":"#_2-1-表现层与前端数据传输协议定义","children":[]},{"level":3,"title":"2.2 表现层与前端数据传输协议实现","slug":"_2-2-表现层与前端数据传输协议实现","link":"#_2-2-表现层与前端数据传输协议实现","children":[]}]},{"level":2,"title":"3 统一异常处理","slug":"_3-统一异常处理","link":"#_3-统一异常处理","children":[{"level":3,"title":"3.1 问题描述","slug":"_3-1-问题描述","link":"#_3-1-问题描述","children":[]},{"level":3,"title":"3.2 异常处理器的使用","slug":"_3-2-异常处理器的使用","link":"#_3-2-异常处理器的使用","children":[]},{"level":3,"title":"3.3 项目异常处理方案","slug":"_3-3-项目异常处理方案","link":"#_3-3-项目异常处理方案","children":[]}]},{"level":2,"title":"4 前后台协议联调","slug":"_4-前后台协议联调","link":"#_4-前后台协议联调","children":[{"level":3,"title":"4.1 环境准备","slug":"_4-1-环境准备","link":"#_4-1-环境准备","children":[]},{"level":3,"title":"4.2 列表功能","slug":"_4-2-列表功能","link":"#_4-2-列表功能","children":[]},{"level":3,"title":"4.3 添加功能","slug":"_4-3-添加功能","link":"#_4-3-添加功能","children":[]},{"level":3,"title":"4.4 添加功能状态处理","slug":"_4-4-添加功能状态处理","link":"#_4-4-添加功能状态处理","children":[]},{"level":3,"title":"4.5 修改功能","slug":"_4-5-修改功能","link":"#_4-5-修改功能","children":[]},{"level":3,"title":"4.6 删除功能","slug":"_4-6-删除功能","link":"#_4-6-删除功能","children":[]}]},{"level":2,"title":"5 拦截器","slug":"_5-拦截器","link":"#_5-拦截器","children":[{"level":3,"title":"5.1 拦截器概念","slug":"_5-1-拦截器概念","link":"#_5-1-拦截器概念","children":[]},{"level":3,"title":"5.2 拦截器入门案例","slug":"_5-2-拦截器入门案例","link":"#_5-2-拦截器入门案例","children":[]},{"level":3,"title":"5.3 拦截器参数","slug":"_5-3-拦截器参数","link":"#_5-3-拦截器参数","children":[]},{"level":3,"title":"5.4 拦截器链配置","slug":"_5-4-拦截器链配置","link":"#_5-4-拦截器链配置","children":[]}]}],"git":{"createdTime":1681664510000,"updatedTime":1681714995000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":2}]},"readingTime":{"minutes":39.95,"words":11984},"filePathRelative":"BackEnd/SpringMVC/springmvc02.md","localizedDate":"2023年4月17日","excerpt":"<h1> SpringMVC SSM整合</h1>\\n<blockquote>\\n<ul>\\n<li>完成SSM的整合开发</li>\\n<li>能够理解并实现统一结果封装与统一异常处理</li>\\n<li>能够完成前后台功能整合开发</li>\\n<li>掌握拦截器的编写</li>\\n</ul>\\n</blockquote>\\n<h2> 1 SSM整合</h2>\\n<p>前面我们已经把<code>Mybatis</code>、<code>Spring</code>和<code>SpringMVC</code>三个框架进行了学习，今天主要的内容就是把这三个框架整合在一起完成我们的业务功能开发，具体如何来整合，我们一步步来学习。</p>","autoDesc":true}');export{e as data};

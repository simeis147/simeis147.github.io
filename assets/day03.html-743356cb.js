import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,b as e}from"./app-eac27b8b.js";const t="/assets/image-20210801085103062-00990379.png",p="/assets/image-20210801085615162-b83c59b0.png",c="/assets/image-20210801085715419-75a4edb1.png",o="/assets/image-20210801092157093-531c3118.png",i="/assets/image-20210801093623217-0b1b1d3f.png",l="/assets/image-20210801093747896-1da94ed3.png",u="/assets/image-20210801131449863-49bd6640.png",r="/assets/image-20210801133531663-19d4553d.png",d="/assets/image-20210801133827264-e62eec3e.png",k="/assets/image-20210801162053581-e4f8336d.png",m="/assets/image-20210801162345846-4b303fe3.png",v="/assets/image-20210801162436740-8c69b104.png",b="/assets/image-20210801163745391-e0183ac7.png",g="/assets/image-20210801165118745-9a81e85f.png",y="/assets/image-20210801165801665-48ea0a5c.png",h="/assets/image-20210801165921450-7b496280.png",f="/assets/image-20210801171125255-643d5325.png",w="/assets/image-20210801172259439-879e6c19.png",_="/assets/image-20210801172847501-9b939507.png",S="/assets/image-20210801173229949-26d1fd65.png",x="/assets/image-20210801172951915-1a5d7b04.png",j="/assets/image-20210801173758580-046ff4a4.png",T="/assets/image-20210801173850606-dd11c3cc.png",q="/assets/image-20210801220637396-b9599883.png",I="/assets/image-20210801221049176-c19a4b1f.png",C="/assets/image-20210801221343539-5164e4eb.png",D="/assets/image-20210802001302912-4b7dfa32.png",L="/assets/image-20210802001348928-22a920db.png",F="/assets/image-20210801235124007-05926ad8.png",M="/assets/image-20210801235311435-79d9794c.png",E="/assets/image-20210802000227359-12b2d5d1.png",z="/assets/image-20210802000605946-c08e1fe9.png",R={},U=e('<h1 id="瑞吉外卖基础-day03" tabindex="-1"><a class="header-anchor" href="#瑞吉外卖基础-day03" aria-hidden="true">#</a> 瑞吉外卖基础-Day03</h1><h2 id="_1-公共字段自动填充" tabindex="-1"><a class="header-anchor" href="#_1-公共字段自动填充" aria-hidden="true">#</a> 1. 公共字段自动填充</h2><h3 id="_1-1-问题分析" tabindex="-1"><a class="header-anchor" href="#_1-1-问题分析" aria-hidden="true">#</a> 1.1 问题分析</h3><p>公共字段，也就是很多表中都会有这些字段</p><figure><img src="'+t+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><ol><li>在新增数据时，将 createTime、updateTime 设置为当前时间，createUser、updateUser设置为当前登录用户ID</li><li>在更新数据时，将 updateTime 设置为当前时间，updateUser 设置为当前登录用户ID</li></ol></blockquote><p>目前项目中处理这些字段都是在每一个业务方法中进行赋值操作</p><figure><img src="'+p+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+c+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>能不能对于这些公共字段在某个地方统一处理，来简化开发呢？</p><blockquote><p>答案是可以的，Mybatis Plus有提供的公共字段自动填充功能</p></blockquote><h3 id="_1-2-基本功能实现" tabindex="-1"><a class="header-anchor" href="#_1-2-基本功能实现" aria-hidden="true">#</a> 1.2 基本功能实现</h3><h4 id="_1-2-1-思路分析" tabindex="-1"><a class="header-anchor" href="#_1-2-1-思路分析" aria-hidden="true">#</a> 1.2.1 思路分析</h4><p>Mybatis Plus公共字段自动填充，也就是在插入或者更新的时候为指定字段赋予指定的值，使用它的好处就是可以统一对这些字段进行处理，避免了重复代码</p><table><thead><tr><th>字段名</th><th>赋值时机</th><th>说明</th></tr></thead><tbody><tr><td>createTime</td><td>插入(INSERT)</td><td>当前时间</td></tr><tr><td>updateTime</td><td>插入(INSERT) ，更新(UPDATE)</td><td>当前时间</td></tr><tr><td>createUser</td><td>插入(INSERT)</td><td>当前登录用户ID</td></tr><tr><td>updateUser</td><td>插入(INSERT) ，更新(UPDATE)</td><td>当前登录用户ID</td></tr></tbody></table><blockquote><p>实现步骤：</p><ol><li><p>在实体类的属性上加入@TableField注解，指定自动填充的策略</p></li><li><p>按照框架要求编写元数据对象处理器，在此类中统一为公共字段赋值，此类需要实现MetaObjectHandler接口</p></li></ol></blockquote><h4 id="_1-2-2-代码实现" tabindex="-1"><a class="header-anchor" href="#_1-2-2-代码实现" aria-hidden="true">#</a> 1.2.2 代码实现</h4><p>1.<strong>实体类的属性上加入@TableField注解，指定自动填充的策略</strong></p><figure><img src="'+o+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>FieldFill.INSERT: 插入时填充该属性值</p><p>FieldFill.INSERT_UPDATE: 插入/更新时填充该属性值</p></blockquote><p>2.<strong>按照框架要求编写元数据对象处理器，在此类中统一为公共字段赋值，此类需要实现MetaObjectHandler接口</strong></p><p>所属包: com.itheima.reggie.common</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handlers<span class="token punctuation">.</span></span><span class="token class-name">MetaObjectHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>reflection<span class="token punctuation">.</span></span><span class="token class-name">MetaObject</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 自定义元数据对象处理器
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMetaObjecthandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 插入操作，自动填充
     * <span class="token keyword">@param</span> <span class="token parameter">metaObject</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;公共字段自动填充[insert]...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        metaObject<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;createTime&quot;</span><span class="token punctuation">,</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        metaObject<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;updateTime&quot;</span><span class="token punctuation">,</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        metaObject<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;createUser&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        metaObject<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;updateUser&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 更新操作，自动填充
     * <span class="token keyword">@param</span> <span class="token parameter">metaObject</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;公共字段自动填充[update]...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        metaObject<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;updateTime&quot;</span><span class="token punctuation">,</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        metaObject<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;updateUser&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-3-功能测试" tabindex="-1"><a class="header-anchor" href="#_1-2-3-功能测试" aria-hidden="true">#</a> 1.2.3 功能测试</h4><p>将之前在新增和修改方法中手动赋值的代码删除或注释掉</p><figure><img src="`+i+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+l+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>启动项目，在员工管理模块中，测试增加/更新员工信息功能，然后通过<code>debug</code>或者<code>直接查询数据库数据变更的形式</code>，看看是否能够完成自动填充</p><h3 id="_1-3-功能完善" tabindex="-1"><a class="header-anchor" href="#_1-3-功能完善" aria-hidden="true">#</a> 1.3 功能完善</h3><h4 id="_1-3-1-思路分析" tabindex="-1"><a class="header-anchor" href="#_1-3-1-思路分析" aria-hidden="true">#</a> 1.3.1 思路分析</h4><p>自动填充createUser和updateUser时设置的用户id是固定值，现在需要改成动态获取当前登录用户的id</p><p>大家可能想到，用户登录成功后，将用户id存入了HttpSession中，从HttpSession中获取不就行了？</p><figure><img src="'+u+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意，MyMetaObjectHandler类中是不能直接获得HttpSession对象的</p></blockquote><p>在修改员工信息时，业务的执行流程</p><figure><img src="'+r+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>客户端发送的每次http请求，对应的在服务端都会分配一个新的线程来处理，在处理过程中涉及到下面类中的方法都属于相同的一个线程</p><blockquote><ol><li><p>LoginCheckFilter的 doFilter 方法</p></li><li><p>EmployeeController的 update 方法</p></li><li><p>MyMetaObjectHandler的 updateFill 方法</p></li></ol></blockquote><p>可以在上述类的方法中加入如下代码(获取当前线程ID，并输出)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">long</span> id <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;线程id为：{}&quot;</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>经过上述分析，发现可以使用JDK提供的一个类，来解决此问题，它是JDK中提供的<code>ThreadLocal</code></p><h4 id="_1-3-2-threadlocal" tabindex="-1"><a class="header-anchor" href="#_1-3-2-threadlocal" aria-hidden="true">#</a> 1.3.2 ThreadLocal</h4><p>ThreadLocal并不是一个Thread，而是Thread的局部变量</p><blockquote><p>当使用ThreadLocal维护变量时，ThreadLocal为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本</p><p>ThreadLocal为每个线程提供单独一份存储空间，具有线程隔离的效果，只有在线程内才能获取到对应的值，线程外则不能访问当前线程对应的值</p></blockquote><div class="hint-container tip"><p class="hint-container-title">ThreadLocal常用方法</p><ol><li><p>public void set(T value) : 设置当前线程的线程局部变量的值</p></li><li><p>public T get() : 返回当前线程所对应的线程局部变量的值</p></li><li><p>public void remove() : 删除当前线程所对应的线程局部变量的值</p></li></ol></div><p>可以在LoginCheckFilter的doFilter方法中获取当前登录用户id，并调用ThreadLocal的set方法来设置当前线程的线程局部变量的值（用户id），然后在MyMetaObjectHandler的updateFill方法中调用ThreadLocal的get方法来获得当前线程所对应的线程局部变量的值（用户id） 如果在后续的操作中， 需要在Controller / Service中要使用当前登录用户的ID，可以直接从ThreadLocal直接获取</p><h4 id="_1-3-3-操作步骤" tabindex="-1"><a class="header-anchor" href="#_1-3-3-操作步骤" aria-hidden="true">#</a> 1.3.3 操作步骤</h4><ol><li>编写BaseContext工具类，基于ThreadLocal封装的工具类</li><li>在LoginCheckFilter的doFilter方法中调用BaseContext来设置当前登录用户的id</li><li>在MyMetaObjectHandler的方法中调用BaseContext获取登录用户的id</li></ol><h4 id="_1-3-4-代码实现" tabindex="-1"><a class="header-anchor" href="#_1-3-4-代码实现" aria-hidden="true">#</a> 1.3.4 代码实现</h4><p>1.<strong>BaseContext工具类</strong></p><p>所属包: com.itheima.reggie.common</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 基于ThreadLocal封装工具类，用户保存和获取当前登录用户id
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseContext</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> threadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 设置值
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setCurrentId</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 获取值
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Long</span> <span class="token function">getCurrentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> threadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.<strong>LoginCheckFilter中存放当前登录用户到ThreadLocal</strong></p><p>在doFilter方法中，判定用户是否登录，如果用户登录，在放行之前，获取HttpSession中的登录用户信息，调用BaseContext的setCurrentId方法将当前登录用户ID存入ThreadLocal</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Long</span> empId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BaseContext</span><span class="token punctuation">.</span><span class="token function">setCurrentId</span><span class="token punctuation">(</span>empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+k+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>3.<strong>MyMetaObjectHandler中从ThreadLocal中获取</strong></p><p>将之前在代码中固定的当前登录用户1， 修改为动态调用BaseContext中的getCurrentId方法获取当前登录用户ID</p><figure><img src="'+m+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+v+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-3-5-功能测试" tabindex="-1"><a class="header-anchor" href="#_1-3-5-功能测试" aria-hidden="true">#</a> 1.3.5 功能测试</h4><p>重启项目，在员工管理模块中，测试增加/更新员工信息功能，直接查询数据库数据变更，查看这些公共字段数据是否能够完成自动填充，并且看看填充的create_user 及 update_user字段值是不是本地登录用户的ID</p><h2 id="_2-新增分类" tabindex="-1"><a class="header-anchor" href="#_2-新增分类" aria-hidden="true">#</a> 2. 新增分类</h2><h3 id="_2-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_2-1-需求分析" aria-hidden="true">#</a> 2.1 需求分析</h3><p>后台系统中可以管理分类信息，分类包括两种类型，分别是 <strong>菜品分类</strong> 和 <strong>套餐分类</strong><br> 在后台系统中添加菜品时需要选择一个菜品分类，移动端会按照菜品分类和套餐分类来展示对应的菜品和套餐</p><figure><img src="'+b+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在分类管理中，新增分类时，可以选择新增菜品分类(川菜、湘菜、粤菜...)，也可以选择新增套餐分类(营养早餐、超值午餐...) 在添加套餐的时候，输入的排序字段，控制的是移动端套餐列表的展示顺序</p><figure><img src="'+g+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-2-数据模型" tabindex="-1"><a class="header-anchor" href="#_2-2-数据模型" aria-hidden="true">#</a> 2.2 数据模型</h3><p>新增分类，其实就是将新增窗口录入的分类数据，插入到category表</p><figure><img src="'+y+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>添加的套餐名称，是唯一的，不能够重复的</p><figure><img src="'+h+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-前端页面分析" tabindex="-1"><a class="header-anchor" href="#_2-3-前端页面分析" aria-hidden="true">#</a> 2.3 前端页面分析</h3><p>在开发代码之前，需要梳理一下整个程序的执行过程：</p><blockquote><ol><li><p>在页面(backend/page/category/list.html)的新增分类表单中填写数据，点击 &quot;确定&quot; 发送ajax请求，将新增分类窗口输入的数据以json形式提交到服务端</p></li><li><p>服务端Controller接收页面提交的数据并调用Service将数据进行保存</p></li><li><p>Service调用Mapper操作数据库，保存数据</p></li></ol></blockquote><p>可以看到新增菜品分类和新增套餐分类请求的服务端地址和提交的json数据结构相同，所以服务端只需要提供一个方法统一处理即可</p><figure><img src="'+f+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>请求</th><th>说明</th></tr></thead><tbody><tr><td>请求方式</td><td>POST</td></tr><tr><td>请求路径</td><td>/category</td></tr><tr><td>请求参数</td><td>json格式 - {&quot;name&quot;:&quot;川菜&quot;, &quot;type&quot;:&quot;1&quot;, &quot;sort&quot;:2}</td></tr></tbody></table><h3 id="_2-4-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-4-代码实现" aria-hidden="true">#</a> 2.4 代码实现</h3><div class="hint-container tip"><p class="hint-container-title">代码实现的具体步骤如下</p><ul><li><p>实体类Category</p></li><li><p>Mapper接口CategoryMapper</p></li><li><p>业务层接口CategoryService</p></li><li><p>业务层实现类CategoryServiceImpl</p></li><li><p>控制层CategoryController</p></li></ul></div><p>1.<strong>实体类Category</strong></p><p>所属包: com.itheima.reggie.entity</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">FieldFill</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableField</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 分类
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token comment">//类型 1 菜品分类 2 套餐分类</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> type<span class="token punctuation">;</span>

    <span class="token comment">//分类名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token comment">//顺序</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> sort<span class="token punctuation">;</span>

    <span class="token comment">//创建时间</span>
    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>

    <span class="token comment">//更新时间</span>
    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span>
    
    <span class="token comment">//创建人</span>
    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createUser<span class="token punctuation">;</span>
    
    <span class="token comment">//修改人</span>
    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> updateUser<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.<strong>Mapper接口CategoryMapper</strong></p><p>所属包: com.itheima.reggie.mapper</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">BaseMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Category</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Mapper</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.<strong>业务层接口CategoryService</strong></p><p>所属包: com.itheima.reggie.service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Category</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.<strong>业务层实现类CategoryServiceImpl</strong></p><p>所属包: com.itheima.reggie.service.impl</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Category</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">CategoryMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CategoryService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CategoryMapper</span><span class="token punctuation">,</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">CategoryService</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.<strong>控制层CategoryController</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">R</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Category</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CategoryService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 分类管理
 */</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/category&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">CategoryService</span> categoryService<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 新增分类
     * <span class="token keyword">@param</span> <span class="token parameter">category</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@PostMapping</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Category</span> category<span class="token punctuation">)</span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;category:{}&quot;</span><span class="token punctuation">,</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
        categoryService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;新增分类成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-功能测试" tabindex="-1"><a class="header-anchor" href="#_2-5-功能测试" aria-hidden="true">#</a> 2.5 功能测试</h3><p>进入管理系统访问分类管理，然后进行新增分类测试，需要将所有情况都覆盖全</p><ol><li>输入的分类名称不存在</li><li>输入已存在的分类名称</li><li>新增菜品分类</li><li>新增套餐分类</li></ol><h2 id="_3-分类信息分页查询" tabindex="-1"><a class="header-anchor" href="#_3-分类信息分页查询" aria-hidden="true">#</a> 3. 分类信息分页查询</h2><h3 id="_3-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_3-1-需求分析" aria-hidden="true">#</a> 3.1 需求分析</h3><p>一般的系统中都会以分页的方式来展示列表数据</p><figure><img src="`+w+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-前端页面分析" tabindex="-1"><a class="header-anchor" href="#_3-2-前端页面分析" aria-hidden="true">#</a> 3.2 前端页面分析</h3><p>在开发代码之前，需要梳理一下整个程序的执行过程：</p><blockquote><ol><li><p>页面发送ajax请求，将分页查询参数(page、pageSize)提交到服务端</p></li><li><p>服务端Controller接收页面提交的数据并调用Service查询数据</p></li><li><p>Service调用Mapper操作数据库，查询分页数据</p></li><li><p>Controller将查询到的分页数据响应给页面</p></li><li><p>页面接收到分页数据并通过ElementUI的Table组件展示到页面上</p></li></ol></blockquote><p>页面加载时，就会触发Vue声明周期的钩子方法，然后执行分页查询，发送异步请求到服务端</p><figure><img src="'+_+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>页面中使用的是ElementUI提供的分页组件进行分页条的展示</p><figure><img src="'+S+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过浏览器，也可以抓取到分页查询的请求信息</p><figure><img src="'+x+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>请求</th><th>说明</th></tr></thead><tbody><tr><td>请求方式</td><td>GET</td></tr><tr><td>请求路径</td><td>/category/page</td></tr><tr><td>请求参数</td><td>?page=1&amp;pageSize=10</td></tr></tbody></table><h3 id="_3-3-代码实现" tabindex="-1"><a class="header-anchor" href="#_3-3-代码实现" aria-hidden="true">#</a> 3.3 代码实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 分页查询
 * <span class="token keyword">@param</span> <span class="token parameter">page</span>
 * <span class="token keyword">@param</span> <span class="token parameter">pageSize</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/page&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Page</span><span class="token punctuation">&gt;</span></span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token keyword">int</span> page<span class="token punctuation">,</span><span class="token keyword">int</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//分页构造器</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//条件构造器</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//添加排序条件，根据sort进行排序</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token class-name">Category</span><span class="token operator">::</span><span class="token function">getSort</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//分页查询</span>
    categoryService<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-功能测试" tabindex="-1"><a class="header-anchor" href="#_3-4-功能测试" aria-hidden="true">#</a> 3.4 功能测试</h3><p>点击分类管理，查询分类列表是否可以正常展示，测试过程中可以使用浏览器的监控工具查看页面和服务端的数据交互细节</p><p>测试完毕后，会发现查询数据库返回的类型为 1 或者 2，但是实际展示到页面上的却是 &quot;菜品分类&quot; 或 &quot;套餐分类&quot;，这一块是在前端页面中进行处理的，处理代码如下</p><figure><img src="`+j+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+T+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-删除分类" tabindex="-1"><a class="header-anchor" href="#_4-删除分类" aria-hidden="true">#</a> 4. 删除分类</h2><h3 id="_4-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_4-1-需求分析" aria-hidden="true">#</a> 4.1 需求分析</h3><p>在分类管理列表页面，可以对某个分类进行删除操作<br> 需要注意的是当分类关联了菜品或者套餐时，此分类不允许删除</p><figure><img src="'+q+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-2-前端页面分析" tabindex="-1"><a class="header-anchor" href="#_4-2-前端页面分析" aria-hidden="true">#</a> 4.2 前端页面分析</h3><p>在前端页面中，点击 &quot;删除&quot; 按钮，就会触发定义的方法，然后往服务端发送异步请求，并传递参数id，执行删除分类操作</p><figure><img src="'+I+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>删除操作的具体执行流程如下</p><blockquote><ol><li><p>点击删除，页面发送ajax请求，将参数(id)提交到服务端</p></li><li><p>服务端Controller接收页面提交的数据并调用Service删除数据</p></li><li><p>Service调用Mapper操作数据库</p></li></ol></blockquote><figure><img src="'+C+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>请求</th><th>说明</th></tr></thead><tbody><tr><td>请求方式</td><td>DELETE</td></tr><tr><td>请求路径</td><td>/category</td></tr><tr><td>请求参数</td><td>?id=1395291114922618881</td></tr></tbody></table><h3 id="_4-3-代码实现" tabindex="-1"><a class="header-anchor" href="#_4-3-代码实现" aria-hidden="true">#</a> 4.3 代码实现</h3><p>在CategoryController中增加根据ID删除的方法，在方法中接收页面传递参数id，然后执行删除操作</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据id删除分类
 * <span class="token keyword">@param</span> <span class="token parameter">id</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@DeleteMapping</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;删除分类，id为：{}&quot;</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    categoryService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;分类信息删除成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-功能测试" tabindex="-1"><a class="header-anchor" href="#_4-4-功能测试" aria-hidden="true">#</a> 4.4 功能测试</h3><p>重启项目，可以通过debug断点调试进行测试，同时结合浏览器监控工具查看请求和响应的具体数据</p><h3 id="_4-5-功能完善" tabindex="-1"><a class="header-anchor" href="#_4-5-功能完善" aria-hidden="true">#</a> 4.5 功能完善</h3><h4 id="_4-5-1-思路分析" tabindex="-1"><a class="header-anchor" href="#_4-5-1-思路分析" aria-hidden="true">#</a> 4.5.1 思路分析</h4><p>上述测试中，看到分类数据是可以正常删除的，但是并没有检查删除的分类是否关联了菜品或者套餐，所以需要进行功能完善，完善后的逻辑为</p><ul><li>根据当前分类的ID，查询该分类下是否存在菜品，如果存在，则提示错误信息</li><li>根据当前分类的ID，查询该分类下是否存在套餐，如果存在，则提示错误信息</li><li>执行正常的删除分类操作</li></ul><p>那么在这里又涉及到后面要用到的两张表结构 dish(菜品表) 和 setmeal(套餐表) 具体的表结构</p><figure><img src="`+D+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+L+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-5-2-准备工作" tabindex="-1"><a class="header-anchor" href="#_4-5-2-准备工作" aria-hidden="true">#</a> 4.5.2 准备工作</h4><p>1.<strong>准备菜品(Dish)及套餐(Setmeal)实体类(课程资料中直接拷贝)</strong></p><p>所属包: com.itheima.reggie.entity</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">FieldFill</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableField</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 菜品
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dish</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token comment">//菜品名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token comment">//菜品分类id</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> categoryId<span class="token punctuation">;</span>

    <span class="token comment">//菜品价格</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> price<span class="token punctuation">;</span>

    <span class="token comment">//商品码</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>

    <span class="token comment">//图片</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> image<span class="token punctuation">;</span>

    <span class="token comment">//描述信息</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> description<span class="token punctuation">;</span>

    <span class="token comment">//0 停售 1 起售</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>

    <span class="token comment">//顺序</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> sort<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createUser<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> updateUser<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">FieldFill</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableField</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 套餐
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Setmeal</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token comment">//分类id</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> categoryId<span class="token punctuation">;</span>

    <span class="token comment">//套餐名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token comment">//套餐价格</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> price<span class="token punctuation">;</span>

    <span class="token comment">//状态 0:停用 1:启用</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>

    <span class="token comment">//编码</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>

    <span class="token comment">//描述信息</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> description<span class="token punctuation">;</span>

    <span class="token comment">//图片</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> image<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createUser<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> updateUser<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.<strong>Mapper接口DishMapper和SetmealMapper</strong></p><p>所属包: com.itheima.reggie.mapper</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">BaseMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Dish</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Mapper</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DishMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dish</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">BaseMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Setmeal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Mapper</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SetmealMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Setmeal</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.<strong>Service接口DishService和SetmealService</strong></p><p>所属包: com.itheima.reggie.service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Dish</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DishService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dish</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Setmeal</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SetmealService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Setmeal</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.<strong>Service实现类DishServiceImpl和SetmealServiceImpl</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Dish</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">DishMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">DishService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DishServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DishMapper</span><span class="token punctuation">,</span><span class="token class-name">Dish</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">DishService</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Setmeal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">SetmealMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>reggie<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">SetmealService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SetmealServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SetmealMapper</span><span class="token punctuation">,</span><span class="token class-name">Setmeal</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">SetmealService</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-3-代码实现" tabindex="-1"><a class="header-anchor" href="#_4-5-3-代码实现" aria-hidden="true">#</a> 4.5.3 代码实现</h4><p>1.<strong>创建自定义异常</strong></p><p>在业务逻辑操作过程中，如果遇到一些业务参数、操作异常的情况下，直接抛出此异常</p><p>所在包: com.itheima.reggie.common</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 自定义业务异常类
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.<strong>在CategoryService中扩展remove方法</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">//根据ID删除分类</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.<strong>在CategoryServiceImpl中实现remove方法</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">DishService</span> dishService<span class="token punctuation">;</span>
<span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">SetmealService</span> setmealService<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 根据id删除分类，删除之前需要进行判断
 * <span class="token keyword">@param</span> <span class="token parameter">id</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//添加查询条件，根据分类id进行查询菜品数据</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dish</span><span class="token punctuation">&gt;</span></span> dishLambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dishLambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Dish</span><span class="token operator">::</span><span class="token function">getCategoryId</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count1 <span class="token operator">=</span> dishService<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>dishLambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//如果已经关联，抛出一个业务异常</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>count1 <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token string">&quot;当前分类下关联了菜品，不能删除&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已经关联菜品，抛出一个业务异常</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//查询当前分类是否关联了套餐，如果已经关联，抛出一个业务异常</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Setmeal</span><span class="token punctuation">&gt;</span></span> setmealLambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    setmealLambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Setmeal</span><span class="token operator">::</span><span class="token function">getCategoryId</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count2 <span class="token operator">=</span> setmealService<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>setmealLambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>count2 <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token string">&quot;当前分类下关联了套餐，不能删除&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已经关联套餐，抛出一个业务异常</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//正常删除分类</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么在上述的业务逻辑中，当分类下关联的有菜品或者套餐时，在业务代码中抛出了自定义异常，并且在异常中封装了错误提示信息，那这个错误提示信息如何提示给页面呢？</p><p>异常抛出之后，会被异常处理器捕获，只需要在异常处理器中捕获这一类的异常，然后给页面返回对应的提示信息即可</p><p>4.<strong>在GlobalExceptionHandler中处理自定义异常</strong></p><p>在全局异常处理器中增加方法，用于捕获自定义的异常 CustomException</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 异常处理方法
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">CustomException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">exceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">CustomException</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.<strong>改造CategoryController的delete方法</strong></p><p>注释掉原有的代码，在delete方法中直接调用categoryService中 自定义的remove方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 根据id删除分类
* <span class="token keyword">@param</span> <span class="token parameter">id</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token annotation punctuation">@DeleteMapping</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;删除分类，id为：{}&quot;</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//categoryService.removeById(id);</span>
    categoryService<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;分类信息删除成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-4-功能测试" tabindex="-1"><a class="header-anchor" href="#_4-5-4-功能测试" aria-hidden="true">#</a> 4.5.4 功能测试</h4><p>进入管理系统访问分类管理，然后进行删除分类的测试，需要将所有情况都覆盖全</p><ol><li><p>新增一个分类，然后再直接删除，检查是否可以正常删除成功 (新增的分类时没有关联菜品和套餐的)</p></li><li><p>在数据库表(dish/setmeal)中，找到一个与菜品或套餐关联的分类，然后在页面中执行删除操作，检查是否可以正常的提示出对应的错误信息<br><img src="`+F+'" alt=" " loading="lazy"></p></li></ol><h2 id="_5-修改分类" tabindex="-1"><a class="header-anchor" href="#_5-修改分类" aria-hidden="true">#</a> 5. 修改分类</h2><h3 id="_5-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_5-1-需求分析" aria-hidden="true">#</a> 5.1 需求分析</h3><p>在分类管理列表页面点击修改按钮，弹出修改窗口，在修改窗口会显分类信息并进行修改，最后点击确定按钮完成修改操作</p><figure><img src="'+M+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-2-前端页面分析" tabindex="-1"><a class="header-anchor" href="#_5-2-前端页面分析" aria-hidden="true">#</a> 5.2 前端页面分析</h3><p>修改功能还没有实现，但是当点击 &quot;修改&quot; 按钮的时候，并没有开发根据ID查询数据，进行页面回显的功能，但是页面的分类数据确实回显回来了</p><figure><img src="'+E+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>那么回显这一步的操作前端已经实现，就只需要开发一个方法，修改操作的方法即可</p><figure><img src="'+z+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>请求</th><th>说明</th></tr></thead><tbody><tr><td>请求方式</td><td>PUT</td></tr><tr><td>请求路径</td><td>/category</td></tr><tr><td>请求参数</td><td>{id: &quot;1399923597874081794&quot;,name: &quot;超值午餐&quot;,sort: 0}</td></tr></tbody></table><h3 id="_5-3-代码实现" tabindex="-1"><a class="header-anchor" href="#_5-3-代码实现" aria-hidden="true">#</a> 5.3 代码实现</h3><p>创建服务端的CategoryController方法update方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据id修改分类信息
 * <span class="token keyword">@param</span> <span class="token parameter">category</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@PutMapping</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Category</span> category<span class="token punctuation">)</span><span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;修改分类信息：{}&quot;</span><span class="token punctuation">,</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
    categoryService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;修改分类信息成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-功能测试" tabindex="-1"><a class="header-anchor" href="#_5-4-功能测试" aria-hidden="true">#</a> 5.4 功能测试</h3><p>按照前面分析的操作流程进行测试，查看数据是否正常修改即可</p>`,194),O=[U];function B(N,P){return s(),a("div",null,O)}const W=n(R,[["render",B],["__file","day03.html.vue"]]);export{W as default};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-Cp480nHu.js";const p="/assets/image-20210801224114650-BdDUZpRa.png",e="/assets/image-20210801184632944-DrwZI4ZS.png",o={},c=t('<h1 id="mybatisplus代码生成器" tabindex="-1"><a class="header-anchor" href="#mybatisplus代码生成器"><span>MybatisPlus代码生成器</span></a></h1><h2 id="_1-快速开发-代码生成器" tabindex="-1"><a class="header-anchor" href="#_1-快速开发-代码生成器"><span>1 快速开发-代码生成器</span></a></h2><p>如果只给一张表的字段信息，能够推演出Domain、Dao层的代码？</p><h3 id="_1-1-mybatisplus提供模板" tabindex="-1"><a class="header-anchor" href="#_1-1-mybatisplus提供模板"><span>1.1 MyBatisPlus提供模板</span></a></h3><ul><li>Mapper接口模板</li></ul><figure><img src="'+p+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>实体对象类模板</li></ul><figure><img src="'+e+`" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-2-工程搭建和基本代码编写" tabindex="-1"><a class="header-anchor" href="#_1-2-工程搭建和基本代码编写"><span>1.2 工程搭建和基本代码编写</span></a></h3><ul><li>第一步：创建SpringBoot工程，添加代码生成器相关依赖，其他依赖自行添加</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--代码生成器--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!--velocity模板引擎--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.velocity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>velocity-engine-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第二步：编写代码生成器类</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span></span><span class="token class-name">AutoGenerator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">DataSourceConfig</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Generator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1. 创建代码生成器对象，执行生成代码操作</span>
        <span class="token class-name">AutoGenerator</span> autoGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. 数据源相关配置：读取数据库中的信息，根据数据库表结构生成代码</span>
        <span class="token class-name">DataSourceConfig</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setDriverName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://localhost:3306/mybatisplus_db?serverTimezone=UTC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">//3. 执行生成操作</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-开发者自定义配置" tabindex="-1"><a class="header-anchor" href="#_1-3-开发者自定义配置"><span>1.3 开发者自定义配置</span></a></h3><ul><li>设置全局配置</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//设置全局配置</span>
<span class="token class-name">GlobalConfig</span> globalConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
globalConfig<span class="token punctuation">.</span><span class="token function">setOutputDir</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/mybatisplus_04_generator/src/main/java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置代码生成位置</span>
globalConfig<span class="token punctuation">.</span><span class="token function">setOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置生成完毕后是否打开生成代码所在的目录</span>
globalConfig<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">&quot;simeis147&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置作者</span>
globalConfig<span class="token punctuation">.</span><span class="token function">setFileOverride</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//设置是否覆盖原始生成的文件</span>
globalConfig<span class="token punctuation">.</span><span class="token function">setMapperName</span><span class="token punctuation">(</span><span class="token string">&quot;%sDao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置数据层接口名，%s为占位符，指代模块名称</span>
globalConfig<span class="token punctuation">.</span><span class="token function">setIdType</span><span class="token punctuation">(</span><span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">ASSIGN_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//设置Id生成策略</span>
autoGenerator<span class="token punctuation">.</span><span class="token function">setGlobalConfig</span><span class="token punctuation">(</span>globalConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置包名相关配置</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//设置包名相关配置</span>
<span class="token class-name">PackageConfig</span> packageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
packageInfo<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span><span class="token string">&quot;com.aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//设置生成的包名，与代码所在位置不冲突，二者叠加组成完整路径</span>
packageInfo<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token string">&quot;domain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置实体类包名</span>
packageInfo<span class="token punctuation">.</span><span class="token function">setMapper</span><span class="token punctuation">(</span><span class="token string">&quot;dao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//设置数据层包名</span>
autoGenerator<span class="token punctuation">.</span><span class="token function">setPackageInfo</span><span class="token punctuation">(</span>packageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>策略设置</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//策略设置</span>
<span class="token class-name">StrategyConfig</span> strategyConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
strategyConfig<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token string">&quot;tbl_user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置当前参与生成的表名，参数为可变参数</span>
strategyConfig<span class="token punctuation">.</span><span class="token function">setTablePrefix</span><span class="token punctuation">(</span><span class="token string">&quot;tbl_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置数据库表的前缀名称，模块名 = 数据库表名 - 前缀名  例如： User = tbl_user - tbl_</span>
strategyConfig<span class="token punctuation">.</span><span class="token function">setRestControllerStyle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置是否启用Rest风格</span>
strategyConfig<span class="token punctuation">.</span><span class="token function">setVersionFieldName</span><span class="token punctuation">(</span><span class="token string">&quot;version&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置乐观锁字段名</span>
strategyConfig<span class="token punctuation">.</span><span class="token function">setLogicDeleteFieldName</span><span class="token punctuation">(</span><span class="token string">&quot;deleted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置逻辑删除字段名</span>
strategyConfig<span class="token punctuation">.</span><span class="token function">setEntityLombokModel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置是否启用lombok</span>
autoGenerator<span class="token punctuation">.</span><span class="token function">setStrategy</span><span class="token punctuation">(</span>strategyConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),l=[c];function i(u,k){return s(),a("div",null,l)}const m=n(o,[["render",i],["__file","mybatisplus02.html.vue"]]),g=JSON.parse('{"path":"/BackEnd/MybatisPlus/mybatisplus02.html","title":"MybatisPlus代码生成器","lang":"zh-CN","frontmatter":{"order":2,"date":"2023-04-16T00:00:00.000Z","category":["MyBatisPlus"],"description":"MybatisPlus代码生成器 1 快速开发-代码生成器 如果只给一张表的字段信息，能够推演出Domain、Dao层的代码？ 1.1 MyBatisPlus提供模板 Mapper接口模板 实体对象类模板 1.2 工程搭建和基本代码编写 第一步：创建SpringBoot工程，添加代码生成器相关依赖，其他依赖自行添加 第二步：编写代码生成器类 1.3 开...","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/BackEnd/MybatisPlus/mybatisplus02.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"MybatisPlus代码生成器"}],["meta",{"property":"og:description","content":"MybatisPlus代码生成器 1 快速开发-代码生成器 如果只给一张表的字段信息，能够推演出Domain、Dao层的代码？ 1.1 MyBatisPlus提供模板 Mapper接口模板 实体对象类模板 1.2 工程搭建和基本代码编写 第一步：创建SpringBoot工程，添加代码生成器相关依赖，其他依赖自行添加 第二步：编写代码生成器类 1.3 开..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-19T09:13:10.000Z"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2023-04-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-19T09:13:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MybatisPlus代码生成器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-19T09:13:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"1 快速开发-代码生成器","slug":"_1-快速开发-代码生成器","link":"#_1-快速开发-代码生成器","children":[{"level":3,"title":"1.1 MyBatisPlus提供模板","slug":"_1-1-mybatisplus提供模板","link":"#_1-1-mybatisplus提供模板","children":[]},{"level":3,"title":"1.2 工程搭建和基本代码编写","slug":"_1-2-工程搭建和基本代码编写","link":"#_1-2-工程搭建和基本代码编写","children":[]},{"level":3,"title":"1.3 开发者自定义配置","slug":"_1-3-开发者自定义配置","link":"#_1-3-开发者自定义配置","children":[]}]}],"git":{"createdTime":1681490506000,"updatedTime":1684487590000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":5}]},"readingTime":{"minutes":1.85,"words":556},"filePathRelative":"BackEnd/MybatisPlus/mybatisplus02.md","localizedDate":"2023年4月16日","excerpt":"\\n<h2>1 快速开发-代码生成器</h2>\\n<p>如果只给一张表的字段信息，能够推演出Domain、Dao层的代码？</p>\\n<h3>1.1 MyBatisPlus提供模板</h3>\\n<ul>\\n<li>Mapper接口模板</li>\\n</ul>\\n<figure><figcaption> </figcaption></figure>\\n<ul>\\n<li>实体对象类模板</li>\\n</ul>\\n<figure><figcaption> </figcaption></figure>\\n<h3>1.2 工程搭建和基本代码编写</h3>\\n<ul>\\n<li>第一步：创建SpringBoot工程，添加代码生成器相关依赖，其他依赖自行添加</li>\\n</ul>","autoDesc":true}');export{m as comp,g as data};

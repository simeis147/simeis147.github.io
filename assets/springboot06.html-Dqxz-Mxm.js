const t=JSON.parse('{"key":"v-517c5c38","path":"/BackEnd/SpringBoot/springboot06.html","title":"SpringBoot事务、AOP","lang":"zh-CN","frontmatter":{"order":6,"date":"2023-04-08T00:00:00.000Z","category":["SpringBoot","AOP"],"description":"SpringBoot事务、AOP 1. 事务管理 1.1 事务回顾 事务是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体，一起向数据库提交或者是撤销操作请求。所以这组操作要么同时成功，要么同时失败。 事务的操作 开启事务（一组操作开始前，开启事务）：start transaction / begin ; 提交事务（这组操作全部成功后，提交事务）：commit ; 回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ;","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/BackEnd/SpringBoot/springboot06.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"SpringBoot事务、AOP"}],["meta",{"property":"og:description","content":"SpringBoot事务、AOP 1. 事务管理 1.1 事务回顾 事务是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体，一起向数据库提交或者是撤销操作请求。所以这组操作要么同时成功，要么同时失败。 事务的操作 开启事务（一组操作开始前，开启事务）：start transaction / begin ; 提交事务（这组操作全部成功后，提交事务）：commit ; 回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tech.dongcp.top/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-13T15:31:03.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"SpringBoot事务、AOP"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2023-04-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-13T15:31:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot事务、AOP\\",\\"image\\":[\\"https://tech.dongcp.top/\\"],\\"datePublished\\":\\"2023-04-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-13T15:31:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"1. 事务管理","slug":"_1-事务管理","link":"#_1-事务管理","children":[{"level":3,"title":"1.1 事务回顾","slug":"_1-1-事务回顾","link":"#_1-1-事务回顾","children":[]},{"level":3,"title":"1.2 Spring事务管理","slug":"_1-2-spring事务管理","link":"#_1-2-spring事务管理","children":[]},{"level":3,"title":"1.3 事务进阶","slug":"_1-3-事务进阶","link":"#_1-3-事务进阶","children":[]}]},{"level":2,"title":"2. AOP基础","slug":"_2-aop基础","link":"#_2-aop基础","children":[{"level":3,"title":"2.1 AOP概述","slug":"_2-1-aop概述","link":"#_2-1-aop概述","children":[]},{"level":3,"title":"2.2 AOP快速入门","slug":"_2-2-aop快速入门","link":"#_2-2-aop快速入门","children":[]},{"level":3,"title":"2.3 AOP核心概念","slug":"_2-3-aop核心概念","link":"#_2-3-aop核心概念","children":[]}]},{"level":2,"title":"3. AOP进阶","slug":"_3-aop进阶","link":"#_3-aop进阶","children":[{"level":3,"title":"3.1 通知类型","slug":"_3-1-通知类型","link":"#_3-1-通知类型","children":[]},{"level":3,"title":"3.2 通知顺序","slug":"_3-2-通知顺序","link":"#_3-2-通知顺序","children":[]},{"level":3,"title":"3.3 切入点表达式","slug":"_3-3-切入点表达式","link":"#_3-3-切入点表达式","children":[]},{"level":3,"title":"3.4 连接点","slug":"_3-4-连接点","link":"#_3-4-连接点","children":[]}]},{"level":2,"title":"4. AOP案例","slug":"_4-aop案例","link":"#_4-aop案例","children":[{"level":3,"title":"4.1 需求","slug":"_4-1-需求","link":"#_4-1-需求","children":[]},{"level":3,"title":"4.2 分析","slug":"_4-2-分析","link":"#_4-2-分析","children":[]},{"level":3,"title":"4.3 步骤","slug":"_4-3-步骤","link":"#_4-3-步骤","children":[]},{"level":3,"title":"4.4 实现","slug":"_4-4-实现","link":"#_4-4-实现","children":[]}]}],"git":{"createdTime":1681268086000,"updatedTime":1681399863000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":3}]},"readingTime":{"minutes":30.55,"words":9166},"filePathRelative":"BackEnd/SpringBoot/springboot06.md","localizedDate":"2023年4月8日","excerpt":"<h1> SpringBoot事务、AOP</h1>\\n<h2> 1. 事务管理</h2>\\n<h3> 1.1 事务回顾</h3>\\n<p><strong>事务</strong>是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体，一起向数据库提交或者是撤销操作请求。所以这组操作要么同时成功，要么同时失败。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">事务的操作</p>\\n<ol>\\n<li>开启事务（一组操作开始前，开启事务）：start transaction / begin ;</li>\\n<li>提交事务（这组操作全部成功后，提交事务）：commit ;</li>\\n<li>回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ;</li>\\n</ol>\\n</div>","autoDesc":true}');export{t as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as e}from"./app-BZhYnKGs.js";const t={},o=e(`<h1 id="删除链表的倒数第n个节点" tabindex="-1"><a class="header-anchor" href="#删除链表的倒数第n个节点"><span>删除链表的倒数第N个节点</span></a></h1><p><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="noopener noreferrer">19.删除链表的倒数第N个节点</a></p><h2 id="写法" tabindex="-1"><a class="header-anchor" href="#写法"><span>写法</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeNthFromEnd</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">ListNode</span> dummyNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dummyNode<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>

    <span class="token class-name">ListNode</span> fastIndex <span class="token operator">=</span> dummyNode<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> slowIndex <span class="token operator">=</span> dummyNode<span class="token punctuation">;</span>

    <span class="token comment">// 只要快慢指针相差 n 个结点即可</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n  <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
        fastIndex <span class="token operator">=</span> fastIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>fastIndex <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        fastIndex <span class="token operator">=</span> fastIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        slowIndex <span class="token operator">=</span> slowIndex<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//此时 slowIndex 的位置就是待删除元素的前一个位置。</span>
    <span class="token comment">//具体情况可自己画一个链表长度为 3 的图来模拟代码来理解</span>
    slowIndex<span class="token punctuation">.</span>next <span class="token operator">=</span> slowIndex<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">return</span> dummyNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),p=[o];function c(l,i){return a(),s("div",null,p)}const d=n(t,[["render",c],["__file","doublePointer06.html.vue"]]),k=JSON.parse('{"path":"/ComputerBasics/Algorithm/05DoublePointer/doublePointer06.html","title":"删除链表的倒数第N个节点","lang":"zh-CN","frontmatter":{"order":6,"date":"2024-03-04T00:00:00.000Z","category":["算法","双指针"],"description":"删除链表的倒数第N个节点 19.删除链表的倒数第N个节点 写法","head":[["meta",{"property":"og:url","content":"https://tech.dongcp.top/ComputerBasics/Algorithm/05DoublePointer/doublePointer06.html"}],["meta",{"property":"og:site_name","content":"Simeis 147"}],["meta",{"property":"og:title","content":"删除链表的倒数第N个节点"}],["meta",{"property":"og:description","content":"删除链表的倒数第N个节点 19.删除链表的倒数第N个节点 写法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T00:13:04.000Z"}],["meta",{"property":"article:author","content":"Dongcp"}],["meta",{"property":"article:published_time","content":"2024-03-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-05T00:13:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"删除链表的倒数第N个节点\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-05T00:13:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dongcp\\",\\"url\\":\\"https://github.com/simeis147\\"}]}"]]},"headers":[{"level":2,"title":"写法","slug":"写法","link":"#写法","children":[]}],"git":{"createdTime":1686726771000,"updatedTime":1709597584000,"contributors":[{"name":"simeis147","email":"cpdong7@gmail.com","commits":2}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"ComputerBasics/Algorithm/05DoublePointer/doublePointer06.md","localizedDate":"2024年3月4日","excerpt":"\\n<p><a href=\\"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">19.删除链表的倒数第N个节点</a></p>\\n<h2>写法</h2>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">ListNode</span> <span class=\\"token function\\">removeNthFromEnd</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ListNode</span> head<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">ListNode</span> dummyNode <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ListNode</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    dummyNode<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> head<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token class-name\\">ListNode</span> fastIndex <span class=\\"token operator\\">=</span> dummyNode<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">ListNode</span> slowIndex <span class=\\"token operator\\">=</span> dummyNode<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 只要快慢指针相差 n 个结点即可</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> n  <span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span> \\n        fastIndex <span class=\\"token operator\\">=</span> fastIndex<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>fastIndex <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        fastIndex <span class=\\"token operator\\">=</span> fastIndex<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n        slowIndex <span class=\\"token operator\\">=</span> slowIndex<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">//此时 slowIndex 的位置就是待删除元素的前一个位置。</span>\\n    <span class=\\"token comment\\">//具体情况可自己画一个链表长度为 3 的图来模拟代码来理解</span>\\n    slowIndex<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> slowIndex<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> dummyNode<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
